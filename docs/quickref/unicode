How to enter various non-ASCII characters in editors

Vim users see ":help digraph-table" and ":digraphs".

Unix/X11 users see
http://www.gentoo.org/news/en/gwn/20041206-newsletter.xml#doc_chap8
for how to enable the Compose Key.  Note that the compose combinations
here are a de facto X11R6 standard, and do not necessarily correspond
to the compose combinations available when you use your "compose" key.
    
    Unicode     ASCII                        key sequence
    char        fallback    Vim        Emacs       Unix Compose Key combination

    «           <<          ^k < <     C-x 8 <     Compose < <
    »           >>          ^k > >     C-x 8 >     Compose > >
    ¥           Y           ^k Y e     C-x 8 Y     Compose Y =

Set.pm operators (included for reference):
    ≠           !=
    ∩           *
    ∪           +
    ∖           -
    ⊂           <
    ⊃           >
    ⊆           <=
    ⊇           >=
    ⊄      !( $a < $b ) 
    ⊅      !( $a > $b )
    ⊈     !( $a <= $b )
    ⊉     !( $a >= $b )
    ⊊           <
    ⊋           >
    ∋/∍   $a.includes($b)
    ∈/∊   $b.includes($a)
    ∌    !$a.includes($b)
    ∉    !$b.includes($a)


Other unicode characters used as operators in Perl 6 programs should
be added here, so long as the /intent/ of the Unicode code point is an
operator.  That is, this shouldn't be a "that glyph looks the most
like this concept" thing.  If it's not their intended use, don't use
them :).

So, these *might* be considered not too awful;

    ×           *
    ¬           !
    ∕           /
    ≡          =:=
    ≔           :=
  ⩴ or ≝       ::=
  ≈ or ≊        ~~
    …          ...
    √          sqrt()
    ∧           &&
    ∨           ||
    ∣           mod  (? bit of a stretch, perhaps)
   ⌈$x⌉        ceil($x)
   ⌊$x⌋        floor($x)


However I think it is a BAD idea that the following unicode characters
be abused; however ❝cute❞ it might be…

    ╳           *
    ∗           *
    ⊗           *
✱✲✳✴✵✶✷✸✹ etc   *
   ⟨ ⟩         < >
   ⟪ ⟫         « »        (er, I mean << >> ;-) )
    →           ->
    ‼          !(!($a))   (ie, cast to boolean)
   ⁇ ∷        ?? ::
    ∥         || or //
    ¹           **1       (as these glyphs are just "superscript 1" etc)
    ²           **2
    ³           **3
    ☂         eval{ }
    ☝         warn
    ⋯          ...
    ☣          ...
    ☠          !!!
    ☢          ???
   ✁          HERE-doc
   ✃
    ☮         exit(0);

