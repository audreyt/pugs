### comp_unit 
make (IRx1::CompUnit->new(statements=>$_->{statementlist}->item))
### statementlist 
 make([map {$_->item} @{$_->{statement}}])
### statement control
make ($_->{statement_control}->item) 
### statement expr

            if ($_->{EXPR}{noun}) {
                make ($_->{EXPR}{noun}->item)
            }
        
### statement_control:use 
make(IRx1::Use->new(module_name=>$_->{module_name}->item))
### noun 

        make($_->{term}->item) if $_->{term};
        make($_->{value}->item) if $_->{value}; 
    
### arglist 

        if ($_->{EXPR}{infix} && $_->{EXPR}{infix}->item eq ',') {
            make (IRx1::Capture->new(arguments=>[map {$_->{noun}{''}} @{$_->{EXPR}{list}}]));
        } elsif ($_->{EXPR}{noun}) {
            make (IRx1::Capture->new(arguments=>[$_->{EXPR}{noun}->item]));
        }
    
### value 
 make(IRx1::Buf->new(buf=>$_->{quote}{nibble}->item)) if $_->{quote} 
### term:name listop args

            make (IRx1::Apply->new(function=>$_->{name}->item,capture=>$_->{arglist}->item));
        
