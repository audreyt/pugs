=head1 TITLE

Data::Escape - simple string escaping implemented in PIR

=head1 SYNOPSIS

    ...

    load_bytecode "library/Data/Escape.imc"

    .local pmc escape

    escape = find_global "Data::Escape", "String"

    str = escape( str, "'" )

    ...


=head1 DESCRIPTION

This library escapes data to make it usable in PIR and C code.

=cut

=head1 FUNCTIONS

This library provides the following function:

=over 4

=item str = String( str, char )

A simple string escaping function.

=over 4

=item C<str>

The string to escape.

=item C<char>

The quote character used for printing, either ' or ".

=back

This function returns the quoted string.

=cut

.namespace ["Data::Escape"]

.sub String
    .param string str
    .param string char
    .local string ret
    .local int i
    .local int j
    .local int c
    .local string tmp

    i = 0
    j = length str
    null ret
LOOP:
    if i >= j goto END
    tmp = str[i]
    ord c, tmp

    if c > 40 goto gt40
    if c > 31 goto gt31

    if c > 0 goto n00
    set tmp, "\\0"
    branch DONE
n00:

    # \t
    if c != 9 goto n09
    set tmp, "\\t"
    branch DONE
n09:

    # \n
    if c != 10 goto n10
    set tmp, "\\n"
    branch DONE
n10:

    # \r
    if c != 13 goto n13
    set tmp, "\\r"
    branch DONE
n13:

    # encode the value as an octal number
    tmp = "\\"
    $P0 = new .PerlArray
    push $P0, c
    $S0 = sprintf "%o", $P0
    concat tmp, $S0
    branch DONE
    
gt31: # ascii codes greater than 31 below

    # "
    ne char, '"', n34
    if c != 34 goto n34
    set tmp, "\\\""
    branch DONE
n34:

    # '
    ne char, "'", n39
    if c != 34 goto n39
    set tmp, "\\'"
    branch DONE
n39:

gt40: # ascii codes greater than 40 below

    if c != 92 goto DONE 
    set tmp, "\\\\" 
    branch DONE

DONE:
    concat ret, tmp
    inc i
    branch LOOP
END:
    .return(ret)
.end

=back

=head1 AUTHOR

Jens Rieks E<lt>parrot at jensbeimsurfen dot deE<gt> is the author
and maintainer.
Please send patches and suggestions to the Perl 6 Internals mailing list.

=head1 COPYRIGHT

Copyright (c) 2004, the Perl Foundation.

=cut
