{

    package sm0p;

    # Do not edit this file - Perl 5 generated by HASH(0x92a50ac)
    # AUTHORS, COPYRIGHT: Please look at the source file.
    use v5;
    use strict;
    no strict "vars";
    use constant KP6_DISABLE_INSECURE_CODE => 0;
    use KindaPerl6::Runtime::Perl5::Runtime;
    my $_MODIFIED;
    INIT { $_MODIFIED = {} }
    INIT { $_ = ::DISPATCH( $::Scalar, "new", { modified => $_MODIFIED, name => "$_" } ); }
    do {
        do {
            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $::sm0p ), "true" ), "p5landish" ) ) {
                do { }
            }
            else {
                do {
                    do {
                        ::MODIFIED($::sm0p);
                        $::sm0p = ::DISPATCH( ::DISPATCH( $::Class, 'new', ::DISPATCH( $::Str, 'new', 'sm0p' ) ), 'PROTOTYPE', );
                        }
                    }
            }
        };
        ::DISPATCH( ::DISPATCH( $::sm0p, 'HOW', ), 'add_parent', ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ) );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'frame' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token frame at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'identifier', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    do {
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                            'STORE',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            )
                                                                        );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        my $_tmp1 = do {
                                                            do {
                                                                my $m2;
                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                do {
                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                        do {
                                                                            ::DISPATCH_VAR(
                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                'STORE',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                )
                                                                            );
                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                            }
                                                                    }
                                                                    else {
                                                                        do {
                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                            }
                                                                    }
                                                                    }
                                                                }
                                                        };
                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                            ? do {
                                                            my $_tmp1 = do {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                }
                                                                        }
                                                                        else {
                                                                            do {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', '=' ),
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY', $str,
                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                    )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        do {
                                                                                            ::DISPATCH_VAR(
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                'STORE',
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                )
                                                                                            );
                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                            }
                                                                                    }
                                                                                    else {
                                                                                        do {
                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                            }
                                                                                    }
                                                                                    }
                                                                                }
                                                                        }
                                                                        }
                                                                    }
                                                            };
                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                ? do {
                                                                my $_tmp1 = do {
                                                                    do {
                                                                        my $m2;
                                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                        do {
                                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                do {
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        )
                                                                                    );
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                    }
                                                                            }
                                                                            else {
                                                                                do {
                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                    }
                                                                            }
                                                                            }
                                                                        }
                                                                };
                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                    ? do {
                                                                    my $_tmp1 = do {
                                                                        do {
                                                                            do {
                                                                                if (::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                ::DISPATCH( $::Int, 'new', 6 )
                                                                                            ),
                                                                                            "true"
                                                                                        ),
                                                                                        "p5landish"
                                                                                    )
                                                                                    )
                                                                                {
                                                                                    do {
                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                        }
                                                                                }
                                                                                else {
                                                                                    do {
                                                                                        do {
                                                                                            if (::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( $::Str, 'new', 'q:sm0p' ),
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY', $str,
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                ::DISPATCH( $::Int, 'new', 6 )
                                                                                                            )
                                                                                                        ),
                                                                                                        "true"
                                                                                                    ),
                                                                                                    "p5landish"
                                                                                                )
                                                                                                )
                                                                                            {
                                                                                                do {
                                                                                                    ::DISPATCH_VAR(
                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                        'STORE',
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( $::Int, 'new', 6 ),
                                                                                                            ::DISPATCH( $MATCH, 'to', )
                                                                                                        )
                                                                                                    );
                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                    }
                                                                                            }
                                                                                            else {
                                                                                                do {
                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                    }
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                }
                                                                                }
                                                                            }
                                                                    };
                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                        ? do {
                                                                        my $_tmp1 = do {
                                                                            do {
                                                                                my $m2;
                                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                do {
                                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                        do {
                                                                                            ::DISPATCH_VAR(
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                'STORE',
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                )
                                                                                            );
                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                            }
                                                                                    }
                                                                                    else {
                                                                                        do {
                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                            }
                                                                                    }
                                                                                    }
                                                                                }
                                                                        };
                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                            ? do {
                                                                            my $_tmp1 = do {
                                                                                do {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                }
                                                                                        }
                                                                                        else {
                                                                                            do {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $::Str, 'new', '{' ),
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY', $str,
                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        do {
                                                                                                            ::DISPATCH_VAR(
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                'STORE',
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                                )
                                                                                                            );
                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                            }
                                                                                                    }
                                                                                                    else {
                                                                                                        do {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                            }
                                                                                                    }
                                                                                                    }
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                    }
                                                                            };
                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                ? do {
                                                                                my $_tmp1 = do {
                                                                                    do {
                                                                                        my $m2;
                                                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                        do {
                                                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                do {
                                                                                                    ::DISPATCH_VAR(
                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                        'STORE',
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        )
                                                                                                    );
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                    }
                                                                                            }
                                                                                            else {
                                                                                                do {
                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                    }
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                };
                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                    ? do {
                                                                                    my $_tmp1 = do {
                                                                                        do {
                                                                                            my $m2;
                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'nodes', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                            do {
                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                    do {
                                                                                                        ::DISPATCH_VAR(
                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                            'STORE',
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                                                            )
                                                                                                        );
                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'nodes' ) ), 'STORE', $m2 );
                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                        }
                                                                                                }
                                                                                                else {
                                                                                                    do {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                        }
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                    };
                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                        ? do {
                                                                                        my $_tmp1 = do {
                                                                                            do {
                                                                                                my $m2;
                                                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                do {
                                                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                        do {
                                                                                                            ::DISPATCH_VAR(
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                'STORE',
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                )
                                                                                                            );
                                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                            }
                                                                                                    }
                                                                                                    else {
                                                                                                        do {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                            }
                                                                                                    }
                                                                                                    }
                                                                                                }
                                                                                        };
                                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                            ? do {
                                                                                            my $_tmp1 = do {
                                                                                                do {
                                                                                                    do {
                                                                                                        if (::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    ),
                                                                                                                    "true"
                                                                                                                ),
                                                                                                                "p5landish"
                                                                                                            )
                                                                                                            )
                                                                                                        {
                                                                                                            do {
                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                }
                                                                                                        }
                                                                                                        else {
                                                                                                            do {
                                                                                                                do {
                                                                                                                    if (::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                    'APPLY',
                                                                                                                                    ::DISPATCH( $::Str, 'new', '}' ),
                                                                                                                                    ::DISPATCH(
                                                                                                                                        ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                        'APPLY', $str,
                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                    )
                                                                                                                                ),
                                                                                                                                "true"
                                                                                                                            ),
                                                                                                                            "p5landish"
                                                                                                                        )
                                                                                                                        )
                                                                                                                    {
                                                                                                                        do {
                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                'STORE',
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                    'APPLY',
                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                                                )
                                                                                                                            );
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                            }
                                                                                                                    }
                                                                                                                    else {
                                                                                                                        do {
                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                            }
                                                                                                                    }
                                                                                                                    }
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                    }
                                                                                            };
                                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                ? do {
                                                                                                my $_tmp1 = do {
                                                                                                    do {
                                                                                                        my $m2;
                                                                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                        do {
                                                                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                do {
                                                                                                                    ::DISPATCH_VAR(
                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                        'STORE',
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                        )
                                                                                                                    );
                                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                    }
                                                                                                            }
                                                                                                            else {
                                                                                                                do {
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                    }
                                                                                                            }
                                                                                                            }
                                                                                                        }
                                                                                                };
                                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                    ? do {
                                                                                                    my $_tmp1 = do {
                                                                                                        do {
                                                                                                            my $pos1;
                                                                                                            $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                                                                            INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                                                                            ::DISPATCH_VAR(
                                                                                                                $pos1, 'STORE',
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                )
                                                                                                            );
                                                                                                            do {
                                                                                                                my $_tmp1 = do {
                                                                                                                    do {
                                                                                                                        do {
                                                                                                                            do {
                                                                                                                                do {
                                                                                                                                    if (::DISPATCH(
                                                                                                                                            ::DISPATCH(
                                                                                                                                                ::DISPATCH(
                                                                                                                                                    (   $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                            || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                    ),
                                                                                                                                                    'APPLY',
                                                                                                                                                    ::DISPATCH(
                                                                                                                                                        ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                        'APPLY', $str
                                                                                                                                                    ),
                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                ),
                                                                                                                                                "true"
                                                                                                                                            ),
                                                                                                                                            "p5landish"
                                                                                                                                        )
                                                                                                                                        )
                                                                                                                                    {
                                                                                                                                        do {
                                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                            }
                                                                                                                                    }
                                                                                                                                    else {
                                                                                                                                        do {
                                                                                                                                            do {
                                                                                                                                                if (::DISPATCH(
                                                                                                                                                        ::DISPATCH(
                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                (   $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                ),
                                                                                                                                                                'APPLY',
                                                                                                                                                                ::DISPATCH( $::Str, 'new', ';' ),
                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                    ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                                    'APPLY', $str,
                                                                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                )
                                                                                                                                                            ),
                                                                                                                                                            "true"
                                                                                                                                                        ),
                                                                                                                                                        "p5landish"
                                                                                                                                                    )
                                                                                                                                                    )
                                                                                                                                                {
                                                                                                                                                    do {
                                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                            'STORE',
                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                (   $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                ),
                                                                                                                                                                'APPLY',
                                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                                ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                            )
                                                                                                                                                        );
                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                        }
                                                                                                                                                }
                                                                                                                                                else {
                                                                                                                                                    do {
                                                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                        }
                                                                                                                                                }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                    }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                };
                                                                                                                ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                                                                                                    do {
                                                                                                                        ::DISPATCH_VAR(
                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                            'STORE',
                                                                                                                            ::DISPATCH(
                                                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                            )
                                                                                                                        );
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                    };
                                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                        ? do {
                                                                                                        do {
                                                                                                            my $ret;
                                                                                                            $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                                                            INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                                                            ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block1_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                                                            do {
                                                                                                                if (::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                'APPLY',
                                                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                                            ),
                                                                                                                            "true"
                                                                                                                        ),
                                                                                                                        "p5landish"
                                                                                                                    )
                                                                                                                    )
                                                                                                                {
                                                                                                                    do {
                                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ),
                                                                                                                            'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                                        ::DISPATCH_VAR(
                                                                                                                            ::DISPATCH(
                                                                                                                                (   $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                ),
                                                                                                                                'APPLY',
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                    'APPLY',
                                                                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                                                ),
                                                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                                                                do {
                                                                                                                                    ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                                                        = ::DISPATCH( $::Scalar, 'new', );
                                                                                                                                    }
                                                                                                                            ),
                                                                                                                            'STORE',
                                                                                                                            $::Undef
                                                                                                                        );
                                                                                                                        }
                                                                                                                }
                                                                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                            };
                                                                                                            do {
                                                                                                                if (::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                                                            ),
                                                                                                                            "true"
                                                                                                                        ),
                                                                                                                        "p5landish"
                                                                                                                    )
                                                                                                                    )
                                                                                                                {
                                                                                                                    do {
                                                                                                                        do {
                                                                                                                            if (::DISPATCH(
                                                                                                                                    ::DISPATCH(
                                                                                                                                        ::DISPATCH(
                                                                                                                                            ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                                                            'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                                                        ),
                                                                                                                                        "true"
                                                                                                                                    ),
                                                                                                                                    "p5landish"
                                                                                                                                )
                                                                                                                                )
                                                                                                                            {
                                                                                                                                do {
                                                                                                                                    ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                        'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                                                    }
                                                                                                                            }
                                                                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                                        };
                                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                                        return ($MATCH);
                                                                                                                        }
                                                                                                                }
                                                                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                            };
                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                            }
                                                                                                        }
                                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                    }
                                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                }
                                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                                            }
                                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                                        }
                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                    }
                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                }
                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                            }
                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                        }
                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                    }
                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                }
                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                            }
                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token frame returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token frame returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'nodes' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token nodes at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        my $_tmp1 = do {
                                            do {
                                                do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'node', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    do {
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                            'STORE',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            )
                                                                        );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'node' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        do {
                                                            my $pos1;
                                                            $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                            INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                            ::DISPATCH_VAR(
                                                                $pos1, 'STORE',
                                                                ::DISPATCH(
                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                    'APPLY',
                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                )
                                                            );
                                                            do {
                                                                my $_tmp1 = do {
                                                                    do {
                                                                        do {
                                                                            my $_tmp1 = do {
                                                                                do {
                                                                                    my $m2;
                                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'nodes', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                    do {
                                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                            do {
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE',
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH( $m2, 'to', ),
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    )
                                                                                                );
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'nodes' ) ), 'STORE', $m2 );
                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                }
                                                                                        }
                                                                                        else {
                                                                                            do {
                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                    }
                                                                            };
                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                ? do {
                                                                                do {
                                                                                    my $ret;
                                                                                    $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                                    INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                                    ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block2_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH(
                                                                                                        (   $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                        ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                        ),
                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                                        do {
                                                                                                            ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                            }
                                                                                                    ),
                                                                                                    'STORE',
                                                                                                    $::Undef
                                                                                                );
                                                                                                }
                                                                                        }
                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                    };
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                                    'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        do {
                                                                                                            ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                            }
                                                                                                    }
                                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                };
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                return ($MATCH);
                                                                                                }
                                                                                        }
                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                    };
                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                    }
                                                                                }
                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                            }
                                                                        }
                                                                };
                                                                ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                                                    do {
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                            'STORE',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 )
                                                                            )
                                                                        );
                                                                        do {
                                                                            my $_tmp1 = ::DISPATCH( $::Int, 'new', 1 );
                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                ? do {
                                                                                do {
                                                                                    my $ret;
                                                                                    $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                                    INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                                    ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block3_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH(
                                                                                                        (   $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                        ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                        ),
                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                                        do {
                                                                                                            ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                            }
                                                                                                    ),
                                                                                                    'STORE',
                                                                                                    $::Undef
                                                                                                );
                                                                                                }
                                                                                        }
                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                    };
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                                    'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        do {
                                                                                                            ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                            }
                                                                                                    }
                                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                };
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                return ($MATCH);
                                                                                                }
                                                                                        }
                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                    };
                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                    }
                                                                                }
                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                }
                                        };
                                        ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                            do {
                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                    'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                do {
                                                    my $_tmp1 = ::DISPATCH( $::Int, 'new', 1 );
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        do {
                                                            my $ret;
                                                            $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                            INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                            ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block4_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                ),
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                do {
                                                                                    ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                    }
                                                                            ),
                                                                            'STORE',
                                                                            $::Undef
                                                                        );
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        return ($MATCH);
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                            }
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token nodes returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token nodes returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'node' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token node at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        my $_tmp1 = do {
                                            do {
                                                do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'node_empty', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    do {
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                            'STORE',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            )
                                                                        );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'node_empty' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        do {
                                                            my $ret;
                                                            $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                            INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                            ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block5_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                ),
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                do {
                                                                                    ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                    }
                                                                            ),
                                                                            'STORE',
                                                                            $::Undef
                                                                        );
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        return ($MATCH);
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                            }
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                }
                                        };
                                        ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                            my $_tmp1 = do {
                                                do {
                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                        'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                    do {
                                                        my $_tmp1 = do {
                                                            do {
                                                                my $m2;
                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'node_result', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                do {
                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                        do {
                                                                            ::DISPATCH_VAR(
                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                'STORE',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                )
                                                                            );
                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'node_result' ) ), 'STORE', $m2 );
                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                            }
                                                                    }
                                                                    else {
                                                                        do {
                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                            }
                                                                    }
                                                                    }
                                                                }
                                                        };
                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                            ? do {
                                                            do {
                                                                my $ret;
                                                                $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block6_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                do {
                                                                    if (::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                ),
                                                                                "true"
                                                                            ),
                                                                            "p5landish"
                                                                        )
                                                                        )
                                                                    {
                                                                        do {
                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                            ::DISPATCH_VAR(
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                    ),
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                    do {
                                                                                        ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                        }
                                                                                ),
                                                                                'STORE',
                                                                                $::Undef
                                                                            );
                                                                            }
                                                                    }
                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                };
                                                                do {
                                                                    if (::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                ),
                                                                                "true"
                                                                            ),
                                                                            "p5landish"
                                                                        )
                                                                        )
                                                                    {
                                                                        do {
                                                                            do {
                                                                                if (::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                            ),
                                                                                            "true"
                                                                                        ),
                                                                                        "p5landish"
                                                                                    )
                                                                                    )
                                                                                {
                                                                                    do {
                                                                                        ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                        }
                                                                                }
                                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                            };
                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                            return ($MATCH);
                                                                            }
                                                                    }
                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                };
                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                }
                                                            }
                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                        }
                                                    }
                                            };
                                            ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                                my $_tmp1 = do {
                                                    do {
                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                        do {
                                                            my $_tmp1 = do {
                                                                do {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'node_capturized', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            do {
                                                                                ::DISPATCH_VAR(
                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                    'STORE',
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $m2, 'to', ),
                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                    )
                                                                                );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'node_capturized' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                }
                                                                        }
                                                                        else {
                                                                            do {
                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                }
                                                                        }
                                                                        }
                                                                    }
                                                            };
                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                ? do {
                                                                do {
                                                                    my $ret;
                                                                    $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                    INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                    ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block7_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                ::DISPATCH_VAR(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                        ),
                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                        do {
                                                                                            ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                            }
                                                                                    ),
                                                                                    'STORE',
                                                                                    $::Undef
                                                                                );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                    'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        do {
                                                                                            ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                            }
                                                                                    }
                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                };
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                return ($MATCH);
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                                }
                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                                    do {
                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                        do {
                                                            my $_tmp1 = do {
                                                                do {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'node_full', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            do {
                                                                                ::DISPATCH_VAR(
                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                    'STORE',
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $m2, 'to', ),
                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                    )
                                                                                );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'node_full' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                }
                                                                        }
                                                                        else {
                                                                            do {
                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                }
                                                                        }
                                                                        }
                                                                    }
                                                            };
                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                ? do {
                                                                do {
                                                                    my $ret;
                                                                    $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                    INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                    ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block8_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                ::DISPATCH_VAR(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                        ),
                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                        do {
                                                                                            ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                            }
                                                                                    ),
                                                                                    'STORE',
                                                                                    $::Undef
                                                                                );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                    'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        do {
                                                                                            ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                            }
                                                                                    }
                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                };
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                return ($MATCH);
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                                }
                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token node returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token node returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'node_empty' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token node_empty at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', ';' ),
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY', $str,
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                            )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                            ::DISPATCH( $MATCH, 'to', )
                                                                                        )
                                                                                    );
                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                    }
                                                                            }
                                                                            else {
                                                                                do {
                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                    }
                                                                            }
                                                                            }
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        do {
                                                            my $ret;
                                                            $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                            INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                            ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block9_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                ),
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                do {
                                                                                    ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                    }
                                                                            ),
                                                                            'STORE',
                                                                            $::Undef
                                                                        );
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        return ($MATCH);
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                            }
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token node_empty returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token node_empty returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'node_full' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token node_full at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'responder', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    do {
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                            'STORE',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            )
                                                                        );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'responder' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        my $_tmp1 = do {
                                                            do {
                                                                do {
                                                                    if (::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                ),
                                                                                "true"
                                                                            ),
                                                                            "p5landish"
                                                                        )
                                                                        )
                                                                    {
                                                                        do {
                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                            }
                                                                    }
                                                                    else {
                                                                        do {
                                                                            do {
                                                                                if (::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Str, 'new', '.' ),
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY', $str,
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                )
                                                                                            ),
                                                                                            "true"
                                                                                        ),
                                                                                        "p5landish"
                                                                                    )
                                                                                    )
                                                                                {
                                                                                    do {
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE',
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH( $MATCH, 'to', )
                                                                                            )
                                                                                        );
                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                        }
                                                                                }
                                                                                else {
                                                                                    do {
                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                        }
                                                                                }
                                                                                }
                                                                            }
                                                                    }
                                                                    }
                                                                }
                                                        };
                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                            ? do {
                                                            my $_tmp1 = do {
                                                                do {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'identifier', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            do {
                                                                                ::DISPATCH_VAR(
                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                    'STORE',
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $m2, 'to', ),
                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                    )
                                                                                );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                }
                                                                        }
                                                                        else {
                                                                            do {
                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                }
                                                                        }
                                                                        }
                                                                    }
                                                            };
                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                ? do {
                                                                my $_tmp1 = do {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                    }
                                                                            }
                                                                            else {
                                                                                do {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH( $::Str, 'new', '(' ),
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY', $str,
                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                        )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE',
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                        ::DISPATCH( $MATCH, 'to', )
                                                                                                    )
                                                                                                );
                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                }
                                                                                        }
                                                                                        else {
                                                                                            do {
                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                    }
                                                                            }
                                                                            }
                                                                        }
                                                                };
                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                    ? do {
                                                                    my $_tmp1 = do {
                                                                        do {
                                                                            my $pos1;
                                                                            $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                                            INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                                            ::DISPATCH_VAR(
                                                                                $pos1, 'STORE',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                )
                                                                            );
                                                                            do {
                                                                                my $_tmp1 = do {
                                                                                    do {
                                                                                        do {
                                                                                            do {
                                                                                                my $m2;
                                                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'invocant', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                do {
                                                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                        do {
                                                                                                            ::DISPATCH_VAR(
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                'STORE',
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                )
                                                                                                            );
                                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'invocant' ) ), 'STORE', $m2 );
                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                            }
                                                                                                    }
                                                                                                    else {
                                                                                                        do {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                            }
                                                                                                    }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                };
                                                                                ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                                                                    do {
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE',
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 )
                                                                                            )
                                                                                        );
                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                    };
                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                        ? do {
                                                                        my $_tmp1 = do {
                                                                            do {
                                                                                my $m2;
                                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                do {
                                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                        do {
                                                                                            ::DISPATCH_VAR(
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                'STORE',
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                )
                                                                                            );
                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                            }
                                                                                    }
                                                                                    else {
                                                                                        do {
                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                            }
                                                                                    }
                                                                                    }
                                                                                }
                                                                        };
                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                            ? do {
                                                                            my $_tmp1 = do {
                                                                                do {
                                                                                    my $m2;
                                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'named', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                    do {
                                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                            do {
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE',
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH( $m2, 'to', ),
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    )
                                                                                                );
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'named' ) ), 'STORE', $m2 );
                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                }
                                                                                        }
                                                                                        else {
                                                                                            do {
                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                    }
                                                                            };
                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                ? do {
                                                                                my $_tmp1 = do {
                                                                                    do {
                                                                                        my $m2;
                                                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                        do {
                                                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                do {
                                                                                                    ::DISPATCH_VAR(
                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                        'STORE',
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        )
                                                                                                    );
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                    }
                                                                                            }
                                                                                            else {
                                                                                                do {
                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                    }
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                };
                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                    ? do {
                                                                                    my $_tmp1 = do {
                                                                                        do {
                                                                                            my $m2;
                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'positional', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                            do {
                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                    do {
                                                                                                        ::DISPATCH_VAR(
                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                            'STORE',
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                                                            )
                                                                                                        );
                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'positional' ) ), 'STORE', $m2 );
                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                        }
                                                                                                }
                                                                                                else {
                                                                                                    do {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                        }
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                    };
                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                        ? do {
                                                                                        my $_tmp1 = do {
                                                                                            do {
                                                                                                my $m2;
                                                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                do {
                                                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                        do {
                                                                                                            ::DISPATCH_VAR(
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                'STORE',
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                )
                                                                                                            );
                                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                            }
                                                                                                    }
                                                                                                    else {
                                                                                                        do {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                            }
                                                                                                    }
                                                                                                    }
                                                                                                }
                                                                                        };
                                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                            ? do {
                                                                                            my $_tmp1 = do {
                                                                                                do {
                                                                                                    do {
                                                                                                        if (::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    ),
                                                                                                                    "true"
                                                                                                                ),
                                                                                                                "p5landish"
                                                                                                            )
                                                                                                            )
                                                                                                        {
                                                                                                            do {
                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                }
                                                                                                        }
                                                                                                        else {
                                                                                                            do {
                                                                                                                do {
                                                                                                                    if (::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                    'APPLY',
                                                                                                                                    ::DISPATCH( $::Str, 'new', ')' ),
                                                                                                                                    ::DISPATCH(
                                                                                                                                        ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                        'APPLY', $str,
                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                    )
                                                                                                                                ),
                                                                                                                                "true"
                                                                                                                            ),
                                                                                                                            "p5landish"
                                                                                                                        )
                                                                                                                        )
                                                                                                                    {
                                                                                                                        do {
                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                'STORE',
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                    'APPLY',
                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                                                )
                                                                                                                            );
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                            }
                                                                                                                    }
                                                                                                                    else {
                                                                                                                        do {
                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                            }
                                                                                                                    }
                                                                                                                    }
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                    }
                                                                                            };
                                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                ? do {
                                                                                                my $_tmp1 = do {
                                                                                                    do {
                                                                                                        my $m2;
                                                                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                        do {
                                                                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                do {
                                                                                                                    ::DISPATCH_VAR(
                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                        'STORE',
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                        )
                                                                                                                    );
                                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                    }
                                                                                                            }
                                                                                                            else {
                                                                                                                do {
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                    }
                                                                                                            }
                                                                                                            }
                                                                                                        }
                                                                                                };
                                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                    ? do {
                                                                                                    my $_tmp1 = do {
                                                                                                        do {
                                                                                                            do {
                                                                                                                if (::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                'APPLY',
                                                                                                                                ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                            ),
                                                                                                                            "true"
                                                                                                                        ),
                                                                                                                        "p5landish"
                                                                                                                    )
                                                                                                                    )
                                                                                                                {
                                                                                                                    do {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                        }
                                                                                                                }
                                                                                                                else {
                                                                                                                    do {
                                                                                                                        do {
                                                                                                                            if (::DISPATCH(
                                                                                                                                    ::DISPATCH(
                                                                                                                                        ::DISPATCH(
                                                                                                                                            ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                            'APPLY',
                                                                                                                                            ::DISPATCH( $::Str, 'new', ';' ),
                                                                                                                                            ::DISPATCH(
                                                                                                                                                ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                'APPLY', $str,
                                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                            )
                                                                                                                                        ),
                                                                                                                                        "true"
                                                                                                                                    ),
                                                                                                                                    "p5landish"
                                                                                                                                )
                                                                                                                                )
                                                                                                                            {
                                                                                                                                do {
                                                                                                                                    ::DISPATCH_VAR(
                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                        'STORE',
                                                                                                                                        ::DISPATCH(
                                                                                                                                            (   $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                            ),
                                                                                                                                            'APPLY',
                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                            ::DISPATCH( $MATCH, 'to', )
                                                                                                                                        )
                                                                                                                                    );
                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                    }
                                                                                                                            }
                                                                                                                            else {
                                                                                                                                do {
                                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                    }
                                                                                                                            }
                                                                                                                            }
                                                                                                                        }
                                                                                                                }
                                                                                                                }
                                                                                                            }
                                                                                                    };
                                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                        ? do {
                                                                                                        my $_tmp1 = do {
                                                                                                            do {
                                                                                                                my $m2;
                                                                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                                do {
                                                                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                        do {
                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                'STORE',
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                    'APPLY',
                                                                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                                )
                                                                                                                            );
                                                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                            }
                                                                                                                    }
                                                                                                                    else {
                                                                                                                        do {
                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                            }
                                                                                                                    }
                                                                                                                    }
                                                                                                                }
                                                                                                        };
                                                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                            ? do {
                                                                                                            do {
                                                                                                                my $ret;
                                                                                                                $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                                                                INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                                                                ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block10_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                                                                do {
                                                                                                                    if (::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                    'APPLY',
                                                                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                                                ),
                                                                                                                                "true"
                                                                                                                            ),
                                                                                                                            "p5landish"
                                                                                                                        )
                                                                                                                        )
                                                                                                                    {
                                                                                                                        do {
                                                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ),
                                                                                                                                'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                ::DISPATCH(
                                                                                                                                    (   $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                                            || ::DISPATCH( $::Routine, "new", )
                                                                                                                                    ),
                                                                                                                                    'APPLY',
                                                                                                                                    ::DISPATCH(
                                                                                                                                        ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                        'APPLY',
                                                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                                                    ),
                                                                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                                                                    do {
                                                                                                                                        ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                                                            = ::DISPATCH( $::Scalar, 'new', );
                                                                                                                                        }
                                                                                                                                ),
                                                                                                                                'STORE',
                                                                                                                                $::Undef
                                                                                                                            );
                                                                                                                            }
                                                                                                                    }
                                                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                                };
                                                                                                                do {
                                                                                                                    if (::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                    'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                                                                ),
                                                                                                                                "true"
                                                                                                                            ),
                                                                                                                            "p5landish"
                                                                                                                        )
                                                                                                                        )
                                                                                                                    {
                                                                                                                        do {
                                                                                                                            do {
                                                                                                                                if (::DISPATCH(
                                                                                                                                        ::DISPATCH(
                                                                                                                                            ::DISPATCH(
                                                                                                                                                ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                                                                'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                                                            ),
                                                                                                                                            "true"
                                                                                                                                        ),
                                                                                                                                        "p5landish"
                                                                                                                                    )
                                                                                                                                    )
                                                                                                                                {
                                                                                                                                    do {
                                                                                                                                        ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                            'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                                                        }
                                                                                                                                }
                                                                                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                                            };
                                                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                                            return ($MATCH);
                                                                                                                            }
                                                                                                                    }
                                                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                                };
                                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                }
                                                                                                            }
                                                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                        }
                                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                    }
                                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                }
                                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                                            }
                                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                                        }
                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                    }
                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                }
                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                            }
                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                        }
                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                    }
                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                }
                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                            }
                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token node_full returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token node_full returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'node_capturized' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token node_capturized at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'responder', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    do {
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                            'STORE',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            )
                                                                        );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'responder' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        my $_tmp1 = do {
                                                            do {
                                                                do {
                                                                    if (::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                ),
                                                                                "true"
                                                                            ),
                                                                            "p5landish"
                                                                        )
                                                                        )
                                                                    {
                                                                        do {
                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                            }
                                                                    }
                                                                    else {
                                                                        do {
                                                                            do {
                                                                                if (::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Str, 'new', '.' ),
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY', $str,
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                )
                                                                                            ),
                                                                                            "true"
                                                                                        ),
                                                                                        "p5landish"
                                                                                    )
                                                                                    )
                                                                                {
                                                                                    do {
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE',
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH( $MATCH, 'to', )
                                                                                            )
                                                                                        );
                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                        }
                                                                                }
                                                                                else {
                                                                                    do {
                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                        }
                                                                                }
                                                                                }
                                                                            }
                                                                    }
                                                                    }
                                                                }
                                                        };
                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                            ? do {
                                                            my $_tmp1 = do {
                                                                do {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'identifier', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            do {
                                                                                ::DISPATCH_VAR(
                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                    'STORE',
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $m2, 'to', ),
                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                    )
                                                                                );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                }
                                                                        }
                                                                        else {
                                                                            do {
                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                }
                                                                        }
                                                                        }
                                                                    }
                                                            };
                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                ? do {
                                                                my $_tmp1 = do {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                    }
                                                                            }
                                                                            else {
                                                                                do {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH( $::Str, 'new', '(' ),
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY', $str,
                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                        )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE',
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                        ::DISPATCH( $MATCH, 'to', )
                                                                                                    )
                                                                                                );
                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                }
                                                                                        }
                                                                                        else {
                                                                                            do {
                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                    }
                                                                            }
                                                                            }
                                                                        }
                                                                };
                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                    ? do {
                                                                    my $_tmp1 = do {
                                                                        do {
                                                                            my $m2;
                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                            do {
                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                    do {
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE',
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                                            )
                                                                                        );
                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                        }
                                                                                }
                                                                                else {
                                                                                    do {
                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                        }
                                                                                }
                                                                                }
                                                                            }
                                                                    };
                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                        ? do {
                                                                        my $_tmp1 = do {
                                                                            do {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        do {
                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                            }
                                                                                    }
                                                                                    else {
                                                                                        do {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $::Str, 'new', '|' ),
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY', $str,
                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                )
                                                                                                            ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    do {
                                                                                                        ::DISPATCH_VAR(
                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                            'STORE',
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                ::DISPATCH( $MATCH, 'to', )
                                                                                                            )
                                                                                                        );
                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                        }
                                                                                                }
                                                                                                else {
                                                                                                    do {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                        }
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                    }
                                                                                    }
                                                                                }
                                                                        };
                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                            ? do {
                                                                            my $_tmp1 = do {
                                                                                do {
                                                                                    my $m2;
                                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'identifier2', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                    do {
                                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                            do {
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE',
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH( $m2, 'to', ),
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    )
                                                                                                );
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier2' ) ), 'STORE', $m2 );
                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                }
                                                                                        }
                                                                                        else {
                                                                                            do {
                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                    }
                                                                            };
                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                ? do {
                                                                                my $_tmp1 = do {
                                                                                    do {
                                                                                        my $m2;
                                                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                        do {
                                                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                do {
                                                                                                    ::DISPATCH_VAR(
                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                        'STORE',
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        )
                                                                                                    );
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                    }
                                                                                            }
                                                                                            else {
                                                                                                do {
                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                    }
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                };
                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                    ? do {
                                                                                    my $_tmp1 = do {
                                                                                        do {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                            ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    do {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                        }
                                                                                                }
                                                                                                else {
                                                                                                    do {
                                                                                                        do {
                                                                                                            if (::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Str, 'new', ')' ),
                                                                                                                            ::DISPATCH(
                                                                                                                                ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                'APPLY', $str,
                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                            )
                                                                                                                        ),
                                                                                                                        "true"
                                                                                                                    ),
                                                                                                                    "p5landish"
                                                                                                                )
                                                                                                                )
                                                                                                            {
                                                                                                                do {
                                                                                                                    ::DISPATCH_VAR(
                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                        'STORE',
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                            ::DISPATCH( $MATCH, 'to', )
                                                                                                                        )
                                                                                                                    );
                                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                    }
                                                                                                            }
                                                                                                            else {
                                                                                                                do {
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                    }
                                                                                                            }
                                                                                                            }
                                                                                                        }
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                    };
                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                        ? do {
                                                                                        my $_tmp1 = do {
                                                                                            do {
                                                                                                my $m2;
                                                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                do {
                                                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                        do {
                                                                                                            ::DISPATCH_VAR(
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                'STORE',
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                )
                                                                                                            );
                                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                            }
                                                                                                    }
                                                                                                    else {
                                                                                                        do {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                            }
                                                                                                    }
                                                                                                    }
                                                                                                }
                                                                                        };
                                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                            ? do {
                                                                                            my $_tmp1 = do {
                                                                                                do {
                                                                                                    do {
                                                                                                        if (::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    ),
                                                                                                                    "true"
                                                                                                                ),
                                                                                                                "p5landish"
                                                                                                            )
                                                                                                            )
                                                                                                        {
                                                                                                            do {
                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                }
                                                                                                        }
                                                                                                        else {
                                                                                                            do {
                                                                                                                do {
                                                                                                                    if (::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                    'APPLY',
                                                                                                                                    ::DISPATCH( $::Str, 'new', ';' ),
                                                                                                                                    ::DISPATCH(
                                                                                                                                        ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                        'APPLY', $str,
                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                    )
                                                                                                                                ),
                                                                                                                                "true"
                                                                                                                            ),
                                                                                                                            "p5landish"
                                                                                                                        )
                                                                                                                        )
                                                                                                                    {
                                                                                                                        do {
                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                'STORE',
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                    'APPLY',
                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                                                )
                                                                                                                            );
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                            }
                                                                                                                    }
                                                                                                                    else {
                                                                                                                        do {
                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                            }
                                                                                                                    }
                                                                                                                    }
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                    }
                                                                                            };
                                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                ? do {
                                                                                                my $_tmp1 = do {
                                                                                                    do {
                                                                                                        my $m2;
                                                                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                        do {
                                                                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                do {
                                                                                                                    ::DISPATCH_VAR(
                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                        'STORE',
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                        )
                                                                                                                    );
                                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                    }
                                                                                                            }
                                                                                                            else {
                                                                                                                do {
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                    }
                                                                                                            }
                                                                                                            }
                                                                                                        }
                                                                                                };
                                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                    ? do {
                                                                                                    do {
                                                                                                        my $ret;
                                                                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block11_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                                                        do {
                                                                                                            if (::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY',
                                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                                        ),
                                                                                                                        "true"
                                                                                                                    ),
                                                                                                                    "p5landish"
                                                                                                                )
                                                                                                                )
                                                                                                            {
                                                                                                                do {
                                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ),
                                                                                                                        'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                                    ::DISPATCH_VAR(
                                                                                                                        ::DISPATCH(
                                                                                                                            (   $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                            ),
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH(
                                                                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                'APPLY',
                                                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                                            ),
                                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                                                            do {
                                                                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                                                    = ::DISPATCH( $::Scalar, 'new', );
                                                                                                                                }
                                                                                                                        ),
                                                                                                                        'STORE',
                                                                                                                        $::Undef
                                                                                                                    );
                                                                                                                    }
                                                                                                            }
                                                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                        };
                                                                                                        do {
                                                                                                            if (::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                                                        ),
                                                                                                                        "true"
                                                                                                                    ),
                                                                                                                    "p5landish"
                                                                                                                )
                                                                                                                )
                                                                                                            {
                                                                                                                do {
                                                                                                                    do {
                                                                                                                        if (::DISPATCH(
                                                                                                                                ::DISPATCH(
                                                                                                                                    ::DISPATCH(
                                                                                                                                        ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                                                        'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                                                    ),
                                                                                                                                    "true"
                                                                                                                                ),
                                                                                                                                "p5landish"
                                                                                                                            )
                                                                                                                            )
                                                                                                                        {
                                                                                                                            do {
                                                                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                    'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                                                }
                                                                                                                        }
                                                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                                    };
                                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                                    return ($MATCH);
                                                                                                                    }
                                                                                                            }
                                                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                        };
                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                        }
                                                                                                    }
                                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                }
                                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                                            }
                                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                                        }
                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                    }
                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                }
                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                            }
                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                        }
                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                    }
                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                }
                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                            }
                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token node_capturized returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token node_capturized returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'node_result' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token node_result at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'identifier', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    do {
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                            'STORE',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            )
                                                                        );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        my $_tmp1 = do {
                                                            do {
                                                                my $m2;
                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                do {
                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                        do {
                                                                            ::DISPATCH_VAR(
                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                'STORE',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                )
                                                                            );
                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                            }
                                                                    }
                                                                    else {
                                                                        do {
                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                            }
                                                                    }
                                                                    }
                                                                }
                                                        };
                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                            ? do {
                                                            my $_tmp1 = do {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                }
                                                                        }
                                                                        else {
                                                                            do {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', ';' ),
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY', $str,
                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                    )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        do {
                                                                                            ::DISPATCH_VAR(
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                'STORE',
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                )
                                                                                            );
                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                            }
                                                                                    }
                                                                                    else {
                                                                                        do {
                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                            }
                                                                                    }
                                                                                    }
                                                                                }
                                                                        }
                                                                        }
                                                                    }
                                                            };
                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                ? do {
                                                                do {
                                                                    my $ret;
                                                                    $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                    INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                    ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block12_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                ::DISPATCH_VAR(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                        ),
                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                        do {
                                                                                            ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                            }
                                                                                    ),
                                                                                    'STORE',
                                                                                    $::Undef
                                                                                );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                    'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        do {
                                                                                            ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                            }
                                                                                    }
                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                };
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                return ($MATCH);
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                                }
                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                            }
                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token node_result returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token node_result returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'invocant' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token invocant at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'identifier', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    do {
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                            'STORE',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            )
                                                                        );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        my $_tmp1 = do {
                                                            do {
                                                                my $m2;
                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                do {
                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                        do {
                                                                            ::DISPATCH_VAR(
                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                'STORE',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                )
                                                                            );
                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                            }
                                                                    }
                                                                    else {
                                                                        do {
                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                            }
                                                                    }
                                                                    }
                                                                }
                                                        };
                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                            ? do {
                                                            my $_tmp1 = do {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                }
                                                                        }
                                                                        else {
                                                                            do {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', ':' ),
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY', $str,
                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                    )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        do {
                                                                                            ::DISPATCH_VAR(
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                'STORE',
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                )
                                                                                            );
                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                            }
                                                                                    }
                                                                                    else {
                                                                                        do {
                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                            }
                                                                                    }
                                                                                    }
                                                                                }
                                                                        }
                                                                        }
                                                                    }
                                                            };
                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                ? do {
                                                                my $_tmp1 = do {
                                                                    do {
                                                                        my $m2;
                                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                        do {
                                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                do {
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        )
                                                                                    );
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                    }
                                                                            }
                                                                            else {
                                                                                do {
                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                    }
                                                                            }
                                                                            }
                                                                        }
                                                                };
                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                    ? do {
                                                                    do {
                                                                        my $ret;
                                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block13_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                            ),
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                            do {
                                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                }
                                                                                        ),
                                                                                        'STORE',
                                                                                        $::Undef
                                                                                    );
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                        'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                }
                                                                                        }
                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                    };
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                    return ($MATCH);
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                    }
                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                }
                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                            }
                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token invocant returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token invocant returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'responder' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token responder at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'identifier', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    do {
                                                        my $ret;
                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block14_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                            do {
                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                }
                                                                        ),
                                                                        'STORE',
                                                                        $::Undef
                                                                    );
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    return ($MATCH);
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                        }
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token responder returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token responder returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'positional' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token positional at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        my $_tmp1 = do {
                                            do {
                                                do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'positionals', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    do {
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                            'STORE',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            )
                                                                        );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'positionals' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        do {
                                                            my $ret;
                                                            $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                            INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                            ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block15_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                ),
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                do {
                                                                                    ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                    }
                                                                            ),
                                                                            'STORE',
                                                                            $::Undef
                                                                        );
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        return ($MATCH);
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                            }
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                }
                                        };
                                        ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                            do {
                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                    'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                do {
                                                    do {
                                                        my $ret;
                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block16_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                            do {
                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                }
                                                                        ),
                                                                        'STORE',
                                                                        $::Undef
                                                                    );
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    return ($MATCH);
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token positional returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token positional returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'positionals' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token positionals at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'identifier', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    do {
                                                        my $pos1;
                                                        $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                        INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                        ::DISPATCH_VAR(
                                                            $pos1, 'STORE',
                                                            ::DISPATCH(
                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                'APPLY',
                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                            )
                                                        );
                                                        do {
                                                            my $_tmp1 = do {
                                                                do {
                                                                    do {
                                                                        my $_tmp1 = do {
                                                                            do {
                                                                                my $m2;
                                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                do {
                                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                        do {
                                                                                            ::DISPATCH_VAR(
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                'STORE',
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                )
                                                                                            );
                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                            }
                                                                                    }
                                                                                    else {
                                                                                        do {
                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                            }
                                                                                    }
                                                                                    }
                                                                                }
                                                                        };
                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                            ? do {
                                                                            my $_tmp1 = do {
                                                                                do {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                }
                                                                                        }
                                                                                        else {
                                                                                            do {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $::Str, 'new', ',' ),
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY', $str,
                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        do {
                                                                                                            ::DISPATCH_VAR(
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                'STORE',
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                                )
                                                                                                            );
                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                            }
                                                                                                    }
                                                                                                    else {
                                                                                                        do {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                            }
                                                                                                    }
                                                                                                    }
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                    }
                                                                            };
                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                ? do {
                                                                                my $_tmp1 = do {
                                                                                    do {
                                                                                        my $m2;
                                                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                        do {
                                                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                do {
                                                                                                    ::DISPATCH_VAR(
                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                        'STORE',
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        )
                                                                                                    );
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                    }
                                                                                            }
                                                                                            else {
                                                                                                do {
                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                    }
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                };
                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                    ? do {
                                                                                    my $_tmp1 = do {
                                                                                        do {
                                                                                            my $m2;
                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'positionals', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                            do {
                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                    do {
                                                                                                        ::DISPATCH_VAR(
                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                            'STORE',
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                                                            )
                                                                                                        );
                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'positionals' ) ), 'STORE', $m2 );
                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                        }
                                                                                                }
                                                                                                else {
                                                                                                    do {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                        }
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                    };
                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                        ? do {
                                                                                        do {
                                                                                            my $ret;
                                                                                            $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                                            INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                                            ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block17_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                            ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    do {
                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ),
                                                                                                            'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                        ::DISPATCH_VAR(
                                                                                                            ::DISPATCH(
                                                                                                                (   $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                ),
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                                ),
                                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                                                do {
                                                                                                                    ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                                    }
                                                                                                            ),
                                                                                                            'STORE',
                                                                                                            $::Undef
                                                                                                        );
                                                                                                        }
                                                                                                }
                                                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                            };
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                                            ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    do {
                                                                                                        do {
                                                                                                            if (::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                                            'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                                        ),
                                                                                                                        "true"
                                                                                                                    ),
                                                                                                                    "p5landish"
                                                                                                                )
                                                                                                                )
                                                                                                            {
                                                                                                                do {
                                                                                                                    ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                                    }
                                                                                                            }
                                                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                        };
                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                        return ($MATCH);
                                                                                                        }
                                                                                                }
                                                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                            };
                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                            }
                                                                                        }
                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                    }
                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                }
                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                            }
                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                        }
                                                                    }
                                                            };
                                                            ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                                                do {
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                                    do {
                                                                        my $_tmp1 = do {
                                                                            do {
                                                                                my $m2;
                                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                do {
                                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                        do {
                                                                                            ::DISPATCH_VAR(
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                'STORE',
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                )
                                                                                            );
                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                            }
                                                                                    }
                                                                                    else {
                                                                                        do {
                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                            }
                                                                                    }
                                                                                    }
                                                                                }
                                                                        };
                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                            ? do {
                                                                            do {
                                                                                my $ret;
                                                                                $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                                INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                                ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block18_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        do {
                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                            ::DISPATCH_VAR(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                    ),
                                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                                    do {
                                                                                                        ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                        }
                                                                                                ),
                                                                                                'STORE',
                                                                                                $::Undef
                                                                                            );
                                                                                            }
                                                                                    }
                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                };
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        do {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                                'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                            ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    do {
                                                                                                        ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                        }
                                                                                                }
                                                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                            };
                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                            return ($MATCH);
                                                                                            }
                                                                                    }
                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                };
                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                }
                                                                            }
                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token positionals returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token positionals returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'named' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token named at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        my $_tmp1 = do {
                                            do {
                                                do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'pairs', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    do {
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                            'STORE',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            )
                                                                        );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pairs' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        do {
                                                            my $ret;
                                                            $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                            INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                            ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block19_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                ),
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                do {
                                                                                    ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                    }
                                                                            ),
                                                                            'STORE',
                                                                            $::Undef
                                                                        );
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        return ($MATCH);
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                            }
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                }
                                        };
                                        ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                            do {
                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                    'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                do {
                                                    do {
                                                        my $ret;
                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block20_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                            do {
                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                }
                                                                        ),
                                                                        'STORE',
                                                                        $::Undef
                                                                    );
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    return ($MATCH);
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token named returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token named returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'pairs' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token pairs at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'pair', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pair' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    do {
                                                        my $pos1;
                                                        $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                        INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                        ::DISPATCH_VAR(
                                                            $pos1, 'STORE',
                                                            ::DISPATCH(
                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                'APPLY',
                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                            )
                                                        );
                                                        do {
                                                            my $_tmp1 = do {
                                                                do {
                                                                    do {
                                                                        my $_tmp1 = do {
                                                                            do {
                                                                                my $m2;
                                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                do {
                                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                        do {
                                                                                            ::DISPATCH_VAR(
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                'STORE',
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                )
                                                                                            );
                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                            }
                                                                                    }
                                                                                    else {
                                                                                        do {
                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                            }
                                                                                    }
                                                                                    }
                                                                                }
                                                                        };
                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                            ? do {
                                                                            my $_tmp1 = do {
                                                                                do {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                }
                                                                                        }
                                                                                        else {
                                                                                            do {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $::Str, 'new', ',' ),
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY', $str,
                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        do {
                                                                                                            ::DISPATCH_VAR(
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                'STORE',
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                                )
                                                                                                            );
                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                            }
                                                                                                    }
                                                                                                    else {
                                                                                                        do {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                            }
                                                                                                    }
                                                                                                    }
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                    }
                                                                            };
                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                ? do {
                                                                                my $_tmp1 = do {
                                                                                    do {
                                                                                        my $m2;
                                                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                        do {
                                                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                do {
                                                                                                    ::DISPATCH_VAR(
                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                        'STORE',
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        )
                                                                                                    );
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                    }
                                                                                            }
                                                                                            else {
                                                                                                do {
                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                    }
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                };
                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                    ? do {
                                                                                    my $_tmp1 = do {
                                                                                        do {
                                                                                            my $m2;
                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'pairs', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                            do {
                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                    do {
                                                                                                        ::DISPATCH_VAR(
                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                            'STORE',
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                                                            )
                                                                                                        );
                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pairs' ) ), 'STORE', $m2 );
                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                        }
                                                                                                }
                                                                                                else {
                                                                                                    do {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                        }
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                    };
                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                        ? do {
                                                                                        do {
                                                                                            my $ret;
                                                                                            $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                                            INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                                            ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block21_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                            ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    do {
                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ),
                                                                                                            'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                        ::DISPATCH_VAR(
                                                                                                            ::DISPATCH(
                                                                                                                (   $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                ),
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                                ),
                                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                                                do {
                                                                                                                    ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                                    }
                                                                                                            ),
                                                                                                            'STORE',
                                                                                                            $::Undef
                                                                                                        );
                                                                                                        }
                                                                                                }
                                                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                            };
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                                            ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    do {
                                                                                                        do {
                                                                                                            if (::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                                            'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                                        ),
                                                                                                                        "true"
                                                                                                                    ),
                                                                                                                    "p5landish"
                                                                                                                )
                                                                                                                )
                                                                                                            {
                                                                                                                do {
                                                                                                                    ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                                    }
                                                                                                            }
                                                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                        };
                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                        return ($MATCH);
                                                                                                        }
                                                                                                }
                                                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                            };
                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                            }
                                                                                        }
                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                    }
                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                }
                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                            }
                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                        }
                                                                    }
                                                            };
                                                            ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                                                do {
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                                    do {
                                                                        my $_tmp1 = do {
                                                                            do {
                                                                                my $m2;
                                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                do {
                                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                        do {
                                                                                            ::DISPATCH_VAR(
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                'STORE',
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                )
                                                                                            );
                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                            }
                                                                                    }
                                                                                    else {
                                                                                        do {
                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                            }
                                                                                    }
                                                                                    }
                                                                                }
                                                                        };
                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                            ? do {
                                                                            my $_tmp1 = do {
                                                                                do {
                                                                                    my $pos1;
                                                                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                                                    ::DISPATCH_VAR(
                                                                                        $pos1, 'STORE',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        )
                                                                                    );
                                                                                    do {
                                                                                        my $_tmp1 = do {
                                                                                            do {
                                                                                                do {
                                                                                                    my $_tmp1 = do {
                                                                                                        do {
                                                                                                            do {
                                                                                                                if (::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                'APPLY',
                                                                                                                                ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                            ),
                                                                                                                            "true"
                                                                                                                        ),
                                                                                                                        "p5landish"
                                                                                                                    )
                                                                                                                    )
                                                                                                                {
                                                                                                                    do {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                        }
                                                                                                                }
                                                                                                                else {
                                                                                                                    do {
                                                                                                                        do {
                                                                                                                            if (::DISPATCH(
                                                                                                                                    ::DISPATCH(
                                                                                                                                        ::DISPATCH(
                                                                                                                                            ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                            'APPLY',
                                                                                                                                            ::DISPATCH( $::Str, 'new', ',' ),
                                                                                                                                            ::DISPATCH(
                                                                                                                                                ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                'APPLY', $str,
                                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                            )
                                                                                                                                        ),
                                                                                                                                        "true"
                                                                                                                                    ),
                                                                                                                                    "p5landish"
                                                                                                                                )
                                                                                                                                )
                                                                                                                            {
                                                                                                                                do {
                                                                                                                                    ::DISPATCH_VAR(
                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                        'STORE',
                                                                                                                                        ::DISPATCH(
                                                                                                                                            (   $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                            ),
                                                                                                                                            'APPLY',
                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                            ::DISPATCH( $MATCH, 'to', )
                                                                                                                                        )
                                                                                                                                    );
                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                    }
                                                                                                                            }
                                                                                                                            else {
                                                                                                                                do {
                                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                    }
                                                                                                                            }
                                                                                                                            }
                                                                                                                        }
                                                                                                                }
                                                                                                                }
                                                                                                            }
                                                                                                    };
                                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                        ? do {
                                                                                                        do {
                                                                                                            my $m2;
                                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                            do {
                                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                    do {
                                                                                                                        ::DISPATCH_VAR(
                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                            'STORE',
                                                                                                                            ::DISPATCH(
                                                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                'APPLY',
                                                                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                            )
                                                                                                                        );
                                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                        }
                                                                                                                }
                                                                                                                else {
                                                                                                                    do {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                        }
                                                                                                                }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                    }
                                                                                                }
                                                                                        };
                                                                                        ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                                                                            do {
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE',
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    )
                                                                                                );
                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                            };
                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                ? do {
                                                                                do {
                                                                                    my $ret;
                                                                                    $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                                    INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                                    ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block22_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH(
                                                                                                        (   $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                        ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                        ),
                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                                        do {
                                                                                                            ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                            }
                                                                                                    ),
                                                                                                    'STORE',
                                                                                                    $::Undef
                                                                                                );
                                                                                                }
                                                                                        }
                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                    };
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                                    'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        do {
                                                                                                            ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                            }
                                                                                                    }
                                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                };
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                return ($MATCH);
                                                                                                }
                                                                                        }
                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                    };
                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                    }
                                                                                }
                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                            }
                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token pairs returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token pairs returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'pair' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token pair at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'identifier', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    do {
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                            'STORE',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            )
                                                                        );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        my $_tmp1 = do {
                                                            do {
                                                                do {
                                                                    if (::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                    ::DISPATCH( $::Int, 'new', 2 )
                                                                                ),
                                                                                "true"
                                                                            ),
                                                                            "p5landish"
                                                                        )
                                                                        )
                                                                    {
                                                                        do {
                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                            }
                                                                    }
                                                                    else {
                                                                        do {
                                                                            do {
                                                                                if (::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Str, 'new', '=>' ),
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY', $str,
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    ::DISPATCH( $::Int, 'new', 2 )
                                                                                                )
                                                                                            ),
                                                                                            "true"
                                                                                        ),
                                                                                        "p5landish"
                                                                                    )
                                                                                    )
                                                                                {
                                                                                    do {
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE',
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 2 ),
                                                                                                ::DISPATCH( $MATCH, 'to', )
                                                                                            )
                                                                                        );
                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                        }
                                                                                }
                                                                                else {
                                                                                    do {
                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                        }
                                                                                }
                                                                                }
                                                                            }
                                                                    }
                                                                    }
                                                                }
                                                        };
                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                            ? do {
                                                            my $_tmp1 = do {
                                                                do {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            do {
                                                                                ::DISPATCH_VAR(
                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                    'STORE',
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $m2, 'to', ),
                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                    )
                                                                                );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                }
                                                                        }
                                                                        else {
                                                                            do {
                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                }
                                                                        }
                                                                        }
                                                                    }
                                                            };
                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                ? do {
                                                                my $_tmp1 = do {
                                                                    do {
                                                                        my $m2;
                                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'identifier2', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                        do {
                                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                do {
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        )
                                                                                    );
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier2' ) ), 'STORE', $m2 );
                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                    }
                                                                            }
                                                                            else {
                                                                                do {
                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                    }
                                                                            }
                                                                            }
                                                                        }
                                                                };
                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                    ? do {
                                                                    do {
                                                                        my $ret;
                                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block23_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                            ),
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                            do {
                                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                }
                                                                                        ),
                                                                                        'STORE',
                                                                                        $::Undef
                                                                                    );
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                        'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                }
                                                                                        }
                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                    };
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                    return ($MATCH);
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                    }
                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                }
                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                            }
                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token pair returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token pair returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'identifier2' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token identifier2 at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'identifier', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    do {
                                                        my $ret;
                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block24_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                            do {
                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                }
                                                                        ),
                                                                        'STORE',
                                                                        $::Undef
                                                                    );
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    return ($MATCH);
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                        }
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token identifier2 returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token identifier2 returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'identifier' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token identifier at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        my $_tmp1 = do {
                                            do {
                                                do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'capturize', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    do {
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                            'STORE',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            )
                                                                        );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'capturize' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        do {
                                                            my $ret;
                                                            $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                            INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                            ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block25_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                ),
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                do {
                                                                                    ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                    }
                                                                            ),
                                                                            'STORE',
                                                                            $::Undef
                                                                        );
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        return ($MATCH);
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                            }
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                }
                                        };
                                        ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                            my $_tmp1 = do {
                                                do {
                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                        'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                    do {
                                                        my $_tmp1 = do {
                                                            do {
                                                                do {
                                                                    if (::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                ),
                                                                                "true"
                                                                            ),
                                                                            "p5landish"
                                                                        )
                                                                        )
                                                                    {
                                                                        do {
                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                            }
                                                                    }
                                                                    else {
                                                                        do {
                                                                            do {
                                                                                if (::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Str, 'new', '$' ),
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY', $str,
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                )
                                                                                            ),
                                                                                            "true"
                                                                                        ),
                                                                                        "p5landish"
                                                                                    )
                                                                                    )
                                                                                {
                                                                                    do {
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE',
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH( $MATCH, 'to', )
                                                                                            )
                                                                                        );
                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                        }
                                                                                }
                                                                                else {
                                                                                    do {
                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                        }
                                                                                }
                                                                                }
                                                                            }
                                                                    }
                                                                    }
                                                                }
                                                        };
                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                            ? do {
                                                            my $_tmp1 = do {
                                                                do {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'name', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            do {
                                                                                ::DISPATCH_VAR(
                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                    'STORE',
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $m2, 'to', ),
                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                    )
                                                                                );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'name' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                }
                                                                        }
                                                                        else {
                                                                            do {
                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                }
                                                                        }
                                                                        }
                                                                    }
                                                            };
                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                ? do {
                                                                do {
                                                                    my $ret;
                                                                    $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                    INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                    ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block26_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                ::DISPATCH_VAR(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                        ),
                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                        do {
                                                                                            ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                            }
                                                                                    ),
                                                                                    'STORE',
                                                                                    $::Undef
                                                                                );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                    'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        do {
                                                                                            ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                            }
                                                                                    }
                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                };
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                return ($MATCH);
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                                }
                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                            }
                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                        }
                                                    }
                                            };
                                            ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                                my $_tmp1 = do {
                                                    do {
                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                        do {
                                                            my $_tmp1 = do {
                                                                do {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'idconst', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            do {
                                                                                ::DISPATCH_VAR(
                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                    'STORE',
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $m2, 'to', ),
                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                    )
                                                                                );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'idconst' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                }
                                                                        }
                                                                        else {
                                                                            do {
                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                }
                                                                        }
                                                                        }
                                                                    }
                                                            };
                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                ? do {
                                                                do {
                                                                    my $ret;
                                                                    $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                    INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                    ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block27_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                ::DISPATCH_VAR(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                        ),
                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                        do {
                                                                                            ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                            }
                                                                                    ),
                                                                                    'STORE',
                                                                                    $::Undef
                                                                                );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                    'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        do {
                                                                                            ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                            }
                                                                                    }
                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                };
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                return ($MATCH);
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                                }
                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                                'STORE',
                                                                ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                            do {
                                                                my $_tmp1 = do {
                                                                    do {
                                                                        my $m2;
                                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'name', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                        do {
                                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                do {
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        )
                                                                                    );
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'name' ) ), 'STORE', $m2 );
                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                    }
                                                                            }
                                                                            else {
                                                                                do {
                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                    }
                                                                            }
                                                                            }
                                                                        }
                                                                };
                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                    ? do {
                                                                    do {
                                                                        my $ret;
                                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block28_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                            ),
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                            do {
                                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                }
                                                                                        ),
                                                                                        'STORE',
                                                                                        $::Undef
                                                                                    );
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                        'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                }
                                                                                        }
                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                    };
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                    return ($MATCH);
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                    }
                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                                        do {
                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                                'STORE',
                                                                ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                            do {
                                                                my $_tmp1 = do {
                                                                    do {
                                                                        my $m2;
                                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'native_int', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                        do {
                                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                do {
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        )
                                                                                    );
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'native_int' ) ), 'STORE', $m2 );
                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                    }
                                                                            }
                                                                            else {
                                                                                do {
                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                    }
                                                                            }
                                                                            }
                                                                        }
                                                                };
                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                    ? do {
                                                                    do {
                                                                        my $ret;
                                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block29_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                            ),
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                            do {
                                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                }
                                                                                        ),
                                                                                        'STORE',
                                                                                        $::Undef
                                                                                    );
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                        'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                }
                                                                                        }
                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                    };
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                    return ($MATCH);
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                    }
                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token identifier returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token identifier returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'idconst' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token idconst at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'idconst_list', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'idconst_list' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    do {
                                                        my $ret;
                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block30_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                            do {
                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                }
                                                                        ),
                                                                        'STORE',
                                                                        $::Undef
                                                                    );
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    return ($MATCH);
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                        }
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token idconst returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token idconst returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'idconst_list' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token idconst_list at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $m2;
                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                    ::DISPATCH_VAR(
                                        $m2, 'STORE',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_match_p5rx = $GLOBAL::Code_match_p5rx || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH(
                                                $::Str,
                                                'new',
                                                '(new|lexical|back|capture|continuation|continues|copy|current|debug|drop|DESTROYALL|eval|forget|free|goto|has_next|identifier|jail|lexical|loop|move_capturize|move_identifier|move_responder|new|next|past|push|responder|result|setr|outer)'
                                            ),
                                            $str,
                                            ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) )
                                        )
                                    );
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                    'STORE',
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $m2, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                ::DISPATCH( $::Int, 'new', 1 );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( $::Int, 'new', 0 );
                                                }
                                        }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token idconst_list returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token idconst_list returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'name' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token name at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'nameP5', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'nameP5' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    do {
                                                        my $ret;
                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block31_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                            do {
                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                }
                                                                        ),
                                                                        'STORE',
                                                                        $::Undef
                                                                    );
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    return ($MATCH);
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                        }
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token name returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token name returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'ws' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token ws at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $m2;
                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                    ::DISPATCH_VAR(
                                        $m2, 'STORE',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_match_p5rx = $GLOBAL::Code_match_p5rx || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY',
                                                ::DISPATCH( $::Str, 'new', '[' ),
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', chr(92) ),
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', 's' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $::Str, 'new', chr(92) ),
                                                            ::DISPATCH(
                                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                'APPLY',
                                                                ::DISPATCH( $::Str, 'new', 't' ),
                                                                ::DISPATCH(
                                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                    'APPLY',
                                                                    ::DISPATCH( $::Str, 'new', chr(92) ),
                                                                    ::DISPATCH( $::Str, 'new', 'n]*' )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            ),
                                            $str,
                                            ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) )
                                        )
                                    );
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                    'STORE',
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $m2, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                ::DISPATCH( $::Int, 'new', 1 );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( $::Int, 'new', 0 );
                                                }
                                        }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token ws returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token ws returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'capturize' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token capturize at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'S' ),
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY', $str,
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                            )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                            ::DISPATCH( $MATCH, 'to', )
                                                                                        )
                                                                                    );
                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                    }
                                                                            }
                                                                            else {
                                                                                do {
                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                    }
                                                                            }
                                                                            }
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        my $_tmp1 = do {
                                                            do {
                                                                do {
                                                                    if (::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                ),
                                                                                "true"
                                                                            ),
                                                                            "p5landish"
                                                                        )
                                                                        )
                                                                    {
                                                                        do {
                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                            }
                                                                    }
                                                                    else {
                                                                        do {
                                                                            do {
                                                                                if (::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Str, 'new', 'M' ),
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY', $str,
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                )
                                                                                            ),
                                                                                            "true"
                                                                                        ),
                                                                                        "p5landish"
                                                                                    )
                                                                                    )
                                                                                {
                                                                                    do {
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE',
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH( $MATCH, 'to', )
                                                                                            )
                                                                                        );
                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                        }
                                                                                }
                                                                                else {
                                                                                    do {
                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                        }
                                                                                }
                                                                                }
                                                                            }
                                                                    }
                                                                    }
                                                                }
                                                        };
                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                            ? do {
                                                            my $_tmp1 = do {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                }
                                                                        }
                                                                        else {
                                                                            do {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', 'O' ),
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY', $str,
                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                    )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        do {
                                                                                            ::DISPATCH_VAR(
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                'STORE',
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                )
                                                                                            );
                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                            }
                                                                                    }
                                                                                    else {
                                                                                        do {
                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                            }
                                                                                    }
                                                                                    }
                                                                                }
                                                                        }
                                                                        }
                                                                    }
                                                            };
                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                ? do {
                                                                my $_tmp1 = do {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                    }
                                                                            }
                                                                            else {
                                                                                do {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH( $::Str, 'new', 'P' ),
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY', $str,
                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                        )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE',
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                        ::DISPATCH( $MATCH, 'to', )
                                                                                                    )
                                                                                                );
                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                }
                                                                                        }
                                                                                        else {
                                                                                            do {
                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                    }
                                                                            }
                                                                            }
                                                                        }
                                                                };
                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                    ? do {
                                                                    my $_tmp1 = do {
                                                                        do {
                                                                            do {
                                                                                if (::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY',
                                                                                                ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                            ),
                                                                                            "true"
                                                                                        ),
                                                                                        "p5landish"
                                                                                    )
                                                                                    )
                                                                                {
                                                                                    do {
                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                        }
                                                                                }
                                                                                else {
                                                                                    do {
                                                                                        do {
                                                                                            if (::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( $::Str, 'new', '_' ),
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY', $str,
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                            )
                                                                                                        ),
                                                                                                        "true"
                                                                                                    ),
                                                                                                    "p5landish"
                                                                                                )
                                                                                                )
                                                                                            {
                                                                                                do {
                                                                                                    ::DISPATCH_VAR(
                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                        'STORE',
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                            ::DISPATCH( $MATCH, 'to', )
                                                                                                        )
                                                                                                    );
                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                    }
                                                                                            }
                                                                                            else {
                                                                                                do {
                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                    }
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                }
                                                                                }
                                                                            }
                                                                    };
                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                        ? do {
                                                                        my $_tmp1 = do {
                                                                            do {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        do {
                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                            }
                                                                                    }
                                                                                    else {
                                                                                        do {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $::Str, 'new', '_' ),
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY', $str,
                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                )
                                                                                                            ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    do {
                                                                                                        ::DISPATCH_VAR(
                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                            'STORE',
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                ::DISPATCH( $MATCH, 'to', )
                                                                                                            )
                                                                                                        );
                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                        }
                                                                                                }
                                                                                                else {
                                                                                                    do {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                        }
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                    }
                                                                                    }
                                                                                }
                                                                        };
                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                            ? do {
                                                                            my $_tmp1 = do {
                                                                                do {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                }
                                                                                        }
                                                                                        else {
                                                                                            do {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $::Str, 'new', 'S' ),
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY', $str,
                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        do {
                                                                                                            ::DISPATCH_VAR(
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                'STORE',
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                                )
                                                                                                            );
                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                            }
                                                                                                    }
                                                                                                    else {
                                                                                                        do {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                            }
                                                                                                    }
                                                                                                    }
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                    }
                                                                            };
                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                ? do {
                                                                                my $_tmp1 = do {
                                                                                    do {
                                                                                        do {
                                                                                            if (::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                        ),
                                                                                                        "true"
                                                                                                    ),
                                                                                                    "p5landish"
                                                                                                )
                                                                                                )
                                                                                            {
                                                                                                do {
                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                    }
                                                                                            }
                                                                                            else {
                                                                                                do {
                                                                                                    do {
                                                                                                        if (::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Str, 'new', 'L' ),
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY', $str,
                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                        )
                                                                                                                    ),
                                                                                                                    "true"
                                                                                                                ),
                                                                                                                "p5landish"
                                                                                                            )
                                                                                                            )
                                                                                                        {
                                                                                                            do {
                                                                                                                ::DISPATCH_VAR(
                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                    'STORE',
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                        ::DISPATCH( $MATCH, 'to', )
                                                                                                                    )
                                                                                                                );
                                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                }
                                                                                                        }
                                                                                                        else {
                                                                                                            do {
                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                    }
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                };
                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                    ? do {
                                                                                    my $_tmp1 = do {
                                                                                        do {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                            ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    do {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                        }
                                                                                                }
                                                                                                else {
                                                                                                    do {
                                                                                                        do {
                                                                                                            if (::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Str, 'new', 'I' ),
                                                                                                                            ::DISPATCH(
                                                                                                                                ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                'APPLY', $str,
                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                            )
                                                                                                                        ),
                                                                                                                        "true"
                                                                                                                    ),
                                                                                                                    "p5landish"
                                                                                                                )
                                                                                                                )
                                                                                                            {
                                                                                                                do {
                                                                                                                    ::DISPATCH_VAR(
                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                        'STORE',
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                            ::DISPATCH( $MATCH, 'to', )
                                                                                                                        )
                                                                                                                    );
                                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                    }
                                                                                                            }
                                                                                                            else {
                                                                                                                do {
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                    }
                                                                                                            }
                                                                                                            }
                                                                                                        }
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                    };
                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                        ? do {
                                                                                        my $_tmp1 = do {
                                                                                            do {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        do {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                            }
                                                                                                    }
                                                                                                    else {
                                                                                                        do {
                                                                                                            do {
                                                                                                                if (::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                'APPLY',
                                                                                                                                ::DISPATCH( $::Str, 'new', 'M' ),
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                    'APPLY', $str,
                                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                )
                                                                                                                            ),
                                                                                                                            "true"
                                                                                                                        ),
                                                                                                                        "p5landish"
                                                                                                                    )
                                                                                                                    )
                                                                                                                {
                                                                                                                    do {
                                                                                                                        ::DISPATCH_VAR(
                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                            'STORE',
                                                                                                                            ::DISPATCH(
                                                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                'APPLY',
                                                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                ::DISPATCH( $MATCH, 'to', )
                                                                                                                            )
                                                                                                                        );
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                        }
                                                                                                                }
                                                                                                                else {
                                                                                                                    do {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                        }
                                                                                                                }
                                                                                                                }
                                                                                                            }
                                                                                                    }
                                                                                                    }
                                                                                                }
                                                                                        };
                                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                            ? do {
                                                                                            my $_tmp1 = do {
                                                                                                do {
                                                                                                    do {
                                                                                                        if (::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    ),
                                                                                                                    "true"
                                                                                                                ),
                                                                                                                "p5landish"
                                                                                                            )
                                                                                                            )
                                                                                                        {
                                                                                                            do {
                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                }
                                                                                                        }
                                                                                                        else {
                                                                                                            do {
                                                                                                                do {
                                                                                                                    if (::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                    'APPLY',
                                                                                                                                    ::DISPATCH( $::Str, 'new', 'E' ),
                                                                                                                                    ::DISPATCH(
                                                                                                                                        ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                        'APPLY', $str,
                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                    )
                                                                                                                                ),
                                                                                                                                "true"
                                                                                                                            ),
                                                                                                                            "p5landish"
                                                                                                                        )
                                                                                                                        )
                                                                                                                    {
                                                                                                                        do {
                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                'STORE',
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                    'APPLY',
                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                                                )
                                                                                                                            );
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                            }
                                                                                                                    }
                                                                                                                    else {
                                                                                                                        do {
                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                            }
                                                                                                                    }
                                                                                                                    }
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                    }
                                                                                            };
                                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                ? do {
                                                                                                my $_tmp1 = do {
                                                                                                    do {
                                                                                                        do {
                                                                                                            if (::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                        ),
                                                                                                                        "true"
                                                                                                                    ),
                                                                                                                    "p5landish"
                                                                                                                )
                                                                                                                )
                                                                                                            {
                                                                                                                do {
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                    }
                                                                                                            }
                                                                                                            else {
                                                                                                                do {
                                                                                                                    do {
                                                                                                                        if (::DISPATCH(
                                                                                                                                ::DISPATCH(
                                                                                                                                    ::DISPATCH(
                                                                                                                                        ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                        'APPLY',
                                                                                                                                        ::DISPATCH( $::Str, 'new', '_' ),
                                                                                                                                        ::DISPATCH(
                                                                                                                                            ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                            'APPLY', $str,
                                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                        )
                                                                                                                                    ),
                                                                                                                                    "true"
                                                                                                                                ),
                                                                                                                                "p5landish"
                                                                                                                            )
                                                                                                                            )
                                                                                                                        {
                                                                                                                            do {
                                                                                                                                ::DISPATCH_VAR(
                                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                    'STORE',
                                                                                                                                    ::DISPATCH(
                                                                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                        'APPLY',
                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                        ::DISPATCH( $MATCH, 'to', )
                                                                                                                                    )
                                                                                                                                );
                                                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                }
                                                                                                                        }
                                                                                                                        else {
                                                                                                                            do {
                                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                }
                                                                                                                        }
                                                                                                                        }
                                                                                                                    }
                                                                                                            }
                                                                                                            }
                                                                                                        }
                                                                                                };
                                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                    ? do {
                                                                                                    my $_tmp1 = do {
                                                                                                        do {
                                                                                                            do {
                                                                                                                if (::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                'APPLY',
                                                                                                                                ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                            ),
                                                                                                                            "true"
                                                                                                                        ),
                                                                                                                        "p5landish"
                                                                                                                    )
                                                                                                                    )
                                                                                                                {
                                                                                                                    do {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                        }
                                                                                                                }
                                                                                                                else {
                                                                                                                    do {
                                                                                                                        do {
                                                                                                                            if (::DISPATCH(
                                                                                                                                    ::DISPATCH(
                                                                                                                                        ::DISPATCH(
                                                                                                                                            ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                            'APPLY',
                                                                                                                                            ::DISPATCH( $::Str, 'new', '_' ),
                                                                                                                                            ::DISPATCH(
                                                                                                                                                ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                'APPLY', $str,
                                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                            )
                                                                                                                                        ),
                                                                                                                                        "true"
                                                                                                                                    ),
                                                                                                                                    "p5landish"
                                                                                                                                )
                                                                                                                                )
                                                                                                                            {
                                                                                                                                do {
                                                                                                                                    ::DISPATCH_VAR(
                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                        'STORE',
                                                                                                                                        ::DISPATCH(
                                                                                                                                            (   $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                            ),
                                                                                                                                            'APPLY',
                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                            ::DISPATCH( $MATCH, 'to', )
                                                                                                                                        )
                                                                                                                                    );
                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                    }
                                                                                                                            }
                                                                                                                            else {
                                                                                                                                do {
                                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                    }
                                                                                                                            }
                                                                                                                            }
                                                                                                                        }
                                                                                                                }
                                                                                                                }
                                                                                                            }
                                                                                                    };
                                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                        ? do {
                                                                                                        my $_tmp1 = do {
                                                                                                            do {
                                                                                                                do {
                                                                                                                    if (::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                    'APPLY',
                                                                                                                                    ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                ),
                                                                                                                                "true"
                                                                                                                            ),
                                                                                                                            "p5landish"
                                                                                                                        )
                                                                                                                        )
                                                                                                                    {
                                                                                                                        do {
                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                            }
                                                                                                                    }
                                                                                                                    else {
                                                                                                                        do {
                                                                                                                            do {
                                                                                                                                if (::DISPATCH(
                                                                                                                                        ::DISPATCH(
                                                                                                                                            ::DISPATCH(
                                                                                                                                                (   $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                ),
                                                                                                                                                'APPLY',
                                                                                                                                                ::DISPATCH( $::Str, 'new', 'C' ),
                                                                                                                                                ::DISPATCH(
                                                                                                                                                    ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                    'APPLY', $str,
                                                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                )
                                                                                                                                            ),
                                                                                                                                            "true"
                                                                                                                                        ),
                                                                                                                                        "p5landish"
                                                                                                                                    )
                                                                                                                                    )
                                                                                                                                {
                                                                                                                                    do {
                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                            'STORE',
                                                                                                                                            ::DISPATCH(
                                                                                                                                                (   $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                ),
                                                                                                                                                'APPLY',
                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                ::DISPATCH( $MATCH, 'to', )
                                                                                                                                            )
                                                                                                                                        );
                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                        }
                                                                                                                                }
                                                                                                                                else {
                                                                                                                                    do {
                                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                        }
                                                                                                                                }
                                                                                                                                }
                                                                                                                            }
                                                                                                                    }
                                                                                                                    }
                                                                                                                }
                                                                                                        };
                                                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                            ? do {
                                                                                                            my $_tmp1 = do {
                                                                                                                do {
                                                                                                                    do {
                                                                                                                        if (::DISPATCH(
                                                                                                                                ::DISPATCH(
                                                                                                                                    ::DISPATCH(
                                                                                                                                        ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                        'APPLY',
                                                                                                                                        ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                    ),
                                                                                                                                    "true"
                                                                                                                                ),
                                                                                                                                "p5landish"
                                                                                                                            )
                                                                                                                            )
                                                                                                                        {
                                                                                                                            do {
                                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                }
                                                                                                                        }
                                                                                                                        else {
                                                                                                                            do {
                                                                                                                                do {
                                                                                                                                    if (::DISPATCH(
                                                                                                                                            ::DISPATCH(
                                                                                                                                                ::DISPATCH(
                                                                                                                                                    (   $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                            || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                    ),
                                                                                                                                                    'APPLY',
                                                                                                                                                    ::DISPATCH( $::Str, 'new', 'a' ),
                                                                                                                                                    ::DISPATCH(
                                                                                                                                                        ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                        'APPLY', $str,
                                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                    )
                                                                                                                                                ),
                                                                                                                                                "true"
                                                                                                                                            ),
                                                                                                                                            "p5landish"
                                                                                                                                        )
                                                                                                                                        )
                                                                                                                                    {
                                                                                                                                        do {
                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                'STORE',
                                                                                                                                                ::DISPATCH(
                                                                                                                                                    (   $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                            || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                    ),
                                                                                                                                                    'APPLY',
                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                )
                                                                                                                                            );
                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                            }
                                                                                                                                    }
                                                                                                                                    else {
                                                                                                                                        do {
                                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                            }
                                                                                                                                    }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                        }
                                                                                                                        }
                                                                                                                    }
                                                                                                            };
                                                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                ? do {
                                                                                                                my $_tmp1 = do {
                                                                                                                    do {
                                                                                                                        do {
                                                                                                                            if (::DISPATCH(
                                                                                                                                    ::DISPATCH(
                                                                                                                                        ::DISPATCH(
                                                                                                                                            (   $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                            ),
                                                                                                                                            'APPLY',
                                                                                                                                            ::DISPATCH(
                                                                                                                                                ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str
                                                                                                                                            ),
                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                        ),
                                                                                                                                        "true"
                                                                                                                                    ),
                                                                                                                                    "p5landish"
                                                                                                                                )
                                                                                                                                )
                                                                                                                            {
                                                                                                                                do {
                                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                    }
                                                                                                                            }
                                                                                                                            else {
                                                                                                                                do {
                                                                                                                                    do {
                                                                                                                                        if (::DISPATCH(
                                                                                                                                                ::DISPATCH(
                                                                                                                                                    ::DISPATCH(
                                                                                                                                                        (   $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                        ),
                                                                                                                                                        'APPLY',
                                                                                                                                                        ::DISPATCH( $::Str, 'new', 'p' ),
                                                                                                                                                        ::DISPATCH(
                                                                                                                                                            ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                            'APPLY', $str,
                                                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                        )
                                                                                                                                                    ),
                                                                                                                                                    "true"
                                                                                                                                                ),
                                                                                                                                                "p5landish"
                                                                                                                                            )
                                                                                                                                            )
                                                                                                                                        {
                                                                                                                                            do {
                                                                                                                                                ::DISPATCH_VAR(
                                                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                    'STORE',
                                                                                                                                                    ::DISPATCH(
                                                                                                                                                        (   $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                        ),
                                                                                                                                                        'APPLY',
                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                        ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                    )
                                                                                                                                                );
                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                }
                                                                                                                                        }
                                                                                                                                        else {
                                                                                                                                            do {
                                                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                }
                                                                                                                                        }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                            }
                                                                                                                            }
                                                                                                                        }
                                                                                                                };
                                                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                    ? do {
                                                                                                                    my $_tmp1 = do {
                                                                                                                        do {
                                                                                                                            do {
                                                                                                                                if (::DISPATCH(
                                                                                                                                        ::DISPATCH(
                                                                                                                                            ::DISPATCH(
                                                                                                                                                (   $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                ),
                                                                                                                                                'APPLY',
                                                                                                                                                ::DISPATCH(
                                                                                                                                                    ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                    'APPLY', $str
                                                                                                                                                ),
                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                            ),
                                                                                                                                            "true"
                                                                                                                                        ),
                                                                                                                                        "p5landish"
                                                                                                                                    )
                                                                                                                                    )
                                                                                                                                {
                                                                                                                                    do {
                                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                        }
                                                                                                                                }
                                                                                                                                else {
                                                                                                                                    do {
                                                                                                                                        do {
                                                                                                                                            if (::DISPATCH(
                                                                                                                                                    ::DISPATCH(
                                                                                                                                                        ::DISPATCH(
                                                                                                                                                            (   $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                            ),
                                                                                                                                                            'APPLY',
                                                                                                                                                            ::DISPATCH( $::Str, 'new', 't' ),
                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                                'APPLY', $str,
                                                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                            )
                                                                                                                                                        ),
                                                                                                                                                        "true"
                                                                                                                                                    ),
                                                                                                                                                    "p5landish"
                                                                                                                                                )
                                                                                                                                                )
                                                                                                                                            {
                                                                                                                                                do {
                                                                                                                                                    ::DISPATCH_VAR(
                                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                        'STORE',
                                                                                                                                                        ::DISPATCH(
                                                                                                                                                            (   $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                            ),
                                                                                                                                                            'APPLY',
                                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                            ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                        )
                                                                                                                                                    );
                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                    }
                                                                                                                                            }
                                                                                                                                            else {
                                                                                                                                                do {
                                                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                    }
                                                                                                                                            }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                }
                                                                                                                                }
                                                                                                                            }
                                                                                                                    };
                                                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                        ? do {
                                                                                                                        my $_tmp1 = do {
                                                                                                                            do {
                                                                                                                                do {
                                                                                                                                    if (::DISPATCH(
                                                                                                                                            ::DISPATCH(
                                                                                                                                                ::DISPATCH(
                                                                                                                                                    (   $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                            || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                    ),
                                                                                                                                                    'APPLY',
                                                                                                                                                    ::DISPATCH(
                                                                                                                                                        ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                        'APPLY', $str
                                                                                                                                                    ),
                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                ),
                                                                                                                                                "true"
                                                                                                                                            ),
                                                                                                                                            "p5landish"
                                                                                                                                        )
                                                                                                                                        )
                                                                                                                                    {
                                                                                                                                        do {
                                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                            }
                                                                                                                                    }
                                                                                                                                    else {
                                                                                                                                        do {
                                                                                                                                            do {
                                                                                                                                                if (::DISPATCH(
                                                                                                                                                        ::DISPATCH(
                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                (   $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                ),
                                                                                                                                                                'APPLY',
                                                                                                                                                                ::DISPATCH( $::Str, 'new', 'u' ),
                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                    ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                                    'APPLY', $str,
                                                                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                )
                                                                                                                                                            ),
                                                                                                                                                            "true"
                                                                                                                                                        ),
                                                                                                                                                        "p5landish"
                                                                                                                                                    )
                                                                                                                                                    )
                                                                                                                                                {
                                                                                                                                                    do {
                                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                            'STORE',
                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                (   $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                ),
                                                                                                                                                                'APPLY',
                                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                                ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                            )
                                                                                                                                                        );
                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                        }
                                                                                                                                                }
                                                                                                                                                else {
                                                                                                                                                    do {
                                                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                        }
                                                                                                                                                }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                    }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                        };
                                                                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                            ? do {
                                                                                                                            my $_tmp1 = do {
                                                                                                                                do {
                                                                                                                                    do {
                                                                                                                                        if (::DISPATCH(
                                                                                                                                                ::DISPATCH(
                                                                                                                                                    ::DISPATCH(
                                                                                                                                                        (   $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                        ),
                                                                                                                                                        'APPLY',
                                                                                                                                                        ::DISPATCH(
                                                                                                                                                            ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                            'APPLY', $str
                                                                                                                                                        ),
                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                    ),
                                                                                                                                                    "true"
                                                                                                                                                ),
                                                                                                                                                "p5landish"
                                                                                                                                            )
                                                                                                                                            )
                                                                                                                                        {
                                                                                                                                            do {
                                                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                }
                                                                                                                                        }
                                                                                                                                        else {
                                                                                                                                            do {
                                                                                                                                                do {
                                                                                                                                                    if (::DISPATCH(
                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                            || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                    ),
                                                                                                                                                                    'APPLY',
                                                                                                                                                                    ::DISPATCH( $::Str, 'new', 'r' ),
                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                        (   $GLOBAL::Code_substr
                                                                                                                                                                                = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                        ),
                                                                                                                                                                        'APPLY', $str,
                                                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                    )
                                                                                                                                                                ),
                                                                                                                                                                "true"
                                                                                                                                                            ),
                                                                                                                                                            "p5landish"
                                                                                                                                                        )
                                                                                                                                                        )
                                                                                                                                                    {
                                                                                                                                                        do {
                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                'STORE',
                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                            || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                    ),
                                                                                                                                                                    'APPLY',
                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                                )
                                                                                                                                                            );
                                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                            }
                                                                                                                                                    }
                                                                                                                                                    else {
                                                                                                                                                        do {
                                                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                            }
                                                                                                                                                    }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                        }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                            };
                                                                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                ? do {
                                                                                                                                my $_tmp1 = do {
                                                                                                                                    do {
                                                                                                                                        do {
                                                                                                                                            if (::DISPATCH(
                                                                                                                                                    ::DISPATCH(
                                                                                                                                                        ::DISPATCH(
                                                                                                                                                            (   $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                            ),
                                                                                                                                                            'APPLY',
                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                                'APPLY', $str
                                                                                                                                                            ),
                                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                        ),
                                                                                                                                                        "true"
                                                                                                                                                    ),
                                                                                                                                                    "p5landish"
                                                                                                                                                )
                                                                                                                                                )
                                                                                                                                            {
                                                                                                                                                do {
                                                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                    }
                                                                                                                                            }
                                                                                                                                            else {
                                                                                                                                                do {
                                                                                                                                                    do {
                                                                                                                                                        if (::DISPATCH(
                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                        (   $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                        ),
                                                                                                                                                                        'APPLY',
                                                                                                                                                                        ::DISPATCH( $::Str, 'new', 'i' ),
                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                            (   $GLOBAL::Code_substr
                                                                                                                                                                                    = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                            ),
                                                                                                                                                                            'APPLY', $str,
                                                                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                        )
                                                                                                                                                                    ),
                                                                                                                                                                    "true"
                                                                                                                                                                ),
                                                                                                                                                                "p5landish"
                                                                                                                                                            )
                                                                                                                                                            )
                                                                                                                                                        {
                                                                                                                                                            do {
                                                                                                                                                                ::DISPATCH_VAR(
                                                                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                    'STORE',
                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                        (   $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                        ),
                                                                                                                                                                        'APPLY',
                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                                        ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                                    )
                                                                                                                                                                );
                                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                }
                                                                                                                                                        }
                                                                                                                                                        else {
                                                                                                                                                            do {
                                                                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                }
                                                                                                                                                        }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                            }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                };
                                                                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                    ? do {
                                                                                                                                    my $_tmp1 = do {
                                                                                                                                        do {
                                                                                                                                            do {
                                                                                                                                                if (::DISPATCH(
                                                                                                                                                        ::DISPATCH(
                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                (   $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                ),
                                                                                                                                                                'APPLY',
                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                    ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                                    'APPLY', $str
                                                                                                                                                                ),
                                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                            ),
                                                                                                                                                            "true"
                                                                                                                                                        ),
                                                                                                                                                        "p5landish"
                                                                                                                                                    )
                                                                                                                                                    )
                                                                                                                                                {
                                                                                                                                                    do {
                                                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                        }
                                                                                                                                                }
                                                                                                                                                else {
                                                                                                                                                    do {
                                                                                                                                                        do {
                                                                                                                                                            if (::DISPATCH(
                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                            (   $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                            ),
                                                                                                                                                                            'APPLY',
                                                                                                                                                                            ::DISPATCH( $::Str, 'new', 'z' ),
                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                (   $GLOBAL::Code_substr
                                                                                                                                                                                        = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                ),
                                                                                                                                                                                'APPLY', $str,
                                                                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                            )
                                                                                                                                                                        ),
                                                                                                                                                                        "true"
                                                                                                                                                                    ),
                                                                                                                                                                    "p5landish"
                                                                                                                                                                )
                                                                                                                                                                )
                                                                                                                                                            {
                                                                                                                                                                do {
                                                                                                                                                                    ::DISPATCH_VAR(
                                                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                        'STORE',
                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                            (   $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                            ),
                                                                                                                                                                            'APPLY',
                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                                            ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                                        )
                                                                                                                                                                    );
                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                    }
                                                                                                                                                            }
                                                                                                                                                            else {
                                                                                                                                                                do {
                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                    }
                                                                                                                                                            }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                    };
                                                                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                        ? do {
                                                                                                                                        my $_tmp1 = do {
                                                                                                                                            do {
                                                                                                                                                do {
                                                                                                                                                    if (::DISPATCH(
                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                            || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                    ),
                                                                                                                                                                    'APPLY',
                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                        ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                                                        'APPLY',
                                                                                                                                                                        $str
                                                                                                                                                                    ),
                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                ),
                                                                                                                                                                "true"
                                                                                                                                                            ),
                                                                                                                                                            "p5landish"
                                                                                                                                                        )
                                                                                                                                                        )
                                                                                                                                                    {
                                                                                                                                                        do {
                                                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                            }
                                                                                                                                                    }
                                                                                                                                                    else {
                                                                                                                                                        do {
                                                                                                                                                            do {
                                                                                                                                                                if (::DISPATCH(
                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                (   $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                ),
                                                                                                                                                                                'APPLY',
                                                                                                                                                                                ::DISPATCH( $::Str, 'new', 'e' ),
                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                    (   $GLOBAL::Code_substr
                                                                                                                                                                                            = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                    ),
                                                                                                                                                                                    'APPLY', $str,
                                                                                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                                )
                                                                                                                                                                            ),
                                                                                                                                                                            "true"
                                                                                                                                                                        ),
                                                                                                                                                                        "p5landish"
                                                                                                                                                                    )
                                                                                                                                                                    )
                                                                                                                                                                {
                                                                                                                                                                    do {
                                                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                            'STORE',
                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                        = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                ),
                                                                                                                                                                                'APPLY',
                                                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                                                ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                                            )
                                                                                                                                                                        );
                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                        }
                                                                                                                                                                }
                                                                                                                                                                else {
                                                                                                                                                                    do {
                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                        }
                                                                                                                                                                }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                    }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                        };
                                                                                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                            ? do {
                                                                                                                                            my $_tmp1 = do {
                                                                                                                                                do {
                                                                                                                                                    do {
                                                                                                                                                        if (::DISPATCH(
                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                        (   $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                        ),
                                                                                                                                                                        'APPLY',
                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                            (   $GLOBAL::Code_chars
                                                                                                                                                                                    = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                            ),
                                                                                                                                                                            'APPLY', $str
                                                                                                                                                                        ),
                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                    ),
                                                                                                                                                                    "true"
                                                                                                                                                                ),
                                                                                                                                                                "p5landish"
                                                                                                                                                            )
                                                                                                                                                            )
                                                                                                                                                        {
                                                                                                                                                            do {
                                                                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                }
                                                                                                                                                        }
                                                                                                                                                        else {
                                                                                                                                                            do {
                                                                                                                                                                do {
                                                                                                                                                                    if (::DISPATCH(
                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                            = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                            || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                    ),
                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                    ::DISPATCH( $::Str, 'new', '.' ),
                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                        (   $GLOBAL::Code_substr
                                                                                                                                                                                                = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                        ),
                                                                                                                                                                                        'APPLY', $str,
                                                                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                                    )
                                                                                                                                                                                ),
                                                                                                                                                                                "true"
                                                                                                                                                                            ),
                                                                                                                                                                            "p5landish"
                                                                                                                                                                        )
                                                                                                                                                                        )
                                                                                                                                                                    {
                                                                                                                                                                        do {
                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                'STORE',
                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                            = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                            || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                    ),
                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                                                )
                                                                                                                                                                            );
                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                            }
                                                                                                                                                                    }
                                                                                                                                                                    else {
                                                                                                                                                                        do {
                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                            }
                                                                                                                                                                    }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                        }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                            };
                                                                                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                ? do {
                                                                                                                                                my $_tmp1 = do {
                                                                                                                                                    do {
                                                                                                                                                        do {
                                                                                                                                                            if (::DISPATCH(
                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                            (   $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                            ),
                                                                                                                                                                            'APPLY',
                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                (   $GLOBAL::Code_chars
                                                                                                                                                                                        = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                ),
                                                                                                                                                                                'APPLY', $str
                                                                                                                                                                            ),
                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                        ),
                                                                                                                                                                        "true"
                                                                                                                                                                    ),
                                                                                                                                                                    "p5landish"
                                                                                                                                                                )
                                                                                                                                                                )
                                                                                                                                                            {
                                                                                                                                                                do {
                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                    }
                                                                                                                                                            }
                                                                                                                                                            else {
                                                                                                                                                                do {
                                                                                                                                                                    do {
                                                                                                                                                                        if (::DISPATCH(
                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                        (   $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                        ),
                                                                                                                                                                                        'APPLY',
                                                                                                                                                                                        ::DISPATCH( $::Str, 'new', 'n' ),
                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                            (   $GLOBAL::Code_substr
                                                                                                                                                                                                    = $GLOBAL::Code_substr
                                                                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                            ),
                                                                                                                                                                                            'APPLY', $str,
                                                                                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                                        )
                                                                                                                                                                                    ),
                                                                                                                                                                                    "true"
                                                                                                                                                                                ),
                                                                                                                                                                                "p5landish"
                                                                                                                                                                            )
                                                                                                                                                                            )
                                                                                                                                                                        {
                                                                                                                                                                            do {
                                                                                                                                                                                ::DISPATCH_VAR(
                                                                                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                    'STORE',
                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                        (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                        ),
                                                                                                                                                                                        'APPLY',
                                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                                                        ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                                                    )
                                                                                                                                                                                );
                                                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                                }
                                                                                                                                                                        }
                                                                                                                                                                        else {
                                                                                                                                                                            do {
                                                                                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                }
                                                                                                                                                                        }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                            }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                };
                                                                                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                    ? do {
                                                                                                                                                    my $_tmp1 = do {
                                                                                                                                                        do {
                                                                                                                                                            do {
                                                                                                                                                                if (::DISPATCH(
                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                (   $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                        = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                ),
                                                                                                                                                                                'APPLY',
                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                    (   $GLOBAL::Code_chars
                                                                                                                                                                                            = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                    ),
                                                                                                                                                                                    'APPLY', $str
                                                                                                                                                                                ),
                                                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                            ),
                                                                                                                                                                            "true"
                                                                                                                                                                        ),
                                                                                                                                                                        "p5landish"
                                                                                                                                                                    )
                                                                                                                                                                    )
                                                                                                                                                                {
                                                                                                                                                                    do {
                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                        }
                                                                                                                                                                }
                                                                                                                                                                else {
                                                                                                                                                                    do {
                                                                                                                                                                        do {
                                                                                                                                                                            if (::DISPATCH(
                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                            (   $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                    = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                            ),
                                                                                                                                                                                            'APPLY',
                                                                                                                                                                                            ::DISPATCH( $::Str, 'new', 'e' ),
                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                (   $GLOBAL::Code_substr
                                                                                                                                                                                                        = $GLOBAL::Code_substr
                                                                                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                                ),
                                                                                                                                                                                                'APPLY', $str,
                                                                                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                                            )
                                                                                                                                                                                        ),
                                                                                                                                                                                        "true"
                                                                                                                                                                                    ),
                                                                                                                                                                                    "p5landish"
                                                                                                                                                                                )
                                                                                                                                                                                )
                                                                                                                                                                            {
                                                                                                                                                                                do {
                                                                                                                                                                                    ::DISPATCH_VAR(
                                                                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                        'STORE',
                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                            (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                    = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                            ),
                                                                                                                                                                                            'APPLY',
                                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                                                            ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                                                        )
                                                                                                                                                                                    );
                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                                    }
                                                                                                                                                                            }
                                                                                                                                                                            else {
                                                                                                                                                                                do {
                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                    }
                                                                                                                                                                            }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                    };
                                                                                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                        ? do {
                                                                                                                                                        my $_tmp1 = do {
                                                                                                                                                            do {
                                                                                                                                                                do {
                                                                                                                                                                    if (::DISPATCH(
                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                            = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                            || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                    ),
                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                        (   $GLOBAL::Code_chars
                                                                                                                                                                                                = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                        ),
                                                                                                                                                                                        'APPLY', $str
                                                                                                                                                                                    ),
                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                                ),
                                                                                                                                                                                "true"
                                                                                                                                                                            ),
                                                                                                                                                                            "p5landish"
                                                                                                                                                                        )
                                                                                                                                                                        )
                                                                                                                                                                    {
                                                                                                                                                                        do {
                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                            }
                                                                                                                                                                    }
                                                                                                                                                                    else {
                                                                                                                                                                        do {
                                                                                                                                                                            do {
                                                                                                                                                                                if (::DISPATCH(
                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                (   $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                        = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                                ),
                                                                                                                                                                                                'APPLY',
                                                                                                                                                                                                ::DISPATCH( $::Str, 'new', 'w' ),
                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                    (   $GLOBAL::Code_substr
                                                                                                                                                                                                            = $GLOBAL::Code_substr
                                                                                                                                                                                                            || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    'APPLY', $str,
                                                                                                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                                                )
                                                                                                                                                                                            ),
                                                                                                                                                                                            "true"
                                                                                                                                                                                        ),
                                                                                                                                                                                        "p5landish"
                                                                                                                                                                                    )
                                                                                                                                                                                    )
                                                                                                                                                                                {
                                                                                                                                                                                    do {
                                                                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                            'STORE',
                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                        = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                                ),
                                                                                                                                                                                                'APPLY',
                                                                                                                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                                                                ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                                                            )
                                                                                                                                                                                        );
                                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                                        }
                                                                                                                                                                                }
                                                                                                                                                                                else {
                                                                                                                                                                                    do {
                                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                        }
                                                                                                                                                                                }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                    }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                        };
                                                                                                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                            ? do {
                                                                                                                                                            my $_tmp1 = do {
                                                                                                                                                                do {
                                                                                                                                                                    do {
                                                                                                                                                                        if (::DISPATCH(
                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                        (   $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                                = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                        ),
                                                                                                                                                                                        'APPLY',
                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                            (   $GLOBAL::Code_chars
                                                                                                                                                                                                    = $GLOBAL::Code_chars
                                                                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                            ),
                                                                                                                                                                                            'APPLY', $str
                                                                                                                                                                                        ),
                                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                                    ),
                                                                                                                                                                                    "true"
                                                                                                                                                                                ),
                                                                                                                                                                                "p5landish"
                                                                                                                                                                            )
                                                                                                                                                                            )
                                                                                                                                                                        {
                                                                                                                                                                            do {
                                                                                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                }
                                                                                                                                                                        }
                                                                                                                                                                        else {
                                                                                                                                                                            do {
                                                                                                                                                                                do {
                                                                                                                                                                                    if (::DISPATCH(
                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                            = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                            || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                    ::DISPATCH( $::Str, 'new', '(' ),
                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                        (   $GLOBAL::Code_substr
                                                                                                                                                                                                                = $GLOBAL::Code_substr
                                                                                                                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        'APPLY', $str,
                                                                                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                                                    )
                                                                                                                                                                                                ),
                                                                                                                                                                                                "true"
                                                                                                                                                                                            ),
                                                                                                                                                                                            "p5landish"
                                                                                                                                                                                        )
                                                                                                                                                                                        )
                                                                                                                                                                                    {
                                                                                                                                                                                        do {
                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                                'STORE',
                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                            = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                            || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                                                                )
                                                                                                                                                                                            );
                                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                                            }
                                                                                                                                                                                    }
                                                                                                                                                                                    else {
                                                                                                                                                                                        do {
                                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                            }
                                                                                                                                                                                    }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                        }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                            };
                                                                                                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                                ? do {
                                                                                                                                                                my $_tmp1 = do {
                                                                                                                                                                    do {
                                                                                                                                                                        my $m2;
                                                                                                                                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } )
                                                                                                                                                                            unless defined $m2;
                                                                                                                                                                        INIT {
                                                                                                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new',
                                                                                                                                                                                { modified => $_MODIFIED, name => '$m2' } );
                                                                                                                                                                        }
                                                                                                                                                                        ::DISPATCH_VAR( $m2, 'STORE',
                                                                                                                                                                            ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                                                                                        do {
                                                                                                                                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                                                                                do {
                                                                                                                                                                                    ::DISPATCH_VAR(
                                                                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                        'STORE',
                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                            (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                    = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                            ),
                                                                                                                                                                                            'APPLY',
                                                                                                                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                                                                                        )
                                                                                                                                                                                    );
                                                                                                                                                                                    ::DISPATCH_VAR(
                                                                                                                                                                                        ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ),
                                                                                                                                                                                        'STORE', $m2
                                                                                                                                                                                    );
                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                                    }
                                                                                                                                                                            }
                                                                                                                                                                            else {
                                                                                                                                                                                do {
                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                    }
                                                                                                                                                                            }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                };
                                                                                                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                                    ? do {
                                                                                                                                                                    my $_tmp1 = do {
                                                                                                                                                                        do {
                                                                                                                                                                            my $m2;
                                                                                                                                                                            $m2
                                                                                                                                                                                = ::DISPATCH( $::Scalar, 'new',
                                                                                                                                                                                { modified => $_MODIFIED, name => '$m2' } )
                                                                                                                                                                                unless defined $m2;
                                                                                                                                                                            INIT {
                                                                                                                                                                                $m2 = ::DISPATCH( $::Scalar, 'new',
                                                                                                                                                                                    { modified => $_MODIFIED, name => '$m2' } );
                                                                                                                                                                            }
                                                                                                                                                                            ::DISPATCH_VAR( $m2, 'STORE',
                                                                                                                                                                                ::DISPATCH( $self, 'cint1', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                                                                                            do {
                                                                                                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                                                                                    do {
                                                                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                            'STORE',
                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                        = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                        || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                                ),
                                                                                                                                                                                                'APPLY',
                                                                                                                                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                                                                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                                                                                            )
                                                                                                                                                                                        );
                                                                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                $MATCH, 'LOOKUP',
                                                                                                                                                                                                ::DISPATCH( $::Str, 'new', 'cint1' )
                                                                                                                                                                                            ),
                                                                                                                                                                                            'STORE', $m2
                                                                                                                                                                                        );
                                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                                        }
                                                                                                                                                                                }
                                                                                                                                                                                else {
                                                                                                                                                                                    do {
                                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                        }
                                                                                                                                                                                }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                    };
                                                                                                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                                        ? do {
                                                                                                                                                                        my $_tmp1 = do {
                                                                                                                                                                            do {
                                                                                                                                                                                my $m2;
                                                                                                                                                                                $m2
                                                                                                                                                                                    = ::DISPATCH( $::Scalar, 'new',
                                                                                                                                                                                    { modified => $_MODIFIED, name => '$m2' } )
                                                                                                                                                                                    unless defined $m2;
                                                                                                                                                                                INIT {
                                                                                                                                                                                    $m2 = ::DISPATCH( $::Scalar, 'new',
                                                                                                                                                                                        { modified => $_MODIFIED, name => '$m2' } );
                                                                                                                                                                                }
                                                                                                                                                                                ::DISPATCH_VAR( $m2, 'STORE',
                                                                                                                                                                                    ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                                                                                                do {
                                                                                                                                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                                                                                        do {
                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                                'STORE',
                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                            = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                            || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                                                                                                )
                                                                                                                                                                                            );
                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                    $MATCH, 'LOOKUP',
                                                                                                                                                                                                    ::DISPATCH( $::Str, 'new', 'ws' )
                                                                                                                                                                                                ),
                                                                                                                                                                                                'STORE', $m2
                                                                                                                                                                                            );
                                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                                            }
                                                                                                                                                                                    }
                                                                                                                                                                                    else {
                                                                                                                                                                                        do {
                                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                            }
                                                                                                                                                                                    }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                        };
                                                                                                                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                                            ? do {
                                                                                                                                                                            my $_tmp1 = do {
                                                                                                                                                                                do {
                                                                                                                                                                                    do {
                                                                                                                                                                                        if (::DISPATCH(
                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                        (   $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                                                = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        'APPLY',
                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                            (   $GLOBAL::Code_chars
                                                                                                                                                                                                                    = $GLOBAL::Code_chars
                                                                                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                                            ),
                                                                                                                                                                                                            'APPLY', $str
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    "true"
                                                                                                                                                                                                ),
                                                                                                                                                                                                "p5landish"
                                                                                                                                                                                            )
                                                                                                                                                                                            )
                                                                                                                                                                                        {
                                                                                                                                                                                            do {
                                                                                                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                                }
                                                                                                                                                                                        }
                                                                                                                                                                                        else {
                                                                                                                                                                                            do {
                                                                                                                                                                                                do {
                                                                                                                                                                                                    if (::DISPATCH(
                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                                            = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                                            || ::DISPATCH(
                                                                                                                                                                                                                            $::Routine, "new",
                                                                                                                                                                                                                            )
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                                    ::DISPATCH( $::Str, 'new', ',' ),
                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                        (   $GLOBAL::Code_substr
                                                                                                                                                                                                                                = $GLOBAL::Code_substr
                                                                                                                                                                                                                                || ::DISPATCH(
                                                                                                                                                                                                                                $::Routine, "new",
                                                                                                                                                                                                                                )
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                        'APPLY', $str,
                                                                                                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                                                                    )
                                                                                                                                                                                                                ),
                                                                                                                                                                                                                "true"
                                                                                                                                                                                                            ),
                                                                                                                                                                                                            "p5landish"
                                                                                                                                                                                                        )
                                                                                                                                                                                                        )
                                                                                                                                                                                                    {
                                                                                                                                                                                                        do {
                                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                                                'STORE',
                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                            = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                            || ::DISPATCH(
                                                                                                                                                                                                                            $::Routine, "new",
                                                                                                                                                                                                                            )
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                                                                                )
                                                                                                                                                                                                            );
                                                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                                                            }
                                                                                                                                                                                                    }
                                                                                                                                                                                                    else {
                                                                                                                                                                                                        do {
                                                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                                            }
                                                                                                                                                                                                    }
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                        }
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                            };
                                                                                                                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                                                ? do {
                                                                                                                                                                                my $_tmp1 = do {
                                                                                                                                                                                    do {
                                                                                                                                                                                        my $m2;
                                                                                                                                                                                        $m2
                                                                                                                                                                                            = ::DISPATCH( $::Scalar, 'new',
                                                                                                                                                                                            { modified => $_MODIFIED, name => '$m2' } )
                                                                                                                                                                                            unless defined $m2;
                                                                                                                                                                                        INIT {
                                                                                                                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new',
                                                                                                                                                                                                { modified => $_MODIFIED, name => '$m2' } );
                                                                                                                                                                                        }
                                                                                                                                                                                        ::DISPATCH_VAR( $m2, 'STORE',
                                                                                                                                                                                            ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                                                                                        );
                                                                                                                                                                                        do {
                                                                                                                                                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                                                                                                do {
                                                                                                                                                                                                    ::DISPATCH_VAR(
                                                                                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                                        'STORE',
                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                            (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                    = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                                                                                                                            ),
                                                                                                                                                                                                            'APPLY',
                                                                                                                                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                                                                                                        )
                                                                                                                                                                                                    );
                                                                                                                                                                                                    ::DISPATCH_VAR(
                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                            $MATCH, 'LOOKUP',
                                                                                                                                                                                                            ::DISPATCH( $::Str, 'new', 'ws' )
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        'STORE', $m2
                                                                                                                                                                                                    );
                                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                                                    }
                                                                                                                                                                                            }
                                                                                                                                                                                            else {
                                                                                                                                                                                                do {
                                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                                    }
                                                                                                                                                                                            }
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                };
                                                                                                                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                                                    ? do {
                                                                                                                                                                                    my $_tmp1 = do {
                                                                                                                                                                                        do {
                                                                                                                                                                                            my $m2;
                                                                                                                                                                                            $m2
                                                                                                                                                                                                = ::DISPATCH( $::Scalar, 'new',
                                                                                                                                                                                                { modified => $_MODIFIED, name => '$m2' } )
                                                                                                                                                                                                unless defined $m2;
                                                                                                                                                                                            INIT {
                                                                                                                                                                                                $m2 = ::DISPATCH( $::Scalar, 'new',
                                                                                                                                                                                                    { modified => $_MODIFIED, name => '$m2' } );
                                                                                                                                                                                            }
                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                $m2, 'STORE',
                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                    $self, 'cintlist1',
                                                                                                                                                                                                    $str, ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                                                                )
                                                                                                                                                                                            );
                                                                                                                                                                                            do {
                                                                                                                                                                                                if (::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) )
                                                                                                                                                                                                {
                                                                                                                                                                                                    do {
                                                                                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                                            'STORE',
                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                        = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                        || ::DISPATCH( $::Routine, "new",
                                                                                                                                                                                                                        )
                                                                                                                                                                                                                ),
                                                                                                                                                                                                                'APPLY',
                                                                                                                                                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                                                                                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                                                                                                            )
                                                                                                                                                                                                        );
                                                                                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                $MATCH,
                                                                                                                                                                                                                'LOOKUP',
                                                                                                                                                                                                                ::DISPATCH( $::Str, 'new', 'cintlist1' )
                                                                                                                                                                                                            ),
                                                                                                                                                                                                            'STORE', $m2
                                                                                                                                                                                                        );
                                                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                                                        }
                                                                                                                                                                                                }
                                                                                                                                                                                                else {
                                                                                                                                                                                                    do {
                                                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                                        }
                                                                                                                                                                                                }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                    };
                                                                                                                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                                                        ? do {
                                                                                                                                                                                        my $_tmp1 = do {
                                                                                                                                                                                            do {
                                                                                                                                                                                                my $m2;
                                                                                                                                                                                                $m2
                                                                                                                                                                                                    = ::DISPATCH( $::Scalar, 'new',
                                                                                                                                                                                                    { modified => $_MODIFIED, name => '$m2' } )
                                                                                                                                                                                                    unless defined $m2;
                                                                                                                                                                                                INIT {
                                                                                                                                                                                                    $m2 = ::DISPATCH( $::Scalar, 'new',
                                                                                                                                                                                                        { modified => $_MODIFIED, name => '$m2' } );
                                                                                                                                                                                                }
                                                                                                                                                                                                ::DISPATCH_VAR(
                                                                                                                                                                                                    $m2, 'STORE',
                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                        $self, 'ws',
                                                                                                                                                                                                        $str, ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                                                                    )
                                                                                                                                                                                                );
                                                                                                                                                                                                do {
                                                                                                                                                                                                    if (::DISPATCH(
                                                                                                                                                                                                            ::DISPATCH( $m2, "true" ), "p5landish"
                                                                                                                                                                                                        )
                                                                                                                                                                                                        )
                                                                                                                                                                                                    {
                                                                                                                                                                                                        do {
                                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                                                'STORE',
                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                            = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                            || ::DISPATCH(
                                                                                                                                                                                                                            $::Routine, "new",
                                                                                                                                                                                                                            )
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                                                                                                                )
                                                                                                                                                                                                            );
                                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                    $MATCH, 'LOOKUP',
                                                                                                                                                                                                                    ::DISPATCH( $::Str, 'new', 'ws' )
                                                                                                                                                                                                                ),
                                                                                                                                                                                                                'STORE', $m2
                                                                                                                                                                                                            );
                                                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                                                            }
                                                                                                                                                                                                    }
                                                                                                                                                                                                    else {
                                                                                                                                                                                                        do {
                                                                                                                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                                            }
                                                                                                                                                                                                    }
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                        };
                                                                                                                                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                                                            ? do {
                                                                                                                                                                                            my $_tmp1 = do {
                                                                                                                                                                                                do {
                                                                                                                                                                                                    do {
                                                                                                                                                                                                        if (::DISPATCH(
                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                        (   $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                                                                = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                                                                || ::DISPATCH(
                                                                                                                                                                                                                                $::Routine, "new",
                                                                                                                                                                                                                                )
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                        'APPLY',
                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                            (   $GLOBAL::Code_chars
                                                                                                                                                                                                                                    = $GLOBAL::Code_chars
                                                                                                                                                                                                                                    || ::DISPATCH(
                                                                                                                                                                                                                                    $::Routine, "new",
                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            'APPLY', $str
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                    "true"
                                                                                                                                                                                                                ),
                                                                                                                                                                                                                "p5landish"
                                                                                                                                                                                                            )
                                                                                                                                                                                                            )
                                                                                                                                                                                                        {
                                                                                                                                                                                                            do {
                                                                                                                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                                                }
                                                                                                                                                                                                        }
                                                                                                                                                                                                        else {
                                                                                                                                                                                                            do {
                                                                                                                                                                                                                do {
                                                                                                                                                                                                                    if (::DISPATCH(
                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                                                            = $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                                                            || ::DISPATCH(
                                                                                                                                                                                                                                            $::Routine,
                                                                                                                                                                                                                                            "new",
                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                        $::Str, 'new',
                                                                                                                                                                                                                                        ','
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                        (   $GLOBAL::Code_substr
                                                                                                                                                                                                                                                = $GLOBAL::Code_substr
                                                                                                                                                                                                                                                || ::DISPATCH(
                                                                                                                                                                                                                                                $::Routine,
                                                                                                                                                                                                                                                "new",
                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        'APPLY',
                                                                                                                                                                                                                                        $str,
                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                            $MATCH,
                                                                                                                                                                                                                                            'to',
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                            $::Int,
                                                                                                                                                                                                                                            'new',
                                                                                                                                                                                                                                            1
                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                "true"
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            "p5landish"
                                                                                                                                                                                                                        )
                                                                                                                                                                                                                        )
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                        do {
                                                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                                                ::DISPATCH( $MATCH, 'to',
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                'STORE',
                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                            = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                            || ::DISPATCH(
                                                                                                                                                                                                                                            $::Routine,
                                                                                                                                                                                                                                            "new",
                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                        $::Int, 'new',
                                                                                                                                                                                                                                        1
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                        $MATCH, 'to',
                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                )
                                                                                                                                                                                                                            );
                                                                                                                                                                                                                            ::DISPATCH( $::Int, 'new',
                                                                                                                                                                                                                                1 );
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                        do {
                                                                                                                                                                                                                            ::DISPATCH( $::Int, 'new',
                                                                                                                                                                                                                                0 );
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                }
                                                                                                                                                                                                        }
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                            };
                                                                                                                                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                                                                ? do {
                                                                                                                                                                                                my $_tmp1 = do {
                                                                                                                                                                                                    do {
                                                                                                                                                                                                        my $m2;
                                                                                                                                                                                                        $m2
                                                                                                                                                                                                            = ::DISPATCH( $::Scalar, 'new',
                                                                                                                                                                                                            { modified => $_MODIFIED, name => '$m2' } )
                                                                                                                                                                                                            unless defined $m2;
                                                                                                                                                                                                        INIT {
                                                                                                                                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new',
                                                                                                                                                                                                                { modified => $_MODIFIED, name => '$m2' }
                                                                                                                                                                                                            );
                                                                                                                                                                                                        }
                                                                                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                                                                                            $m2, 'STORE',
                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                $self, 'ws',
                                                                                                                                                                                                                $str, ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                                                                            )
                                                                                                                                                                                                        );
                                                                                                                                                                                                        do {
                                                                                                                                                                                                            if (::DISPATCH(
                                                                                                                                                                                                                    ::DISPATCH( $m2, "true" ), "p5landish"
                                                                                                                                                                                                                )
                                                                                                                                                                                                                )
                                                                                                                                                                                                            {
                                                                                                                                                                                                                do {
                                                                                                                                                                                                                    ::DISPATCH_VAR(
                                                                                                                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                                                        'STORE',
                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                            (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                    = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                    || ::DISPATCH(
                                                                                                                                                                                                                                    $::Routine, "new",
                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            'APPLY',
                                                                                                                                                                                                                            ::DISPATCH( $m2, 'to', ),
                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                $::Int, 'new', 0
                                                                                                                                                                                                                            )
                                                                                                                                                                                                                        )
                                                                                                                                                                                                                    );
                                                                                                                                                                                                                    ::DISPATCH_VAR(
                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                            $MATCH, 'LOOKUP',
                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                $::Str, 'new', 'ws'
                                                                                                                                                                                                                            )
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                        'STORE', $m2
                                                                                                                                                                                                                    );
                                                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                                                                    }
                                                                                                                                                                                                            }
                                                                                                                                                                                                            else {
                                                                                                                                                                                                                do {
                                                                                                                                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                                                    }
                                                                                                                                                                                                            }
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                };
                                                                                                                                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                                                                    ? do {
                                                                                                                                                                                                    my $_tmp1 = do {
                                                                                                                                                                                                        do {
                                                                                                                                                                                                            my $m2;
                                                                                                                                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new',
                                                                                                                                                                                                                { modified => $_MODIFIED, name => '$m2' }
                                                                                                                                                                                                            ) unless defined $m2;
                                                                                                                                                                                                            INIT {
                                                                                                                                                                                                                $m2 = ::DISPATCH(
                                                                                                                                                                                                                    $::Scalar,
                                                                                                                                                                                                                    'new',
                                                                                                                                                                                                                    {   modified => $_MODIFIED,
                                                                                                                                                                                                                        name     => '$m2'
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                );
                                                                                                                                                                                                            }
                                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                                $m2, 'STORE',
                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                    $self, 'cintlist2',
                                                                                                                                                                                                                    $str, ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                                                                                )
                                                                                                                                                                                                            );
                                                                                                                                                                                                            do {
                                                                                                                                                                                                                if (::DISPATCH(
                                                                                                                                                                                                                        ::DISPATCH( $m2, "true" ),
                                                                                                                                                                                                                        "p5landish"
                                                                                                                                                                                                                    )
                                                                                                                                                                                                                    )
                                                                                                                                                                                                                {
                                                                                                                                                                                                                    do {
                                                                                                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                                                                                                            'STORE',
                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                        = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                        || ::DISPATCH(
                                                                                                                                                                                                                                        $::Routine, "new",
                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                'APPLY',
                                                                                                                                                                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                    $::Int, 'new', 0
                                                                                                                                                                                                                                )
                                                                                                                                                                                                                            )
                                                                                                                                                                                                                        );
                                                                                                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                $MATCH, 'LOOKUP',
                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                    $::Str, 'new',
                                                                                                                                                                                                                                    'cintlist2'
                                                                                                                                                                                                                                )
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            'STORE', $m2
                                                                                                                                                                                                                        );
                                                                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                }
                                                                                                                                                                                                                else {
                                                                                                                                                                                                                    do {
                                                                                                                                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                }
                                                                                                                                                                                                                }
                                                                                                                                                                                                            }
                                                                                                                                                                                                    };
                                                                                                                                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                                                                        ? do {
                                                                                                                                                                                                        my $_tmp1 = do {
                                                                                                                                                                                                            do {
                                                                                                                                                                                                                my $m2;
                                                                                                                                                                                                                $m2 = ::DISPATCH(
                                                                                                                                                                                                                    $::Scalar,
                                                                                                                                                                                                                    'new',
                                                                                                                                                                                                                    {   modified => $_MODIFIED,
                                                                                                                                                                                                                        name     => '$m2'
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                ) unless defined $m2;
                                                                                                                                                                                                                INIT {
                                                                                                                                                                                                                    $m2 = ::DISPATCH(
                                                                                                                                                                                                                        $::Scalar,
                                                                                                                                                                                                                        'new',
                                                                                                                                                                                                                        {   modified => $_MODIFIED,
                                                                                                                                                                                                                            name     => '$m2'
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    );
                                                                                                                                                                                                                }
                                                                                                                                                                                                                ::DISPATCH_VAR(
                                                                                                                                                                                                                    $m2, 'STORE',
                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                        $self, 'ws', $str,
                                                                                                                                                                                                                        ::DISPATCH( $MATCH, 'to', )
                                                                                                                                                                                                                    )
                                                                                                                                                                                                                );
                                                                                                                                                                                                                do {
                                                                                                                                                                                                                    if (::DISPATCH(
                                                                                                                                                                                                                            ::DISPATCH( $m2, "true" ),
                                                                                                                                                                                                                            "p5landish"
                                                                                                                                                                                                                        )
                                                                                                                                                                                                                        )
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                        do {
                                                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                                                ::DISPATCH( $MATCH, 'to',
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                'STORE',
                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                            = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                            || ::DISPATCH(
                                                                                                                                                                                                                                            $::Routine,
                                                                                                                                                                                                                                            "new",
                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                        $m2, 'to',
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                        $::Int, 'new',
                                                                                                                                                                                                                                        0
                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                )
                                                                                                                                                                                                                            );
                                                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                    $MATCH, 'LOOKUP',
                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                        $::Str, 'new',
                                                                                                                                                                                                                                        'ws'
                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                'STORE', $m2
                                                                                                                                                                                                                            );
                                                                                                                                                                                                                            ::DISPATCH( $::Int, 'new',
                                                                                                                                                                                                                                1 );
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                        do {
                                                                                                                                                                                                                            ::DISPATCH( $::Int, 'new',
                                                                                                                                                                                                                                0 );
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                }
                                                                                                                                                                                                        };
                                                                                                                                                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                                                                            ? do {
                                                                                                                                                                                                            my $_tmp1 = do {
                                                                                                                                                                                                                do {
                                                                                                                                                                                                                    do {
                                                                                                                                                                                                                        if (::DISPATCH(
                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                        (   $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                                                                                = $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                                                                                || ::DISPATCH(
                                                                                                                                                                                                                                                $::Routine,
                                                                                                                                                                                                                                                "new",
                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        'APPLY',
                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                            (   $GLOBAL::Code_chars
                                                                                                                                                                                                                                                    = $GLOBAL::Code_chars
                                                                                                                                                                                                                                                    || ::DISPATCH(
                                                                                                                                                                                                                                                    $::Routine,
                                                                                                                                                                                                                                                    "new",
                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            'APPLY',
                                                                                                                                                                                                                                            $str
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                            $::Int,
                                                                                                                                                                                                                                            'new',
                                                                                                                                                                                                                                            1
                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                    "true"
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                "p5landish"
                                                                                                                                                                                                                            )
                                                                                                                                                                                                                            )
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            do {
                                                                                                                                                                                                                                ::DISPATCH( $::Int, 'new',
                                                                                                                                                                                                                                    0 );
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        else {
                                                                                                                                                                                                                            do {
                                                                                                                                                                                                                                do {
                                                                                                                                                                                                                                    if (::DISPATCH(
                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                                                                            =
                                                                                                                                                                                                                                                            $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                                                                            ||
                                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                            $::Routine,
                                                                                                                                                                                                                                                            "new",
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                                        $::Str,
                                                                                                                                                                                                                                                        'new',
                                                                                                                                                                                                                                                        ','
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                                        (   $GLOBAL::Code_substr
                                                                                                                                                                                                                                                                =
                                                                                                                                                                                                                                                                $GLOBAL::Code_substr
                                                                                                                                                                                                                                                                ||
                                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                                $::Routine,
                                                                                                                                                                                                                                                                "new",
                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                                        'APPLY',
                                                                                                                                                                                                                                                        $str,
                                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                                            $MATCH,
                                                                                                                                                                                                                                                            'to',
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                                            $::Int,
                                                                                                                                                                                                                                                            'new',
                                                                                                                                                                                                                                                            1
                                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                "true"
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            "p5landish"
                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                        do {
                                                                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    $MATCH,
                                                                                                                                                                                                                                                    'to',
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                'STORE',
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                                            =
                                                                                                                                                                                                                                                            $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                                            ||
                                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                            $::Routine,
                                                                                                                                                                                                                                                            "new",
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                                        $::Int,
                                                                                                                                                                                                                                                        'new',
                                                                                                                                                                                                                                                        1
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                                        $MATCH,
                                                                                                                                                                                                                                                        'to',
                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                            );
                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                $::Int,
                                                                                                                                                                                                                                                'new',
                                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                            );
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                        do {
                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                $::Int,
                                                                                                                                                                                                                                                'new',
                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                            );
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                            };
                                                                                                                                                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                                                                                ? do {
                                                                                                                                                                                                                my $_tmp1 = do {
                                                                                                                                                                                                                    do {
                                                                                                                                                                                                                        my $m2;
                                                                                                                                                                                                                        $m2 = ::DISPATCH(
                                                                                                                                                                                                                            $::Scalar,
                                                                                                                                                                                                                            'new',
                                                                                                                                                                                                                            {   modified => $_MODIFIED,
                                                                                                                                                                                                                                name     => '$m2'
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        ) unless defined $m2;
                                                                                                                                                                                                                        INIT {
                                                                                                                                                                                                                            $m2 = ::DISPATCH(
                                                                                                                                                                                                                                $::Scalar,
                                                                                                                                                                                                                                'new',
                                                                                                                                                                                                                                {   modified =>
                                                                                                                                                                                                                                        $_MODIFIED,
                                                                                                                                                                                                                                    name => '$m2'
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            );
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                                                                                                            $m2, 'STORE',
                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                $self, 'ws',
                                                                                                                                                                                                                                $str,
                                                                                                                                                                                                                                ::DISPATCH( $MATCH, 'to',
                                                                                                                                                                                                                                )
                                                                                                                                                                                                                            )
                                                                                                                                                                                                                        );
                                                                                                                                                                                                                        do {
                                                                                                                                                                                                                            if (::DISPATCH(
                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                        $m2, "true"
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                    "p5landish"
                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                )
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                do {
                                                                                                                                                                                                                                    ::DISPATCH_VAR(
                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                            $MATCH,
                                                                                                                                                                                                                                            'to',
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        'STORE',
                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                            (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                                    = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                                    || ::DISPATCH(
                                                                                                                                                                                                                                                    $::Routine,
                                                                                                                                                                                                                                                    "new",
                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            'APPLY',
                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                $m2,
                                                                                                                                                                                                                                                'to',
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                $::Int,
                                                                                                                                                                                                                                                'new',
                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                    );
                                                                                                                                                                                                                                    ::DISPATCH_VAR(
                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                            $MATCH,
                                                                                                                                                                                                                                            'LOOKUP',
                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                $::Str,
                                                                                                                                                                                                                                                'new',
                                                                                                                                                                                                                                                'ws'
                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        'STORE',
                                                                                                                                                                                                                                        $m2
                                                                                                                                                                                                                                    );
                                                                                                                                                                                                                                    ::DISPATCH( $::Int,
                                                                                                                                                                                                                                        'new', 1 );
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            else {
                                                                                                                                                                                                                                do {
                                                                                                                                                                                                                                    ::DISPATCH( $::Int,
                                                                                                                                                                                                                                        'new', 0 );
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                };
                                                                                                                                                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                                                                                    ? do {
                                                                                                                                                                                                                    my $_tmp1 = do {
                                                                                                                                                                                                                        do {
                                                                                                                                                                                                                            my $m2;
                                                                                                                                                                                                                            $m2 = ::DISPATCH(
                                                                                                                                                                                                                                $::Scalar,
                                                                                                                                                                                                                                'new',
                                                                                                                                                                                                                                {   modified =>
                                                                                                                                                                                                                                        $_MODIFIED,
                                                                                                                                                                                                                                    name => '$m2'
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            ) unless defined $m2;
                                                                                                                                                                                                                            INIT {
                                                                                                                                                                                                                                $m2 = ::DISPATCH(
                                                                                                                                                                                                                                    $::Scalar,
                                                                                                                                                                                                                                    'new',
                                                                                                                                                                                                                                    {   modified =>
                                                                                                                                                                                                                                            $_MODIFIED,
                                                                                                                                                                                                                                        name => '$m2'
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                );
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                                                $m2, 'STORE',
                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                    $self, 'cint2',
                                                                                                                                                                                                                                    $str,
                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                        $MATCH, 'to',
                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                )
                                                                                                                                                                                                                            );
                                                                                                                                                                                                                            do {
                                                                                                                                                                                                                                if (::DISPATCH(
                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                            $m2, "true"
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        "p5landish"
                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                    do {
                                                                                                                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                $MATCH,
                                                                                                                                                                                                                                                'to',
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            'STORE',
                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                                        = $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                                        || ::DISPATCH(
                                                                                                                                                                                                                                                        $::Routine,
                                                                                                                                                                                                                                                        "new",
                                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                'APPLY',
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    $m2,
                                                                                                                                                                                                                                                    'to',
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    $::Int,
                                                                                                                                                                                                                                                    'new',
                                                                                                                                                                                                                                                    0
                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                        );
                                                                                                                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                $MATCH,
                                                                                                                                                                                                                                                'LOOKUP',
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    $::Str,
                                                                                                                                                                                                                                                    'new',
                                                                                                                                                                                                                                                    'cint2'
                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            'STORE',
                                                                                                                                                                                                                                            $m2
                                                                                                                                                                                                                                        );
                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                            $::Int, 'new',
                                                                                                                                                                                                                                            1 );
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                    do {
                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                            $::Int, 'new',
                                                                                                                                                                                                                                            0 );
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                                                                                                                                        ? do {
                                                                                                                                                                                                                        my $_tmp1 = do {
                                                                                                                                                                                                                            do {
                                                                                                                                                                                                                                do {
                                                                                                                                                                                                                                    if (::DISPATCH(
                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                                                                                            =
                                                                                                                                                                                                                                                            $GLOBAL::Code_infix_58__60__60__62_
                                                                                                                                                                                                                                                            ||
                                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                            $::Routine,
                                                                                                                                                                                                                                                            "new",
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                                        (   $GLOBAL::Code_chars
                                                                                                                                                                                                                                                                =
                                                                                                                                                                                                                                                                $GLOBAL::Code_chars
                                                                                                                                                                                                                                                                ||
                                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                                $::Routine,
                                                                                                                                                                                                                                                                "new",
                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                                        'APPLY',
                                                                                                                                                                                                                                                        $str
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                                        $::Int,
                                                                                                                                                                                                                                                        'new',
                                                                                                                                                                                                                                                        1
                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                "true"
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            "p5landish"
                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                        do {
                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                $::Int,
                                                                                                                                                                                                                                                'new',
                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                            );
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                        do {
                                                                                                                                                                                                                                            do {
                                                                                                                                                                                                                                                if (::DISPATCH(
                                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                                (   $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                                                                                        =
                                                                                                                                                                                                                                                                        $GLOBAL::Code_infix_58__60_eq_62_
                                                                                                                                                                                                                                                                        ||
                                                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                                                        $::Routine,
                                                                                                                                                                                                                                                                        "new",
                                                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                                                'APPLY',
                                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                                    $::Str,
                                                                                                                                                                                                                                                                    'new',
                                                                                                                                                                                                                                                                    ')'
                                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                                    (   $GLOBAL::Code_substr
                                                                                                                                                                                                                                                                            =
                                                                                                                                                                                                                                                                            $GLOBAL::Code_substr
                                                                                                                                                                                                                                                                            ||
                                                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                                            $::Routine,
                                                                                                                                                                                                                                                                            "new",
                                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                                    ,
                                                                                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                                                                                    $str,
                                                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                                                        $MATCH,
                                                                                                                                                                                                                                                                        'to',
                                                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                                                    ,
                                                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                                                        $::Int,
                                                                                                                                                                                                                                                                        'new',
                                                                                                                                                                                                                                                                        1
                                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                            ,
                                                                                                                                                                                                                                                            "true"
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                                                        "p5landish"
                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                    do {
                                                                                                                                                                                                                                                        ::DISPATCH_VAR(
                                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                                $MATCH,
                                                                                                                                                                                                                                                                'to',
                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                            ,
                                                                                                                                                                                                                                                            'STORE',
                                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                                (   $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                                                        =
                                                                                                                                                                                                                                                                        $GLOBAL::Code_infix_58__60__43__62_
                                                                                                                                                                                                                                                                        ||
                                                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                                                        $::Routine,
                                                                                                                                                                                                                                                                        "new",
                                                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                                                'APPLY',
                                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                                    $::Int,
                                                                                                                                                                                                                                                                    'new',
                                                                                                                                                                                                                                                                    1
                                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                                    $MATCH,
                                                                                                                                                                                                                                                                    'to',
                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                            ;
                                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                                            $::Int,
                                                                                                                                                                                                                                                            'new',
                                                                                                                                                                                                                                                            1
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                            ;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                                    do {
                                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                                            $::Int,
                                                                                                                                                                                                                                                            'new',
                                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                            ;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        ::DISPATCH( $_tmp1, "true" )
                                                                                                                                                                                                                            ->{_value}
                                                                                                                                                                                                                            ? do {
                                                                                                                                                                                                                            do {
                                                                                                                                                                                                                                my $ret;
                                                                                                                                                                                                                                $ret = ::DISPATCH(
                                                                                                                                                                                                                                    $::Scalar,
                                                                                                                                                                                                                                    'new',
                                                                                                                                                                                                                                    {   modified =>
                                                                                                                                                                                                                                            $_MODIFIED,
                                                                                                                                                                                                                                        name => '$ret'
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                ) unless defined $ret;
                                                                                                                                                                                                                                INIT {
                                                                                                                                                                                                                                    $ret = ::DISPATCH(
                                                                                                                                                                                                                                        $::Scalar,
                                                                                                                                                                                                                                        'new',
                                                                                                                                                                                                                                        {   modified =>
                                                                                                                                                                                                                                                $_MODIFIED,
                                                                                                                                                                                                                                            name => '$ret'
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    );
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                ::DISPATCH_VAR(
                                                                                                                                                                                                                                    $ret, 'STORE',
                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                        $self,
                                                                                                                                                                                                                                        '__rule_block32_964b2b97370a99cf340ba28f83600483',
                                                                                                                                                                                                                                        $MATCH
                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                );
                                                                                                                                                                                                                                do {
                                                                                                                                                                                                                                    if (::DISPATCH(
                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    (   $GLOBAL::Code_defined
                                                                                                                                                                                                                                                            =
                                                                                                                                                                                                                                                            $GLOBAL::Code_defined
                                                                                                                                                                                                                                                            ||
                                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                            $::Routine,
                                                                                                                                                                                                                                                            "new",
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                                                                    (   $GLOBAL::_REGEX_RETURN_
                                                                                                                                                                                                                                                            =
                                                                                                                                                                                                                                                            $GLOBAL::_REGEX_RETURN_
                                                                                                                                                                                                                                                            ||
                                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                            $::Scalar,
                                                                                                                                                                                                                                                            "new",
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                "true"
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            "p5landish"
                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                        do {
                                                                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    $MATCH,
                                                                                                                                                                                                                                                    'result',
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                'STORE',
                                                                                                                                                                                                                                                (   $GLOBAL::_REGEX_RETURN_
                                                                                                                                                                                                                                                        = $GLOBAL::_REGEX_RETURN_
                                                                                                                                                                                                                                                        || ::DISPATCH(
                                                                                                                                                                                                                                                        $::Scalar,
                                                                                                                                                                                                                                                        "new",
                                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                            );
                                                                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    $MATCH,
                                                                                                                                                                                                                                                    'bool',
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                'STORE',
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    $::Int,
                                                                                                                                                                                                                                                    'new',
                                                                                                                                                                                                                                                    1
                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                            );
                                                                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    (   $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                                                                                                                                                            =
                                                                                                                                                                                                                                                            $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                                                                                                                                                            ||
                                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                            $::Routine,
                                                                                                                                                                                                                                                            "new",
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                                        (   $GLOBAL::Code_VAR_defined
                                                                                                                                                                                                                                                                =
                                                                                                                                                                                                                                                                $GLOBAL::Code_VAR_defined
                                                                                                                                                                                                                                                                ||
                                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                                $::Routine,
                                                                                                                                                                                                                                                                "new",
                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                                        'APPLY',
                                                                                                                                                                                                                                                        (   $GLOBAL::_REGEX_RETURN_
                                                                                                                                                                                                                                                                =
                                                                                                                                                                                                                                                                $GLOBAL::_REGEX_RETURN_
                                                                                                                                                                                                                                                                ||
                                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                                $::Scalar,
                                                                                                                                                                                                                                                                "new",
                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    (   $GLOBAL::_REGEX_RETURN_
                                                                                                                                                                                                                                                            =
                                                                                                                                                                                                                                                            $GLOBAL::_REGEX_RETURN_
                                                                                                                                                                                                                                                            ||
                                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                            $::Scalar,
                                                                                                                                                                                                                                                            "new",
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    do {
                                                                                                                                                                                                                                                        ::MODIFIED(
                                                                                                                                                                                                                                                            (   $GLOBAL::_REGEX_RETURN_
                                                                                                                                                                                                                                                                    =
                                                                                                                                                                                                                                                                    $GLOBAL::_REGEX_RETURN_
                                                                                                                                                                                                                                                                    ||
                                                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                                                    $::Scalar,
                                                                                                                                                                                                                                                                    "new",
                                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                            ;
                                                                                                                                                                                                                                                        (   $GLOBAL::_REGEX_RETURN_
                                                                                                                                                                                                                                                                =
                                                                                                                                                                                                                                                                $GLOBAL::_REGEX_RETURN_
                                                                                                                                                                                                                                                                ||
                                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                                $::Scalar,
                                                                                                                                                                                                                                                                "new",
                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                            =
                                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                            $::Scalar,
                                                                                                                                                                                                                                                            'new',
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                            ;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                'STORE',
                                                                                                                                                                                                                                                $::Undef
                                                                                                                                                                                                                                            );
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                            $::Bit, "new",
                                                                                                                                                                                                                                            0 );
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                do {
                                                                                                                                                                                                                                    if (::DISPATCH(
                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    (   $GLOBAL::Code_infix_58__60_ne_62_
                                                                                                                                                                                                                                                            =
                                                                                                                                                                                                                                                            $GLOBAL::Code_infix_58__60_ne_62_
                                                                                                                                                                                                                                                            ||
                                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                            $::Routine,
                                                                                                                                                                                                                                                            "new",
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    'APPLY',
                                                                                                                                                                                                                                                    $ret,
                                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                                        $::Str,
                                                                                                                                                                                                                                                        'new',
                                                                                                                                                                                                                                                        'sTrNgE V4l'
                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                "true"
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            "p5landish"
                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                        do {
                                                                                                                                                                                                                                            do {
                                                                                                                                                                                                                                                if (::DISPATCH(
                                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                                (   $GLOBAL::Hash_ENV
                                                                                                                                                                                                                                                                        =
                                                                                                                                                                                                                                                                        $GLOBAL::Hash_ENV
                                                                                                                                                                                                                                                                        ||
                                                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                                                        $::HashContainer,
                                                                                                                                                                                                                                                                        "new",
                                                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                                                'LOOKUP',
                                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                                    $::Str,
                                                                                                                                                                                                                                                                    'new',
                                                                                                                                                                                                                                                                    'KP6_TOKEN_DEBUGGER'
                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                            ,
                                                                                                                                                                                                                                                            "true"
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                                                        "p5landish"
                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                    do {
                                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                                            (   $GLOBAL::Code_say
                                                                                                                                                                                                                                                                    =
                                                                                                                                                                                                                                                                    $GLOBAL::Code_say
                                                                                                                                                                                                                                                                    ||
                                                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                                                    $::Routine,
                                                                                                                                                                                                                                                                    "new",
                                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                            ,
                                                                                                                                                                                                                                                            'APPLY',
                                                                                                                                                                                                                                                            ::DISPATCH(
                                                                                                                                                                                                                                                                $::Str,
                                                                                                                                                                                                                                                                'new',
                                                                                                                                                                                                                                                                '<<< some closure returning... '
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                            ;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                                    ::DISPATCH(
                                                                                                                                                                                                                                                        $::Bit,
                                                                                                                                                                                                                                                        "new",
                                                                                                                                                                                                                                                        0
                                                                                                                                                                                                                                                    );
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    $MATCH,
                                                                                                                                                                                                                                                    'result',
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                'STORE',
                                                                                                                                                                                                                                                $ret
                                                                                                                                                                                                                                            );
                                                                                                                                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    $MATCH,
                                                                                                                                                                                                                                                    'bool',
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                'STORE',
                                                                                                                                                                                                                                                ::DISPATCH(
                                                                                                                                                                                                                                                    $::Int,
                                                                                                                                                                                                                                                    'new',
                                                                                                                                                                                                                                                    1
                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                            );
                                                                                                                                                                                                                                            return (
                                                                                                                                                                                                                                                $MATCH);
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                        ::DISPATCH(
                                                                                                                                                                                                                                            $::Bit, "new",
                                                                                                                                                                                                                                            0 );
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                ::DISPATCH( $::Int, 'new',
                                                                                                                                                                                                                                    1 );
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            : ::DISPATCH( $::Bit, "new",
                                                                                                                                                                                                                            0 );
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                                                                                }
                                                                                                                                                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                                                                            }
                                                                                                                                                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                                                                        }
                                                                                                                                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                                                                    }
                                                                                                                                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                                                                }
                                                                                                                                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                                                            }
                                                                                                                                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                                                        }
                                                                                                                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                                                    }
                                                                                                                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                                                }
                                                                                                                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                                            }
                                                                                                                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                                        }
                                                                                                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                                    }
                                                                                                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                                }
                                                                                                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                            }
                                                                                                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                        }
                                                                                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                    }
                                                                                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                                }
                                                                                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                            }
                                                                                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                        }
                                                                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                    }
                                                                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                                }
                                                                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                            }
                                                                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                        }
                                                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                    }
                                                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                                }
                                                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                            }
                                                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                        }
                                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                    }
                                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                                }
                                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                                            }
                                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                                        }
                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                    }
                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                }
                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                            }
                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                        }
                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                    }
                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                }
                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                            }
                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token capturize returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token capturize returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'cint1' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token cint1 at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'cint', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cint' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    do {
                                                        my $ret;
                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block33_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                            do {
                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                }
                                                                        ),
                                                                        'STORE',
                                                                        $::Undef
                                                                    );
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    return ($MATCH);
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                        }
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token cint1 returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token cint1 returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'cint2' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token cint2 at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'cint', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cint' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    do {
                                                        my $ret;
                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block34_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                            do {
                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                }
                                                                        ),
                                                                        'STORE',
                                                                        $::Undef
                                                                    );
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    return ($MATCH);
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                        }
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token cint2 returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token cint2 returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'cint' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token cint at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'digitsP5', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'digitsP5' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    do {
                                                        my $ret;
                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block35_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                            do {
                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                }
                                                                        ),
                                                                        'STORE',
                                                                        $::Undef
                                                                    );
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    return ($MATCH);
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                        }
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token cint returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token cint returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'cintlist1' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token cintlist1 at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'cintlist', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cintlist' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    do {
                                                        my $ret;
                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block36_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                            do {
                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                }
                                                                        ),
                                                                        'STORE',
                                                                        $::Undef
                                                                    );
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    return ($MATCH);
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                        }
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token cintlist1 returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token cintlist1 returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'cintlist2' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token cintlist2 at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'cintlist', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cintlist' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    do {
                                                        my $ret;
                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block37_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                            do {
                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                }
                                                                        ),
                                                                        'STORE',
                                                                        $::Undef
                                                                    );
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                        ),
                                                                        "true"
                                                                    ),
                                                                    "p5landish"
                                                                )
                                                                )
                                                            {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                    return ($MATCH);
                                                                    }
                                                            }
                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                        };
                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                        }
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token cintlist2 returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token cintlist2 returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'cintlist' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token cintlist at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        my $_tmp1 = do {
                                            do {
                                                do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', '(' ),
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY', $str,
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                            )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                            ::DISPATCH( $MATCH, 'to', )
                                                                                        )
                                                                                    );
                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                    }
                                                                            }
                                                                            else {
                                                                                do {
                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                    }
                                                                            }
                                                                            }
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        do {
                                                            my $pos1;
                                                            $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                            INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                            ::DISPATCH_VAR(
                                                                $pos1, 'STORE',
                                                                ::DISPATCH(
                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                    'APPLY',
                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                )
                                                            );
                                                            do {
                                                                my $_tmp1 = do {
                                                                    do {
                                                                        do {
                                                                            my $_tmp1 = do {
                                                                                do {
                                                                                    my $m2;
                                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'cintlistbody', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                    do {
                                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                            do {
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE',
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH( $m2, 'to', ),
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    )
                                                                                                );
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cintlistbody' ) ), 'STORE', $m2 );
                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                }
                                                                                        }
                                                                                        else {
                                                                                            do {
                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                    }
                                                                            };
                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                ? do {
                                                                                my $_tmp1 = do {
                                                                                    do {
                                                                                        do {
                                                                                            if (::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                        ),
                                                                                                        "true"
                                                                                                    ),
                                                                                                    "p5landish"
                                                                                                )
                                                                                                )
                                                                                            {
                                                                                                do {
                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                    }
                                                                                            }
                                                                                            else {
                                                                                                do {
                                                                                                    do {
                                                                                                        if (::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Str, 'new', ')' ),
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY', $str,
                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                        )
                                                                                                                    ),
                                                                                                                    "true"
                                                                                                                ),
                                                                                                                "p5landish"
                                                                                                            )
                                                                                                            )
                                                                                                        {
                                                                                                            do {
                                                                                                                ::DISPATCH_VAR(
                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                    'STORE',
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                        ::DISPATCH( $MATCH, 'to', )
                                                                                                                    )
                                                                                                                );
                                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                }
                                                                                                        }
                                                                                                        else {
                                                                                                            do {
                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                    }
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                };
                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                    ? do {
                                                                                    do {
                                                                                        my $ret;
                                                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block38_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                                        do {
                                                                                            if (::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                        ),
                                                                                                        "true"
                                                                                                    ),
                                                                                                    "p5landish"
                                                                                                )
                                                                                                )
                                                                                            {
                                                                                                do {
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                    ::DISPATCH_VAR(
                                                                                                        ::DISPATCH(
                                                                                                            (   $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                            ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                            ),
                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                                            do {
                                                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                                }
                                                                                                        ),
                                                                                                        'STORE',
                                                                                                        $::Undef
                                                                                                    );
                                                                                                    }
                                                                                            }
                                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                        };
                                                                                        do {
                                                                                            if (::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                                        ),
                                                                                                        "true"
                                                                                                    ),
                                                                                                    "p5landish"
                                                                                                )
                                                                                                )
                                                                                            {
                                                                                                do {
                                                                                                    do {
                                                                                                        if (::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                                        'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                                    ),
                                                                                                                    "true"
                                                                                                                ),
                                                                                                                "p5landish"
                                                                                                            )
                                                                                                            )
                                                                                                        {
                                                                                                            do {
                                                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                                }
                                                                                                        }
                                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                    };
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                    return ($MATCH);
                                                                                                    }
                                                                                            }
                                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                        };
                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                        }
                                                                                    }
                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                }
                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                            }
                                                                        }
                                                                };
                                                                ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                                                    do {
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                            'STORE',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 )
                                                                            )
                                                                        );
                                                                        do {
                                                                            my $_tmp1 = do {
                                                                                do {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                }
                                                                                        }
                                                                                        else {
                                                                                            do {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $::Str, 'new', ')' ),
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY', $str,
                                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        do {
                                                                                                            ::DISPATCH_VAR(
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                'STORE',
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                                )
                                                                                                            );
                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                            }
                                                                                                    }
                                                                                                    else {
                                                                                                        do {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                            }
                                                                                                    }
                                                                                                    }
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                    }
                                                                            };
                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                ? do {
                                                                                do {
                                                                                    my $ret;
                                                                                    $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                                    INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                                    ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block39_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY',
                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH(
                                                                                                        (   $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                        ),
                                                                                                        'APPLY',
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                        ),
                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                                        do {
                                                                                                            ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                            }
                                                                                                    ),
                                                                                                    'STORE',
                                                                                                    $::Undef
                                                                                                );
                                                                                                }
                                                                                        }
                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                    };
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                                    ),
                                                                                                    "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            do {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                                    'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        do {
                                                                                                            ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                            }
                                                                                                    }
                                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                };
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                return ($MATCH);
                                                                                                }
                                                                                        }
                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                    };
                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                    }
                                                                                }
                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                }
                                        };
                                        ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                            do {
                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                    'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                do {
                                                    my $_tmp1 = ::DISPATCH( $::Int, 'new', 1 );
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        do {
                                                            my $ret;
                                                            $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                            INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                            ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block40_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                ),
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                do {
                                                                                    ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                    }
                                                                            ),
                                                                            'STORE',
                                                                            $::Undef
                                                                        );
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        return ($MATCH);
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                            }
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token cintlist returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token cintlist returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'cintlistbody' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token cintlistbody at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'cint', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    do {
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                            'STORE',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            )
                                                                        );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cint' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        my $_tmp1 = do {
                                                            do {
                                                                my $m2;
                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                do {
                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                        do {
                                                                            ::DISPATCH_VAR(
                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                'STORE',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                )
                                                                            );
                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                            }
                                                                    }
                                                                    else {
                                                                        do {
                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                            }
                                                                    }
                                                                    }
                                                                }
                                                        };
                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                            ? do {
                                                            do {
                                                                my $pos1;
                                                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                                INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                                ::DISPATCH_VAR(
                                                                    $pos1, 'STORE',
                                                                    ::DISPATCH(
                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                        'APPLY',
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    )
                                                                );
                                                                do {
                                                                    my $_tmp1 = do {
                                                                        do {
                                                                            do {
                                                                                my $_tmp1 = do {
                                                                                    do {
                                                                                        do {
                                                                                            if (::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                        ),
                                                                                                        "true"
                                                                                                    ),
                                                                                                    "p5landish"
                                                                                                )
                                                                                                )
                                                                                            {
                                                                                                do {
                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                    }
                                                                                            }
                                                                                            else {
                                                                                                do {
                                                                                                    do {
                                                                                                        if (::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Str, 'new', ',' ),
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY', $str,
                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                        )
                                                                                                                    ),
                                                                                                                    "true"
                                                                                                                ),
                                                                                                                "p5landish"
                                                                                                            )
                                                                                                            )
                                                                                                        {
                                                                                                            do {
                                                                                                                ::DISPATCH_VAR(
                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                    'STORE',
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                        ::DISPATCH( $MATCH, 'to', )
                                                                                                                    )
                                                                                                                );
                                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                }
                                                                                                        }
                                                                                                        else {
                                                                                                            do {
                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                    }
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                };
                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                    ? do {
                                                                                    my $_tmp1 = do {
                                                                                        do {
                                                                                            my $m2;
                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                            do {
                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                    do {
                                                                                                        ::DISPATCH_VAR(
                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                            'STORE',
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                                                            )
                                                                                                        );
                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                        }
                                                                                                }
                                                                                                else {
                                                                                                    do {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                        }
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                    };
                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                        ? do {
                                                                                        my $_tmp1 = do {
                                                                                            do {
                                                                                                my $m2;
                                                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'cintlistbody', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                do {
                                                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                        do {
                                                                                                            ::DISPATCH_VAR(
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                'STORE',
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                )
                                                                                                            );
                                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cintlistbody' ) ), 'STORE', $m2 );
                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                            }
                                                                                                    }
                                                                                                    else {
                                                                                                        do {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                            }
                                                                                                    }
                                                                                                    }
                                                                                                }
                                                                                        };
                                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                            ? do {
                                                                                            my $_tmp1 = do {
                                                                                                do {
                                                                                                    my $m2;
                                                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                    do {
                                                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                            do {
                                                                                                                ::DISPATCH_VAR(
                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                    'STORE',
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $m2, 'to', ),
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    )
                                                                                                                );
                                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                }
                                                                                                        }
                                                                                                        else {
                                                                                                            do {
                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                    }
                                                                                            };
                                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                ? do {
                                                                                                do {
                                                                                                    my $ret;
                                                                                                    $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                                                    INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                                                    ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block41_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                                                    do {
                                                                                                        if (::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                                    ),
                                                                                                                    "true"
                                                                                                                ),
                                                                                                                "p5landish"
                                                                                                            )
                                                                                                            )
                                                                                                        {
                                                                                                            do {
                                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ),
                                                                                                                    'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                                ::DISPATCH_VAR(
                                                                                                                    ::DISPATCH(
                                                                                                                        (   $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                                        ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY',
                                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                                        ),
                                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                                                        do {
                                                                                                                            ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                                            }
                                                                                                                    ),
                                                                                                                    'STORE',
                                                                                                                    $::Undef
                                                                                                                );
                                                                                                                }
                                                                                                        }
                                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                    };
                                                                                                    do {
                                                                                                        if (::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                                                    ),
                                                                                                                    "true"
                                                                                                                ),
                                                                                                                "p5landish"
                                                                                                            )
                                                                                                            )
                                                                                                        {
                                                                                                            do {
                                                                                                                do {
                                                                                                                    if (::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                                                    'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                                                ),
                                                                                                                                "true"
                                                                                                                            ),
                                                                                                                            "p5landish"
                                                                                                                        )
                                                                                                                        )
                                                                                                                    {
                                                                                                                        do {
                                                                                                                            ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                                            }
                                                                                                                    }
                                                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                                };
                                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                                return ($MATCH);
                                                                                                                }
                                                                                                        }
                                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                    };
                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                    }
                                                                                                }
                                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                                            }
                                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                                        }
                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                    }
                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                }
                                                                            }
                                                                    };
                                                                    ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                                                        do {
                                                                            ::DISPATCH_VAR(
                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                'STORE',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 )
                                                                                )
                                                                            );
                                                                            do {
                                                                                my $_tmp1 = ::DISPATCH( $::Int, 'new', 1 );
                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                    ? do {
                                                                                    do {
                                                                                        my $ret;
                                                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block42_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                                        do {
                                                                                            if (::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                        ),
                                                                                                        "true"
                                                                                                    ),
                                                                                                    "p5landish"
                                                                                                )
                                                                                                )
                                                                                            {
                                                                                                do {
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                    ::DISPATCH_VAR(
                                                                                                        ::DISPATCH(
                                                                                                            (   $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                            ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                            ),
                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                                            do {
                                                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                                }
                                                                                                        ),
                                                                                                        'STORE',
                                                                                                        $::Undef
                                                                                                    );
                                                                                                    }
                                                                                            }
                                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                        };
                                                                                        do {
                                                                                            if (::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                                        ),
                                                                                                        "true"
                                                                                                    ),
                                                                                                    "p5landish"
                                                                                                )
                                                                                                )
                                                                                            {
                                                                                                do {
                                                                                                    do {
                                                                                                        if (::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                                        'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                                    ),
                                                                                                                    "true"
                                                                                                                ),
                                                                                                                "p5landish"
                                                                                                            )
                                                                                                            )
                                                                                                        {
                                                                                                            do {
                                                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                                }
                                                                                                        }
                                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                    };
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                    return ($MATCH);
                                                                                                    }
                                                                                            }
                                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                        };
                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                        }
                                                                                    }
                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token cintlistbody returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token cintlistbody returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'native_int' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token native_int at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'digitsP5', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'digitsP5' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            my $ret;
                                                            $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                            INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                            ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block43_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                ),
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                do {
                                                                                    ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                    }
                                                                            ),
                                                                            'STORE',
                                                                            $::Undef
                                                                        );
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        return ($MATCH);
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        do {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', ';' ),
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY', $str,
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                            )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                            ::DISPATCH( $MATCH, 'to', )
                                                                                        )
                                                                                    );
                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                    }
                                                                            }
                                                                            else {
                                                                                do {
                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                    }
                                                                            }
                                                                            }
                                                                        }
                                                                }
                                                                }
                                                            }
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token native_int returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token native_int returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'native_int_list' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token native_int_list at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        my $_tmp1 = do {
                                            do {
                                                do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', '(' ),
                                                                                            ::DISPATCH(
                                                                                                ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY', $str,
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                                            )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                            ::DISPATCH( $MATCH, 'to', )
                                                                                        )
                                                                                    );
                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                    }
                                                                            }
                                                                            else {
                                                                                do {
                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                    }
                                                                            }
                                                                            }
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        my $_tmp1 = do {
                                                            do {
                                                                my $m2;
                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'native_int_list_body', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                do {
                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                        do {
                                                                            ::DISPATCH_VAR(
                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                'STORE',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                )
                                                                            );
                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'native_int_list_body' ) ), 'STORE', $m2 );
                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                            }
                                                                    }
                                                                    else {
                                                                        do {
                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                            }
                                                                    }
                                                                    }
                                                                }
                                                        };
                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                            ? do {
                                                            my $_tmp1 = do {
                                                                do {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                }
                                                                        }
                                                                        else {
                                                                            do {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', ')' ),
                                                                                                    ::DISPATCH(
                                                                                                        ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                        'APPLY', $str,
                                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                    )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        do {
                                                                                            ::DISPATCH_VAR(
                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                'STORE',
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                    ::DISPATCH( $MATCH, 'to', )
                                                                                                )
                                                                                            );
                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                            }
                                                                                    }
                                                                                    else {
                                                                                        do {
                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                            }
                                                                                    }
                                                                                    }
                                                                                }
                                                                        }
                                                                        }
                                                                    }
                                                            };
                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                ? do {
                                                                do {
                                                                    my $ret;
                                                                    $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                    INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                    ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block44_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                ::DISPATCH_VAR(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH(
                                                                                            ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                            'APPLY',
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                        ),
                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                        do {
                                                                                            ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                            }
                                                                                    ),
                                                                                    'STORE',
                                                                                    $::Undef
                                                                                );
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            do {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                    'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        do {
                                                                                            ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                            }
                                                                                    }
                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                };
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                return ($MATCH);
                                                                                }
                                                                        }
                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                    };
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                                }
                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                            }
                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                }
                                        };
                                        ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                            do {
                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                    'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                do {
                                                    my $_tmp1 = ::DISPATCH( $::Int, 'new', 1 );
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        do {
                                                            my $ret;
                                                            $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                            INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                            ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block45_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                ),
                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                do {
                                                                                    ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                    ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                    }
                                                                            ),
                                                                            'STORE',
                                                                            $::Undef
                                                                        );
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH(
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                            ),
                                                                            "true"
                                                                        ),
                                                                        "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    do {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                do {
                                                                                    ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                    }
                                                                            }
                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                        };
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                        return ($MATCH);
                                                                        }
                                                                }
                                                                else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                            };
                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                            }
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token native_int_list returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token native_int_list returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'native_int_list_body' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token native_int_list_body at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $pos1;
                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                    INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                    ::DISPATCH_VAR( $pos1, 'STORE',
                                        ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                    do {
                                        do {
                                            do {
                                                my $_tmp1 = do {
                                                    do {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                do {
                                                                    ::DISPATCH_VAR(
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        'STORE',
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $m2, 'to', ),
                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                        )
                                                                    );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                    }
                                                            }
                                                            else {
                                                                do {
                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                    }
                                                            }
                                                            }
                                                        }
                                                };
                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                    ? do {
                                                    my $_tmp1 = do {
                                                        do {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'native_int', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    do {
                                                                        ::DISPATCH_VAR(
                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                            'STORE',
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            )
                                                                        );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'native_int' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                        }
                                                                }
                                                                else {
                                                                    do {
                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                        }
                                                                }
                                                                }
                                                            }
                                                    };
                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                        ? do {
                                                        my $_tmp1 = do {
                                                            do {
                                                                my $m2;
                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                do {
                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                        do {
                                                                            ::DISPATCH_VAR(
                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                'STORE',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                )
                                                                            );
                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                            }
                                                                    }
                                                                    else {
                                                                        do {
                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                            }
                                                                    }
                                                                    }
                                                                }
                                                        };
                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                            ? do {
                                                            do {
                                                                my $pos1;
                                                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                                INIT { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                                ::DISPATCH_VAR(
                                                                    $pos1, 'STORE',
                                                                    ::DISPATCH(
                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                        'APPLY',
                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    )
                                                                );
                                                                do {
                                                                    my $_tmp1 = do {
                                                                        do {
                                                                            do {
                                                                                my $_tmp1 = do {
                                                                                    do {
                                                                                        do {
                                                                                            if (::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60__60__62_ = $GLOBAL::Code_infix_58__60__60__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( ( $GLOBAL::Code_chars = $GLOBAL::Code_chars || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str ),
                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                        ),
                                                                                                        "true"
                                                                                                    ),
                                                                                                    "p5landish"
                                                                                                )
                                                                                                )
                                                                                            {
                                                                                                do {
                                                                                                    ::DISPATCH( $::Int, 'new', 0 );
                                                                                                    }
                                                                                            }
                                                                                            else {
                                                                                                do {
                                                                                                    do {
                                                                                                        if (::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60_eq_62_ = $GLOBAL::Code_infix_58__60_eq_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Str, 'new', ',' ),
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_substr = $GLOBAL::Code_substr || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY', $str,
                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                        )
                                                                                                                    ),
                                                                                                                    "true"
                                                                                                                ),
                                                                                                                "p5landish"
                                                                                                            )
                                                                                                            )
                                                                                                        {
                                                                                                            do {
                                                                                                                ::DISPATCH_VAR(
                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                    'STORE',
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                        ::DISPATCH( $MATCH, 'to', )
                                                                                                                    )
                                                                                                                );
                                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                }
                                                                                                        }
                                                                                                        else {
                                                                                                            do {
                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                    }
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                };
                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                    ? do {
                                                                                    my $_tmp1 = do {
                                                                                        do {
                                                                                            my $m2;
                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                            INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                            do {
                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                    do {
                                                                                                        ::DISPATCH_VAR(
                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                            'STORE',
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $m2, 'to', ),
                                                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                                                            )
                                                                                                        );
                                                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                                        }
                                                                                                }
                                                                                                else {
                                                                                                    do {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 );
                                                                                                        }
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                    };
                                                                                    ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                        ? do {
                                                                                        my $_tmp1 = do {
                                                                                            do {
                                                                                                my $m2;
                                                                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'native_int_list_body', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                do {
                                                                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                        do {
                                                                                                            ::DISPATCH_VAR(
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                'STORE',
                                                                                                                ::DISPATCH(
                                                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $m2, 'to', ),
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                )
                                                                                                            );
                                                                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'native_int_list_body' ) ), 'STORE', $m2 );
                                                                                                            ::DISPATCH( $::Int, 'new', 1 );
                                                                                                            }
                                                                                                    }
                                                                                                    else {
                                                                                                        do {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 );
                                                                                                            }
                                                                                                    }
                                                                                                    }
                                                                                                }
                                                                                        };
                                                                                        ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                            ? do {
                                                                                            my $_tmp1 = do {
                                                                                                do {
                                                                                                    my $m2;
                                                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                                                    do {
                                                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                            do {
                                                                                                                ::DISPATCH_VAR(
                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                    'STORE',
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $m2, 'to', ),
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    )
                                                                                                                );
                                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ws' ) ), 'STORE', $m2 );
                                                                                                                ::DISPATCH( $::Int, 'new', 1 );
                                                                                                                }
                                                                                                        }
                                                                                                        else {
                                                                                                            do {
                                                                                                                ::DISPATCH( $::Int, 'new', 0 );
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                    }
                                                                                            };
                                                                                            ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                                ? do {
                                                                                                do {
                                                                                                    my $ret;
                                                                                                    $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                                                    INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                                                    ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block46_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                                                    do {
                                                                                                        if (::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY',
                                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                                    ),
                                                                                                                    "true"
                                                                                                                ),
                                                                                                                "p5landish"
                                                                                                            )
                                                                                                            )
                                                                                                        {
                                                                                                            do {
                                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ),
                                                                                                                    'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                                ::DISPATCH_VAR(
                                                                                                                    ::DISPATCH(
                                                                                                                        (   $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                                || ::DISPATCH( $::Routine, "new", )
                                                                                                                        ),
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH(
                                                                                                                            ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                            'APPLY',
                                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                                        ),
                                                                                                                        ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                                                        do {
                                                                                                                            ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                                            }
                                                                                                                    ),
                                                                                                                    'STORE',
                                                                                                                    $::Undef
                                                                                                                );
                                                                                                                }
                                                                                                        }
                                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                    };
                                                                                                    do {
                                                                                                        if (::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                        'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                                                    ),
                                                                                                                    "true"
                                                                                                                ),
                                                                                                                "p5landish"
                                                                                                            )
                                                                                                            )
                                                                                                        {
                                                                                                            do {
                                                                                                                do {
                                                                                                                    if (::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                ::DISPATCH(
                                                                                                                                    ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                                                    'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                                                ),
                                                                                                                                "true"
                                                                                                                            ),
                                                                                                                            "p5landish"
                                                                                                                        )
                                                                                                                        )
                                                                                                                    {
                                                                                                                        do {
                                                                                                                            ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                                'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                                            }
                                                                                                                    }
                                                                                                                    else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                                };
                                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                                return ($MATCH);
                                                                                                                }
                                                                                                        }
                                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                    };
                                                                                                    ::DISPATCH( $::Int, 'new', 1 );
                                                                                                    }
                                                                                                }
                                                                                                : ::DISPATCH( $::Bit, "new", 0 );
                                                                                            }
                                                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                                                        }
                                                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                                                    }
                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                }
                                                                            }
                                                                    };
                                                                    ::DISPATCH( $_tmp1, "true" )->{_value} ? $_tmp1 : do {
                                                                        do {
                                                                            ::DISPATCH_VAR(
                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                'STORE',
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY', $pos1, ::DISPATCH( $::Int, 'new', 0 )
                                                                                )
                                                                            );
                                                                            do {
                                                                                my $_tmp1 = ::DISPATCH( $::Int, 'new', 1 );
                                                                                ::DISPATCH( $_tmp1, "true" )->{_value}
                                                                                    ? do {
                                                                                    do {
                                                                                        my $ret;
                                                                                        $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) unless defined $ret;
                                                                                        INIT { $ret = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ret' } ) }
                                                                                        ::DISPATCH_VAR( $ret, 'STORE', ::DISPATCH( $self, '__rule_block47_964b2b97370a99cf340ba28f83600483', $MATCH ) );
                                                                                        do {
                                                                                            if (::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY',
                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                        ),
                                                                                                        "true"
                                                                                                    ),
                                                                                                    "p5landish"
                                                                                                )
                                                                                                )
                                                                                            {
                                                                                                do {
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                    ::DISPATCH_VAR(
                                                                                                        ::DISPATCH(
                                                                                                            (   $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_
                                                                                                                    || ::DISPATCH( $::Routine, "new", )
                                                                                                            ),
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH(
                                                                                                                ( $GLOBAL::Code_VAR_defined = $GLOBAL::Code_VAR_defined || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                'APPLY',
                                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) )
                                                                                                            ),
                                                                                                            ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ),
                                                                                                            do {
                                                                                                                ::MODIFIED( ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) );
                                                                                                                ( $GLOBAL::_REGEX_RETURN_ = $GLOBAL::_REGEX_RETURN_ || ::DISPATCH( $::Scalar, "new", ) ) = ::DISPATCH( $::Scalar, 'new', );
                                                                                                                }
                                                                                                        ),
                                                                                                        'STORE',
                                                                                                        $::Undef
                                                                                                    );
                                                                                                    }
                                                                                            }
                                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                        };
                                                                                        do {
                                                                                            if (::DISPATCH(
                                                                                                    ::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ( $GLOBAL::Code_infix_58__60_ne_62_ = $GLOBAL::Code_infix_58__60_ne_62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                            'APPLY', $ret, ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' )
                                                                                                        ),
                                                                                                        "true"
                                                                                                    ),
                                                                                                    "p5landish"
                                                                                                )
                                                                                                )
                                                                                            {
                                                                                                do {
                                                                                                    do {
                                                                                                        if (::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ),
                                                                                                                        'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' )
                                                                                                                    ),
                                                                                                                    "true"
                                                                                                                ),
                                                                                                                "p5landish"
                                                                                                            )
                                                                                                            )
                                                                                                        {
                                                                                                            do {
                                                                                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                                                                                    'APPLY', ::DISPATCH( $::Str, 'new', '<<< some closure returning... ' ) );
                                                                                                                }
                                                                                                        }
                                                                                                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                                    };
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'result', ), 'STORE', $ret );
                                                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                                                                                                    return ($MATCH);
                                                                                                    }
                                                                                            }
                                                                                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                                                                                        };
                                                                                        ::DISPATCH( $::Int, 'new', 1 );
                                                                                        }
                                                                                    }
                                                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            : ::DISPATCH( $::Bit, "new", 0 );
                                                        }
                                                        : ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                                    : ::DISPATCH( $::Bit, "new", 0 );
                                                }
                                            }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token native_int_list_body returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token native_int_list_body returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'nameP5' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token nameP5 at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $m2;
                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                    ::DISPATCH_VAR(
                                        $m2, 'STORE',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_match_p5rx = $GLOBAL::Code_match_p5rx || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY',
                                                ::DISPATCH( $::Str, 'new', '[a-zA-Z_][' ),
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', chr(92) ),
                                                    ::DISPATCH( $::Str, 'new', 'w_]*' )
                                                )
                                            ),
                                            $str,
                                            ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) )
                                        )
                                    );
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                    'STORE',
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $m2, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                ::DISPATCH( $::Int, 'new', 1 );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( $::Int, 'new', 0 );
                                                }
                                        }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token nameP5 returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token nameP5 returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'digitsP5' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                        INIT { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                        my $pos;
                        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                        INIT { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'str' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pos' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '>>> token digitsP5 at ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' of (' ),
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str, ::DISPATCH( $::Str, 'new', ')' ) )
                                                )
                                            )
                                        )
                                    );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_prefix_58__60__33__62_ = $GLOBAL::Code_prefix_58__60__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( ( $GLOBAL::Code_defined = $GLOBAL::Code_defined || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $str )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                                )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                            'STORE', ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ), 'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $m2;
                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                    INIT { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                    ::DISPATCH_VAR(
                                        $m2, 'STORE',
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_match_p5rx = $GLOBAL::Code_match_p5rx || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY',
                                                ::DISPATCH( $::Str, 'new', chr(92) ),
                                                ::DISPATCH( $::Str, 'new', 'd+' )
                                            ),
                                            $str,
                                            ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 ) )
                                        )
                                    );
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),
                                                    'STORE',
                                                    ::DISPATCH( ( $GLOBAL::Code_infix_58__60__43__62_ = $GLOBAL::Code_infix_58__60__43__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $m2, 'to', ), ::DISPATCH( $::Int, 'new', 0 ) ) );
                                                ::DISPATCH( $::Int, 'new', 1 );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( $::Int, 'new', 0 );
                                                }
                                        }
                                        }
                                    }
                                }
                        );
                        do {
                            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( ( $GLOBAL::Hash_ENV = $GLOBAL::Hash_ENV || ::DISPATCH( $::HashContainer, "new", ) ), 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KP6_TOKEN_DEBUGGER' ) ), "true" ), "p5landish" ) ) {
                                do {
                                    do {
                                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $MATCH, 'bool', ), "true" ), "p5landish" ) ) {
                                            do {
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', '<<< token digitsP5 returned true to (' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'to', ),
                                                            ::DISPATCH( $::Str, 'new', ')' )
                                                        )
                                                    )
                                                );
                                                }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Str, 'new', '<<< token digitsP5 returned false ' ) );
                                                }
                                        }
                                        }
                                    }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'str',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'pos',
                                                value               => $::Undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block1_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ),
                                ::DISPATCH(
                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                    'APPLY',
                                    ::DISPATCH( $::Str, 'new', ' = SMOP_DISPATCH(interpreter, ' ),
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH( $::Str, 'new', 'SMOP__SLIME__Frame, SMOP__ID__new, SMOP__NATIVE__capture_create(' ),
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', 'interpreter, SMOP__SLIME__Frame, (SMOP__Object*[]){ ' ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY',
                                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'nodes' ) ),
                                                ::DISPATCH( $::Str, 'new',    ' }, NULL)); ' )
                                            )
                                        )
                                    )
                                )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block2_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'node' ) ),
                                ::DISPATCH(
                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                    'APPLY',
                                    ::DISPATCH( $::Str, 'new', ', ' ),
                                    ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'nodes' ) )
                                )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block3_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'node' ) ),
                                ::DISPATCH( $::Str, 'new',    ', ' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block4_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR( $GLOBAL::_REGEX_RETURN_, "STORE", ::DISPATCH( $::Str, 'new', ' NULL ' ) );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'node_empty' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block6_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'node_result' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block7_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'node_capturized' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block8_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'node_full' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block9_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $::Str, 'new', 'SMOP_DISPATCH(interpreter, SMOP__SLIME__Node, SMOP__ID__new, ' ),
                                ::DISPATCH( $::Str, 'new', ' SMOP__NATIVE__capture_create(interpreter, SMOP__SLIME__Node, NULL, NULL))' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block10_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $::Str, 'new', 'SMOP_DISPATCH(interpreter, SMOP__SLIME__Node, SMOP__ID__new, ' ),
                                ::DISPATCH(
                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                    'APPLY',
                                    ::DISPATCH( $::Str, 'new', ' SMOP__NATIVE__capture_create(interpreter, SMOP__SLIME__Node, NULL, (SMOP__Object*[]){' ),
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH( $::Str, 'new', ' SMOP__ID__responder, SMOP_RI(' ),
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'responder' ) ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY',
                                                ::DISPATCH( $::Str, 'new', '), ' ),
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' SMOP__ID__identifier, ' ),
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $::Str, 'new', ', ' ),
                                                            ::DISPATCH(
                                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                'APPLY',
                                                                ::DISPATCH( $::Str, 'new', ' SMOP__ID__capture, SMOP__NATIVE__capture_create(interpreter, ' ),
                                                                ::DISPATCH(
                                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                    'APPLY',
                                                                    ::DISPATCH(
                                                                        ( $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ = $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                        'APPLY',
                                                                        ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'invocant' ) ),
                                                                        ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'invocant' ) ),
                                                                        ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'responder' ) )
                                                                    ),
                                                                    ::DISPATCH(
                                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                        'APPLY',
                                                                        ::DISPATCH( $::Str, 'new', ', ' ),
                                                                        ::DISPATCH(
                                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                            'APPLY',
                                                                            ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'positional' ) ),
                                                                            ::DISPATCH(
                                                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                'APPLY',
                                                                                ::DISPATCH( $::Str, 'new', ', ' ),
                                                                                ::DISPATCH(
                                                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'named' ) ),
                                                                                    ::DISPATCH(
                                                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Str, 'new', ') ' ),
                                                                                        ::DISPATCH( $::Str, 'new', ' , NULL  }))' )
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block11_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $::Str, 'new', 'SMOP_DISPATCH(interpreter, SMOP__SLIME__Node, SMOP__ID__new, ' ),
                                ::DISPATCH(
                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                    'APPLY',
                                    ::DISPATCH( $::Str, 'new', ' SMOP__NATIVE__capture_create(interpreter, SMOP__SLIME__Node, NULL, (SMOP__Object*[]){' ),
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH( $::Str, 'new', ' SMOP__ID__responder, SMOP_RI(' ),
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'responder' ) ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY',
                                                ::DISPATCH( $::Str, 'new', '), ' ),
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $::Str, 'new', ' SMOP__ID__identifier, ' ),
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $::Str, 'new', ', ' ),
                                                            ::DISPATCH(
                                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                'APPLY',
                                                                ::DISPATCH( $::Str, 'new', ' SMOP__ID__capture, ' ),
                                                                ::DISPATCH(
                                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                    'APPLY',
                                                                    ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier2' ) ),
                                                                    ::DISPATCH(
                                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                                        'APPLY',
                                                                        ::DISPATCH( $::Str, 'new', ', ' ),
                                                                        ::DISPATCH( $::Str, 'new', ' , NULL  }))' )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block12_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $::Str, 'new', 'SMOP_DISPATCH(interpreter, SMOP__SLIME__Node, SMOP__ID__new, ' ),
                                ::DISPATCH(
                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                    'APPLY',
                                    ::DISPATCH( $::Str, 'new', ' SMOP__NATIVE__capture_create(interpreter, SMOP__SLIME__Node, NULL, (SMOP__Object*[]){' ),
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH( $::Str, 'new', ' SMOP__ID__result, ' ),
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ),
                                            ::DISPATCH( $::Str, 'new',    ' , NULL}))' )
                                        )
                                    )
                                )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block13_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block14_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block15_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $::Str, 'new', '(SMOP__Object*[]){' ),
                                ::DISPATCH(
                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                    'APPLY',
                                    ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'positionals' ) ),
                                    ::DISPATCH( $::Str, 'new',    '}' )
                                )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block16_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR( $GLOBAL::_REGEX_RETURN_, "STORE", ::DISPATCH( $::Str, 'new', ' NULL' ) );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block17_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ),
                                ::DISPATCH(
                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                    'APPLY',
                                    ::DISPATCH( $::Str, 'new', ', ' ),
                                    ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'positionals' ) )
                                )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block18_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ),
                                ::DISPATCH( $::Str, 'new',    ', NULL' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block19_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $::Str, 'new', '(SMOP__Object*[]){' ),
                                ::DISPATCH(
                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                    'APPLY',
                                    ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pairs' ) ),
                                    ::DISPATCH( $::Str, 'new',    '}' )
                                )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block20_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR( $GLOBAL::_REGEX_RETURN_, "STORE", ::DISPATCH( $::Str, 'new', ' NULL' ) );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block21_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pair' ) ),
                                ::DISPATCH(
                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                    'APPLY',
                                    ::DISPATCH( $::Str, 'new', ', ' ),
                                    ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pairs' ) )
                                )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block22_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'pair' ) ),
                                ::DISPATCH( $::Str, 'new',    ', NULL' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block23_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ),
                                ::DISPATCH(
                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                    'APPLY',
                                    ::DISPATCH( $::Str, 'new', ', ' ),
                                    ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier2' ) )
                                )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block24_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'identifier' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block25_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'capturize' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block26_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'name' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block27_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'idconst' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block28_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'name' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block29_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'native_int' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block30_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $::Str, 'new', 'SMOP__ID__' ),
                                ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $MATCH, ::DISPATCH( $::Str, 'new', '' ) )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block31_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR( $GLOBAL::_REGEX_RETURN_, "STORE", ::DISPATCH( $MATCH, 'Str', ) );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block32_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $::Str, 'new', 'SMOP__SLIME__Capturize_create(' ),
                                ::DISPATCH(
                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                    'APPLY',
                                    ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cint1' ) ),
                                    ::DISPATCH(
                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                        'APPLY',
                                        ::DISPATCH( $::Str, 'new', ',' ),
                                        ::DISPATCH(
                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                            'APPLY',
                                            ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cintlist1' ) ),
                                            ::DISPATCH(
                                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                'APPLY',
                                                ::DISPATCH( $::Str, 'new', ',' ),
                                                ::DISPATCH(
                                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                    'APPLY',
                                                    ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cintlist2' ) ),
                                                    ::DISPATCH(
                                                        ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                        'APPLY',
                                                        ::DISPATCH( $::Str, 'new', ',' ),
                                                        ::DISPATCH(
                                                            ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                                            'APPLY',
                                                            ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cint2' ) ),
                                                            ::DISPATCH( $::Str, 'new',    ')' )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block33_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cint' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block34_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cint' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block35_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR( $GLOBAL::_REGEX_RETURN_, "STORE",
                            ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $MATCH, ::DISPATCH( $::Str, 'new', '' ) ) );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block36_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cintlist' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block37_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cintlist' ) ),
                                ::DISPATCH( $::Str, 'new',    '' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block38_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $::Str, 'new', '(int[]){ ' ),
                                ::DISPATCH(
                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                    'APPLY',
                                    ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cintlistbody' ) ),
                                    ::DISPATCH( $::Str, 'new',    ' }' )
                                )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block39_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR( $GLOBAL::_REGEX_RETURN_, "STORE", ::DISPATCH( $::Str, 'new', 'NULL' ) );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block40_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR( $GLOBAL::_REGEX_RETURN_, "STORE", ::DISPATCH( $::Str, 'new', 'NULL' ) );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block41_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cint' ) ),
                                ::DISPATCH(
                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                    'APPLY',
                                    ::DISPATCH( $::Str, 'new', ', ' ),
                                    ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cintlistbody' ) )
                                )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block42_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'cint' ) ),
                                ::DISPATCH( $::Str, 'new',    ', NULL ' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block43_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $::Str, 'new', 'SMOP__NATIVE__int_create(' ),
                                ::DISPATCH( ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', $MATCH, ::DISPATCH( $::Str, 'new', ')' ) )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block44_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $::Str, 'new', '(SMOP__Object*[]){ ' ),
                                ::DISPATCH(
                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                    'APPLY',
                                    ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'native_int_list_body' ) ),
                                    ::DISPATCH( $::Str, 'new',    ' }' )
                                )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block45_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR( $GLOBAL::_REGEX_RETURN_, "STORE", ::DISPATCH( $::Str, 'new', 'NULL' ) );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block46_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'native_int' ) ),
                                ::DISPATCH(
                                    ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                    'APPLY',
                                    ::DISPATCH( $::Str, 'new', ', ' ),
                                    ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'native_int_list_body' ) )
                                )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::sm0p, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block47_964b2b97370a99cf340ba28f83600483' ),
            ::DISPATCH(
                $::Code, 'new',
                {   code => sub {

                        # emit_perl5_declarations
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $MATCH;
                        $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                        INIT { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }

                        # get $self
                        $self = shift;

                        # emit_perl5_arguments
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        INIT { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        my $List__ = ::DISPATCH( $::ArrayContainer, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        ::DISPATCH_VAR( $List__, 'STORE', ::DISPATCH( $CAPTURE, 'array', ) );
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) ) )->{_value} ) {
                                do {
                                    ::MODIFIED($MATCH);
                                    $MATCH = ::DISPATCH( $Hash__, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'MATCH' ) );
                                    }
                            }
                            elsif ( ::DISPATCH( $GLOBAL::Code_exists, 'APPLY', ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index ) ) )->{_value} ) {
                                $MATCH = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', $_param_index++ ) );
                            }
                        }

                        # emit_perl5_body
                        ::DISPATCH_VAR(
                            $GLOBAL::_REGEX_RETURN_,
                            "STORE",
                            ::DISPATCH(
                                ( $GLOBAL::Code_infix_58__60__126__62_ = $GLOBAL::Code_infix_58__60__126__62_ || ::DISPATCH( $::Routine, "new", ) ),
                                'APPLY',
                                ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'native_int' ) ),
                                ::DISPATCH( $::Str, 'new',    ', NULL ' )
                            )
                        );
                        return ( ::DISPATCH( $::Str, 'new', 'sTrNgE V4l' ) );
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {   invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::List, "new",
                                {   _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {   sigil               => '$',
                                                twigil              => '',
                                                name                => 'MATCH',
                                                value               => undef,
                                                has_default         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_named_only       => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_optional         => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_slurpy           => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_multidimensional => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_rw               => ::DISPATCH( $::Bit, 'new', 0 ),
                                                is_copy             => ::DISPATCH( $::Bit, 'new', 0 ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
    };
    1
}
{

    package main;

    # Do not edit this file - Perl 5 generated by HASH(0x92a50ac)
    # AUTHORS, COPYRIGHT: Please look at the source file.
    use v5;
    use strict;
    no strict "vars";
    use constant KP6_DISABLE_INSECURE_CODE => 0;
    use KindaPerl6::Runtime::Perl5::Runtime;
    my $_MODIFIED;
    INIT { $_MODIFIED = {} }
    INIT { $_ = ::DISPATCH( $::Scalar, "new", { modified => $_MODIFIED, name => "$_" } ); }
    do {
        ::DISPATCH_VAR( $_, 'STORE', ::DISPATCH( ( $GLOBAL::Code_slurp = $GLOBAL::Code_slurp || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ) );
        ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::sm0p, 'frame', $_ ) );
    };
    1
}
