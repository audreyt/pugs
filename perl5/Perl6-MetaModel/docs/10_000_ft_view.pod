=pod

=head1 NAME

10,000 ft view of the Perl6 MetaModel

=head1 NOTATIONAL CONVENTIONS

    i(Foo)     - instance of Foo
    Foo        - the user-level Foo class
    class(Foo) - the instance of Perl6::Class named "Foo"
    meta(Foo)  - the instance of Perl6::MetaClass which describes Foo

=head1 DESCRIPTION

Here is the basic layout of the metamodel (in ASCII art). It still has some
rough edges, in particular how the user and meta levels are bridged. This 
will likely be the territory of the interpreter, and not the metamodel. 
As more metamodel integration happens, the best approach will surely be shown.


                +---------------+        
                | i(Foo)        |
                +---------------+
                | class         |------+
                | instance_data |      |   
                +---------------+      |   
                                       |   
                                       |   NOTE:
                      ___              |   At the Foo level is where
                     (   )             |   the interpreter will likely 
      +-------------( Foo )------------+   perform some 'magic' to     
      |              (___)                 connect the user and meta  
      |                                    levels.                   
      |           <user level>             
  ....|.........................................................
      |           <meta level>      
      |   
      |         +---------------+        
      +-------->| class(Foo)    |
                +---------------+
      +---------| meta          |
      |         | name          |
      |         +---------------+
      |     
      |         +---------------+        
      +-------->| meta(Foo)     |
                +---------------+
                | name          |
                | version       |
                | authority     |
                | %methods      |
                | %attributes   |
                +---------------+      

=head1 BOOTSTRAPPING

This is a rough description of the bootstrapping process, I am surely 
forgetting about something.

    - Perl6::Object is loaded (in Perl6::MetaModel)
        - Perl6::Class->new_class is called for Perl6::Object
            - Perl6::MetaClass::new() is called for Perl6::Object *
                - Perl6::MetaClass::_build_meta() is called to create the meta(Perl6::MetaClass) *
                    - Perl6::MetaClass::new() is called for Perl6::MetaClass *
                        - the meta(Perl::MetaClass) is constructed in Perl6::MetaClass::_build_meta() *
            - meta(Perl6::Object) is now complete
        - class(Perl6::Object) is now complete
    - Perl6::MetaClass adds Perl6::Object to it's superclass list *

    (* special case handling)
    
At this point, the following things are true:

    meta(MetaClass) is an instance of MetaClass
    meta(Object) is an instance of MetaClass
    MetaClass is a subclass of Object
    
And represented visually here:
    
    ---> is subclass of
    ...> is instance of

       meta(MetaClass)
           :     ^
           :     :
           V     :
          MetaClass -----+
              ^          |
              :          |
              :          |
         meta(Object)    |
              ^          |
              :          |
              :          |
           Object <------+    
    

=head1 FAQ

=head2 How do I get to C<Foo> if I've got a C<i(Foo)>?

Calling C<.ref> on an instance of C<Foo> (C<i(Foo)>) will get you C<Foo>.

NOTE: not implemented yet

=head2 How do I get to C<class(Foo)> if I've got C<Foo>?

C<Foo> is just a proxy to the metalevel C<class(Foo)> -- the interpreter
handles it, but it has no actual concrete form. Larry wants the class to be
really a thin layer which connects the meta and user worlds.

=head2 How do I get to C<meta(Foo)> if I've got a C<i(Foo)>?

Calling C<.meta> on an instance of C<Foo> will get you C<meta(Foo)>.

=head2 What is C<meta(Foo)> an instance of?

C<meta(Foo)> is an instance of C<MetaClass>. C<meta(MetaClass)> is again an
instance an instance of C<MetaClass>.

I.e. C<class(meta(MetaClass)) = class(meta(class(meta(Foo)))) = MetaClass>.

=head2 What about anonymous classes?

Something like this:

  my $foo = do { my class Foo { }; Foo.new() };

Will be mostly just manipulating a lexical class(Foo) object. However the details
of this are still fuzzy for me, further study is still needed.

=head2 What about renaming classes?

Instances contain hardlinks to the Class object, which means names are irrelvant.

=head1 AUTHOR

This basically means that anything incorrect in here, is my fault.

Stevan Little E<lt>stevan@iinteractive.comE<gt>

=head1 CONTRIBUTORS 

And these are some of the people who keep me honest by asking questions.

Nathan "kolibrie" Gray
Autrijus Tang
Ingo "iblech" Blechschmidt 
Mitchell "putter" Charity

=cut
