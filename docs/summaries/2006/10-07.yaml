---
extra:
  footer:
    - body: |-
        This summary was prepared using
        [Mail::Summary::Tools](http://search.cpan.org/dist/Mail-Summary-Tools/),
        now available on CPAN.
        
        If you appreciate Perl, consider [contributing to the Perl
        Foundation](http://donate.perlfoundation.org) to help support the
        development of Perl.
        
        Yuval Kogman assisted with summaries this week.
        
        Thank you to everyone who has pointed out mistakes and offered
        suggestions for improving this series.  Comments on this summary can be
        sent to Ann Barcomb, <kudra@domaintje.com>.
      title: Acknowlegements
    - body: |-
        This summary can be found in the following places:
        
        * [use.perl.org](http://use.perl.org/)
        * [The Pugs blog](http://pugs.blogs.com/)
        * [The perl6-announce mailing
          list](http://lists.cpan.org/showlist.cgi?name=perl6-announce)
        * [ONLamp](http://www.oreillynet.com/onlamp/blog/)
      title: Distribution
  header:
    - body: |-
        "When I first read 'Warnock applies' on things in p6 summaries a 
        year or so ago, I thought it was some really energetic programmer 
        who went around and applied patches as soon as people posed 
        a question."
        
        -- Carl Mäsak, on [Warnock's Dilemma](http://en.wikipedia.org/wiki/Warnock%27s_Dilemma) 
      title: This week on the Perl 6 mailing lists
  see_also:
    - name: Perl Foundation activities
      uri: http://blog.perlfoundation.org
    - name: Perl 6 Development
      uri: http://dev.perl.org/perl6
    - name: Planet Perl Six
      uri: http://planetsix.perl.org/perl6
lists:
  - name: perl6-language
    threads:
      - date_from: 1157129542
        date_to: 1159971818
        hidden: ~
        message_id: 200609011052.00562.parrot@seamons.com
        messages:
          - 20060901095816.V43587@bowser.eecs.harvard.edu
          - 1d9a3f400609011005s2367f270yb981b82401a7741@mail.gmail.com
          - 20060901100555.L43587@bowser.eecs.harvard.edu
          - 4522A20B.3050006@ajs.com
          - 20061003223900.GA31041@c4.convolution.nl
          - 832f158a0610031640p78094408o445504cde470dc28@mail.gmail.com
          - 20061004081625.GC31041@c4.convolution.nl
          - 67d53e40610040348u1df47c1ak68755554087f3095@mail.gmail.com
          - 4522F661.8080406@conway.org
          - A5F897B2-DEB3-4666-B3A0-E86ECC7273EE@audreyt.org
          - 452319C4.1020706@conway.org
          - 63DD1F0C-C3FD-4D1E-9343-C753F91E6438@audreyt.org
          - 45232869.2030402@conway.org
          - 4523C699.2040401@ajs.com
          - 4523C7C5.7050104@ajs.com
          - 20061004163528.GA26606@wall.org
          - 200610040822.12215.mail@seamons.com
          - 200610031206.01926.mail@seamons.com
          - 4522B37F.6030103@ajs.com
          - 200610031404.34414.mail@seamons.com
          - 4522C943.4010406@ajs.com
          - 67d53e40610040055y62fb64dbibf45d21e83b03fe8@mail.gmail.com
          - 4522A20B.3050006@ajs.com
          - 20061003223900.GA31041@c4.convolution.nl
          - 832f158a0610031640p78094408o445504cde470dc28@mail.gmail.com
          - 20061004081625.GC31041@c4.convolution.nl
          - 67d53e40610040348u1df47c1ak68755554087f3095@mail.gmail.com
          - 4522F661.8080406@conway.org
          - A5F897B2-DEB3-4666-B3A0-E86ECC7273EE@audreyt.org
          - 452319C4.1020706@conway.org
          - 63DD1F0C-C3FD-4D1E-9343-C753F91E6438@audreyt.org
          - 45232869.2030402@conway.org
          - 4523C699.2040401@ajs.com
          - 4523C7C5.7050104@ajs.com
          - 20061004163528.GA26606@wall.org
          - 200610040822.12215.mail@seamons.com
          - 200610031206.01926.mail@seamons.com
          - 4522B37F.6030103@ajs.com
          - 200610031404.34414.mail@seamons.com
          - 4522C943.4010406@ajs.com
          - 67d53e40610040055y62fb64dbibf45d21e83b03fe8@mail.gmail.com
          - 200610031206.01926.mail@seamons.com
          - 4522B37F.6030103@ajs.com
          - 200610031404.34414.mail@seamons.com
          - 4522C943.4010406@ajs.com
          - 67d53e40610040055y62fb64dbibf45d21e83b03fe8@mail.gmail.com
          - 20060901100555.L43587@bowser.eecs.harvard.edu
          - 4522A20B.3050006@ajs.com
          - 20061003223900.GA31041@c4.convolution.nl
          - 832f158a0610031640p78094408o445504cde470dc28@mail.gmail.com
          - 20061004081625.GC31041@c4.convolution.nl
          - 67d53e40610040348u1df47c1ak68755554087f3095@mail.gmail.com
          - 4522F661.8080406@conway.org
          - A5F897B2-DEB3-4666-B3A0-E86ECC7273EE@audreyt.org
          - 452319C4.1020706@conway.org
          - 63DD1F0C-C3FD-4D1E-9343-C753F91E6438@audreyt.org
          - 45232869.2030402@conway.org
          - 4523C699.2040401@ajs.com
          - 4523C7C5.7050104@ajs.com
          - 20061004163528.GA26606@wall.org
          - 200610040822.12215.mail@seamons.com
          - 200610031206.01926.mail@seamons.com
          - 4522B37F.6030103@ajs.com
          - 200610031404.34414.mail@seamons.com
          - 4522C943.4010406@ajs.com
          - 67d53e40610040055y62fb64dbibf45d21e83b03fe8@mail.gmail.com
        posters:
          - email: parrot@seamons.com
            name: Paul Seamons
          - email: trey@eecs.harvard.edu
            name: Trey Harris
          - email: jerry.gay@gmail.com
            name: jerry gay
          - email: ajs@ajs.com
            name: Aaron Sherman
          - email: juerd@convolution.nl
            name: Juerd
          - email: damian@conway.org
            name: Damian Conway
          - email: malaire@gmail.com
            name: Markus Laire
          - email: audreyt@audreyt.org
            name: Audrey Tang
          - email: larry@wall.org
            name: Larry Wall
        subject: Nested statement modifiers
        summary: Paul Seamons asked why multiple nested statement modifiers (`say "foo" if $foo for 1 .. 3`) are disallowed. A long discussion on the technical and ergonomical problems was stirred up. The general consensus is that there is still no good reason to allow nested statement modifiers.
      - date_from: 1157129542
        date_to: 1159971818
        hidden: ~
        message_id: 4523C699.2040401@ajs.com
        subject: Exceptions on hypers
        summary: |-
          In a subthread of '<msgid:200609011052.00562.parrot@seamons.com>',
          Aaron Sherman asked what the semantics of exceptions within hyper
          operators are. Larry explained that since hyperoperators imply not
          caring about the order of the side effects (for multithreaded
          goodness), which element generates an exception might be
          implementation dependent.
      - date_from: 1158681108
        date_to: 1160063403
        hidden: ~
        message_id: 45101204.30301@barco.com
        messages:
          - 451908EE.4050105@barco.com
          - 45209AEA.4060704@vilain.net
          - 4520D90B.8050004@bereft.net
          - 45252990.2030303@barco.com
          - ef30550b0610020823l38b20947o9669a4177dc405b3@mail.gmail.com
          - f5fa0f60610020719t3e388c29rb1a469517ee0dab4@mail.gmail.com
          - ef30550b0610020858h65f3a281q9fc1c956f885f4f@mail.gmail.com
          - f5fa0f60610021950r109c0cd4tfd14c6a910bc8d8a@mail.gmail.com
          - 200610021918.43451.chromatic@wgz.org
          - f5fa0f60610020719t3e388c29rb1a469517ee0dab4@mail.gmail.com
          - ef30550b0610020858h65f3a281q9fc1c956f885f4f@mail.gmail.com
          - f5fa0f60610021950r109c0cd4tfd14c6a910bc8d8a@mail.gmail.com
          - 200610021918.43451.chromatic@wgz.org
        posters:
          - email: Thomas.Sandlass@barco.com
            name: TSa
          - email: sam@vilain.net
            name: Sam Vilain
          - email: list@bereft.net
            name: Brad Bowman
          - email: dataweaver@gmail.com
            name: Jonathan Lang
          - email: stevan.little@gmail.com
            name: Stevan Little
          - email: chromatic@wgz.org
            name: chromatic
        subject: class interface of roles
        summary: |-
          Last week,
          TSa wondered how [typing of
          mixins](http://www.jot.fm/issues/issue_2004_11/column1) would
          look in Perl 6.  A code example of how it might look was included.
          There were also some questions on roles in Perl 6.
          
          This week, Sam Vilain thought that it would be the same as requiring
          that a class implement a method, except for a difference in syntax.
          This led Brad Bowman to ask how a role can require a target class
          to implement a method or do another role.  Stevan Little answered 
          that he believed this was done by providing a method stub.  Jonathan
          Lang mostly agreed with Stevan and offered more details.
          
          chromatic thought that forbidding methods was potentially like
          the false-cognate problem.  Stevan admitted that he had yet to
          find a real-world use for it.
          
          There was further discussion on roles.
      - date_from: 1158934989
        date_to: 1159717831
        hidden: ~
        message_id: 97C57429-5F3C-4F5A-9A85-161BB7A5CD9E@audreyt.org
        messages:
          - 20060922143650.GA1810@host.pmichaud.com
          - aa47605d0609220834i577ecefewa1121a14fd676b49@mail.gmail.com
          - DA6A12F2-EE77-46DE-ABB7-839F4CDECCBD@audreyt.org
          - 16d769b70609271203x59ac7290oda641d1fab05b430@mail.gmail.com
          - 5B703534-461C-4BCC-971C-7CA21A6B4468@audreyt.org
          - 16d769b70610010850h445587d9v49feb79d51885758@mail.gmail.com
        posters:
          - email: audreyt@audreyt.org
            name: Audrey Tang
          - email: pmichaud@pobox.com
            name: Patrick R. Michaud
          - email: fglock@gmail.com
            name: Flavio S. Glock
          - email: cmasak@gmail.com
            name: Carl Mäsak
        subject: Motivation for /<alpha>+/ set Array not Match?
        summary: |-
          Last week, an earlier discussion on S05 subrules continued.  Audrey
          Tang wondered if there was a hidden cost to making `/<foo>+/` always 
          react so that `$<foo>.from` returns something.  Carl Mäsak
          preferred the proposed semantics and asked if 
          the question had been discussed off-list.
          
          This week, Audrey replied that there had been no further discussion.
          Carl asked for a short snipped to illustrate it, and supplied an anecdote
          about [Warnock](http://en.wikipedia.org/wiki/Warnock%27s_Dilemma) applying.
      - date_from: 1159379328
        date_to: 1159552374
        hidden: ~
        message_id: 451AB972.2090802@ajs.com
        messages:
          - 451C81E1.3050008@ajs.com
          - 20060928224916.X87014@bowser.eecs.harvard.edu
          - ef30550b0609282354j21390ffbs323d7d9761b6f0fc@mail.gmail.com
          - 20060929000453.O87014@bowser.eecs.harvard.edu
          - 20060929175244.GA27933@wall.org
          - 451CCA74.1050204@ajs.com
          - 20060929003633.U87014@bowser.eecs.harvard.edu
          - 45201B72.6070806@ajs.com
          - 20061002140046.M46238@bowser.eecs.harvard.edu
          - ef30550b0610040826h20ad07bawcccf46909af29ba@mail.gmail.com
          - 20061004134219.A46238@bowser.eecs.harvard.edu
          - ef30550b0609271903v1db7f60ah3912651ef77fbdce@mail.gmail.com
          - 451BA76D.50302@puremagic.com
          - 451BC0CF.9@barco.com
          - 451C0254.9050005@ajs.com
          - ef30550b0609281140k2cb6d595n1e7bd6d1276aed44@mail.gmail.com
          - 451C1DF7.1070206@ajs.com
          - ef30550b0609281232m4561ce98i1d7bb0ff4436acd8@mail.gmail.com
          - 451C81E1.3050008@ajs.com
          - 20060928224916.X87014@bowser.eecs.harvard.edu
          - ef30550b0609282354j21390ffbs323d7d9761b6f0fc@mail.gmail.com
          - 20060929000453.O87014@bowser.eecs.harvard.edu
          - 20060929175244.GA27933@wall.org
          - 451CCA74.1050204@ajs.com
          - 20060929003633.U87014@bowser.eecs.harvard.edu
          - 45201B72.6070806@ajs.com
          - 20061002140046.M46238@bowser.eecs.harvard.edu
          - ef30550b0610040826h20ad07bawcccf46909af29ba@mail.gmail.com
          - 20061004134219.A46238@bowser.eecs.harvard.edu
          - 451CE665.3050207@puremagic.com
          - ef30550b0609290158g486defebid64d8aab9e9e6d1e@mail.gmail.com
          - f60fe000609291105r6f97071dp65fe28fb5c9a51e9@mail.gmail.com
          - ef30550b0609291225k15cd872ch529c9b99ac8fee7@mail.gmail.com
          - 20060929202412.GA31696@wall.org
          - 45252BF4.80003@barco.com
          - 20060929203129.GB31696@wall.org
          - ef30550b0609291338k3911899bp5134fa5b1803fa06@mail.gmail.com
          - f60fe000609291345s79690fdaya558a6e43268fc08@mail.gmail.com
          - 20060927113943.G87014@bowser.eecs.harvard.edu
          - 451B3B8C.9040004@ajs.com
          - 451BA76D.50302@puremagic.com
          - 451BC0CF.9@barco.com
          - 451C0254.9050005@ajs.com
          - ef30550b0609281140k2cb6d595n1e7bd6d1276aed44@mail.gmail.com
          - 451C1DF7.1070206@ajs.com
          - ef30550b0609281232m4561ce98i1d7bb0ff4436acd8@mail.gmail.com
          - 451C81E1.3050008@ajs.com
          - 20060928224916.X87014@bowser.eecs.harvard.edu
          - ef30550b0609282354j21390ffbs323d7d9761b6f0fc@mail.gmail.com
          - 20060929000453.O87014@bowser.eecs.harvard.edu
          - 20060929175244.GA27933@wall.org
          - 451CCA74.1050204@ajs.com
          - 20060929003633.U87014@bowser.eecs.harvard.edu
          - 45201B72.6070806@ajs.com
          - 20061002140046.M46238@bowser.eecs.harvard.edu
          - ef30550b0610040826h20ad07bawcccf46909af29ba@mail.gmail.com
          - 20061004134219.A46238@bowser.eecs.harvard.edu
          - 451CE665.3050207@puremagic.com
          - 451BC45E.8080408@barco.com
        posters:
          - email: ajs@ajs.com
            name: Aaron Sherman
          - email: trey@lopsa.org
            name: Trey Harris
          - email: dataweaver@gmail.com
            name: Jonathan Lang
          - email: larry@wall.org
            name: Larry Wall
          - email: miro@puremagic.com
            name: Miroslav Silovic
          - email: Thomas.Sandlass@barco.com
            name: TSa
          - email: markjreed@mail.com
            name: Mark J. Reed
        subject: 'RFC: multi assertions/prototypes: a step toward programming by contract'
        summary: |-
          Last week there was a great deal of discussion on this subject.
          
          This week, Tsa asked, in response to Larry Wall's comment, 
          if namespaces give a structural type definition.
          
          Also, Aaron Sherman started a new topic entitled 'Abstract roles,
          classes and objects'.  He asked rhetorically what was the use of
          an interface which doesn't give a guarantee.  Trey Harris responded
          that there are three ways to manage a guarantee: an 'is abstract' marker,
          some type of inference, or by disallowing abstract classes.  Jonathan
          Lang offered his definition of 'instance management'.
      - date_from: 1159642094
        date_to: 1159694273
        hidden: ~
        message_id: 429fde40609301148p71f87efcsb29cca0bb1a2b9c0@mail.gmail.com
        messages:
          - ef30550b0609301239s10626ca2x6e863663ac4d87a1@mail.gmail.com
          - 20060930222354.GA30302@pobox.com
          - 17694.64541.662864.655963@rgrjr.dyndns.org
          - ef30550b0610010217o394c447eu38cc3a65f8152735@mail.gmail.com
        posters:
          - email: rbysamppi@gmail.com
            name: Joshua Choi
          - email: dataweaver@gmail.com
            name: Jonathan Lang
          - email: duff@pobox.com
            name: Jonathan Scott Duff
          - email: rogers-perl6@rgrjr.dyndns.org
            name: Bob Rogers
        subject: Automatic coercion and context
        summary: |-
          Joshua Choi asked how coercion interfaces are implemented and implicitly used.
          Musings on roles and the terror of implicit coercions in C++ were part of the discussion, but surprisingly the `as` multi method was not mentioned at all.
      - date_from: 1159672436
        date_to: 1159672436
        hidden: small commit
        message_id: 20061001031348.AEE06CBA4D@x12.develooper.com
        posters:
          - email: audreyt@cvs.perl.org
            name: audreyt
        subject: '[svn:perl6-synopsis] r12531 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1159672605
        date_to: 1159672605
        hidden: small commit
        message_id: 20061001031638.1E6D0CBA4D@x12.develooper.com
        posters:
          - email: audreyt@cvs.perl.org
            name: audreyt
        subject: '[svn:perl6-synopsis] r12533 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1159800325
        date_to: 1159800325
        hidden: small commit
        message_id: 20061002144514.AC7E7CBA4D@x12.develooper.com
        posters:
          - email: audreyt@cvs.perl.org
            name: audreyt
        subject: '[svn:perl6-synopsis] r12561 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1159805392
        date_to: 1160076904
        hidden: ~
        message_id: ef30550b0610020909t14d70a19rc98b70eb3d5ace58@mail.gmail.com
        messages:
          - 200610041243.05028.chromatic@wgz.org
          - 20061004194806.GC11398@bestpractical.com
          - 200610041304.45457.chromatic@wgz.org
          - 20061004200635.GD11398@bestpractical.com
          - 4521E24A.7060800@ajs.com
          - 1d9a3f400610022139o6b38b294l3b11c8a9e82cc8b7@mail.gmail.com
          - 7ca3f0160610021657u7756476j32e752a9df4cbcc1@mail.gmail.com
          - 20061002172551.31827.qmail@lists.develooper.com
          - ef30550b0610021232i3cc8b3d3p3409a3f5637f3428@mail.gmail.com
          - 20061002202632.12351.qmail@lists.develooper.com
          - ef30550b0610021401l3c9315dr223f7358f48db1f5@mail.gmail.com
          - 20061002230759.GA23437@wall.org
          - 20061002224026.23100.qmail@lists.develooper.com
          - 200610021940.41939.chromatic@wgz.org
          - 452298A4.200@ajs.com
          - 200610040050.16712.chromatic@wgz.org
          - 20061004021016.G46238@bowser.eecs.harvard.edu
          - 20061004080510.GA11398@bestpractical.com
          - 200610041201.22638.chromatic@wgz.org
          - 20061004190958.GB11398@bestpractical.com
          - 200610041243.05028.chromatic@wgz.org
          - 20061004194806.GC11398@bestpractical.com
          - 200610041304.45457.chromatic@wgz.org
          - 20061004200635.GD11398@bestpractical.com
          - 20061004131306.Q46238@bowser.eecs.harvard.edu
          - 200610041409.21099.chromatic@wgz.org
          - 45243586.20801@ajs.com
          - 1d9a3f400610020926w73a70ae7u2e4fc18cdef76e66@mail.gmail.com
          - BEC20AAC-17F1-4B88-B293-EFD8329528F0@boulder.swri.edu
          - 20061002170157.GB11711@stripey.com
          - 20061002172551.31827.qmail@lists.develooper.com
          - ef30550b0610021232i3cc8b3d3p3409a3f5637f3428@mail.gmail.com
          - 20061002202632.12351.qmail@lists.develooper.com
          - ef30550b0610021401l3c9315dr223f7358f48db1f5@mail.gmail.com
          - 20061002230759.GA23437@wall.org
          - 20061002224026.23100.qmail@lists.develooper.com
          - 200610021940.41939.chromatic@wgz.org
          - 452298A4.200@ajs.com
          - 200610040050.16712.chromatic@wgz.org
          - 20061004021016.G46238@bowser.eecs.harvard.edu
          - 20061004080510.GA11398@bestpractical.com
          - 200610041201.22638.chromatic@wgz.org
          - 20061004190958.GB11398@bestpractical.com
          - 200610041243.05028.chromatic@wgz.org
          - 20061004194806.GC11398@bestpractical.com
          - 200610041304.45457.chromatic@wgz.org
          - 20061004200635.GD11398@bestpractical.com
          - 20061004131306.Q46238@bowser.eecs.harvard.edu
          - 200610041409.21099.chromatic@wgz.org
          - 45243586.20801@ajs.com
          - ef30550b0610020948k3f95e9bdi3c05fd7dbe1e23fa@mail.gmail.com
          - 8A6B76DA-FB2E-4042-9CBE-AD67D438D06D@hexten.net
          - 20061004190958.GB11398@bestpractical.com
          - 200610041243.05028.chromatic@wgz.org
          - 20061004194806.GC11398@bestpractical.com
          - 200610041304.45457.chromatic@wgz.org
          - 20061004200635.GD11398@bestpractical.com
          - 20061004131306.Q46238@bowser.eecs.harvard.edu
          - 200610041409.21099.chromatic@wgz.org
          - 45243586.20801@ajs.com
          - 200610040050.16712.chromatic@wgz.org
          - 20061004021016.G46238@bowser.eecs.harvard.edu
          - 20061004080510.GA11398@bestpractical.com
          - 200610041201.22638.chromatic@wgz.org
          - 20061004190958.GB11398@bestpractical.com
          - 200610041243.05028.chromatic@wgz.org
          - 20061004194806.GC11398@bestpractical.com
          - 200610041304.45457.chromatic@wgz.org
          - 20061004200635.GD11398@bestpractical.com
          - 20061004131306.Q46238@bowser.eecs.harvard.edu
          - 200610041409.21099.chromatic@wgz.org
          - 45243586.20801@ajs.com
          - 200610041201.22638.chromatic@wgz.org
          - 20061004190958.GB11398@bestpractical.com
          - 200610041243.05028.chromatic@wgz.org
          - 20061004194806.GC11398@bestpractical.com
          - 200610041304.45457.chromatic@wgz.org
          - 20061004200635.GD11398@bestpractical.com
          - 20061004131306.Q46238@bowser.eecs.harvard.edu
          - 200610041409.21099.chromatic@wgz.org
          - 45243586.20801@ajs.com
          - 200610021940.41939.chromatic@wgz.org
          - 452298A4.200@ajs.com
          - 200610040050.16712.chromatic@wgz.org
          - 20061004021016.G46238@bowser.eecs.harvard.edu
          - 20061004080510.GA11398@bestpractical.com
          - 200610041201.22638.chromatic@wgz.org
          - 20061004190958.GB11398@bestpractical.com
          - 200610041243.05028.chromatic@wgz.org
          - 20061004194806.GC11398@bestpractical.com
          - 200610041304.45457.chromatic@wgz.org
          - 20061004200635.GD11398@bestpractical.com
          - 20061004131306.Q46238@bowser.eecs.harvard.edu
          - 200610041409.21099.chromatic@wgz.org
          - 45243586.20801@ajs.com
        posters:
          - email: dataweaver@gmail.com
            name: Jonathan Lang
          - email: chromatic@wgz.org
            name: chromatic
          - email: jesse@fsck.com
            name: jesse
          - email: ajs@ajs.com
            name: Aaron Sherman
          - email: jerry.gay@gmail.com
            name: jerry gay
          - email: lrpalmer@gmail.com
            name: Luke Palmer
          - email: dave@whipp.name
            name: Dave Whipp
          - email: larry@wall.org
            name: Larry Wall
          - email: trey@lopsa.org
            name: Trey Harris
          - email: deforest@boulder.swri.edu
            name: Craig DeForest
          - email: Smylers@stripey.com
            name: Smylers
          - email: andy@hexten.net
            name: Andy Armstrong
        subject: "\"Don't tell me what I can't do!\""
        summary: |-
          Jonathan Lang initiated a long discussion by objecting to programming
          styles where a programmer can intentionally prevent someone else from
          taking what is otherwise a legitimate action.  He cited an example from
          the recent discussion on allowing a role to prevent the consumption of
          another role ('<msgid:45101204.30301@barco.com>').
          
          There was a suggestion that restrictions could be purely advisory.
          This led to the question of whether strict is localized.  Larry
          Wall replied that the default is for lexically scoped pragmas, but
          that S01 states that it must be possible to write policy meta models.
          More discussion on this topic followed.
      - date_from: 1159998326
        date_to: 1160030056
        hidden: ~
        message_id: 45242B69.4070304@ajs.com
        messages:
          - 'p06230900c14a57378bce@[192.168.1.101]'
        posters:
          - email: ajs@ajs.com
            name: Aaron Sherman
          - email: darren@DarrenDuncan.net
            name: Darren Duncan
        subject: Mailing list archive and index
        summary: |-
          Aaron Sherman posted that he was considering creating an archive
          of messages from the mailing list which would be easier to search
          than Google.  The problem with the Google archive is that it includes
          discussion, and he's only interested in decision.  He asked for 
          opinions on the examples he posted.  Darren Duncan suggested seeding
          from the existing mailing list archives.
      - date_from: 1160021795
        date_to: 1160021795
        hidden: ~
        message_id: 20061005041627.7247FCBA4D@x12.develooper.com
        posters:
          - email: audreyt@cvs.perl.org
            name: audreyt
        subject: '[svn:perl6-synopsis] r12675 - doc/trunk/design/syn'
        summary: |-
          In this commit, Audrey Tang removed the 'single argument function
          becomes a method' rule from S12.
      - date_from: 1160022245
        date_to: 1160022245
        hidden: small commit
        message_id: 20061005042357.10B7CCBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r12678 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1160024157
        date_to: 1160024157
        hidden: small commit
        message_id: 20061005045549.E30FFCBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r12681 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1160072230
        date_to: 1160072230
        hidden: small commit
        message_id: 20061005181658.02DE6CBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r12736 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1160073756
        date_to: 1160073756
        hidden: small commit
        message_id: 20061005184227.82DB2CBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r12737 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1160073825
        date_to: 1160073825
        hidden: ~
        message_id: 67d53e40610051143u661aa812g2a662313b6804d04@mail.gmail.com
        posters:
          - email: malaire@gmail.com
            name: Markus Laire
        subject: if-else and statement-ending blocks?
        summary: |-
          Markus Laire quoted a section of S04 on lines ending with
          `}` followed by nothing but whitespace or comments.
          He wondered if this meant that an else statement like
          `};`
          `else {`
          would be the same as the same without the semicolon.
      - date_from: 1160079094
        date_to: 1160081820
        hidden: ~
        message_id: ef30550b0610051311k27b5db1bw1667b868a7857508@mail.gmail.com
        messages:
          - 4525718C.2000507@ajs.com
        posters:
          - email: dataweaver@gmail.com
            name: Jonathan Lang
          - email: ajs@ajs.com
            name: Aaron Sherman
        subject: import collisions
        summary: |-
          Jonathan Lang wanted to know what would happen if
          he imported two modules which export the same method.
          He felt that the resolution should be similar to role
          composition techniques.  He suggested some syntax.
          Aaron Sherman thought that only plain multis would
          conflict, and suggested a warning would be most
          appropriate.
      - date_from: 1160080915
        date_to: 1160085859
        hidden: ~
        message_id: 45256E04.8090407@ajs.com
        messages:
          - 452574AD.7060206@ajs.com
          - 4525814A.1080009@ajs.com
          - f60fe000610051430l2cb3eaeco195989758c780119@mail.gmail.com
          - 45257B1E.8080201@ajs.com
          - 20061006152601.29591.qmail@lists.develooper.com
        posters:
          - email: ajs@ajs.com
            name: Aaron Sherman
          - email: markjreed@mail.com
            name: Mark J. Reed
          - email: rvtol+news@isolution.nl
            name: Dr.Ruud
        subject: Hash composers and code blocks
        summary: |-
          Aaron Sherman quoted a section from S04 on the hash
          composer.  He was afraid that the current syntax could lead
          to 'looks fine to the uninitiated' errors.  He suggested
          providing an unambiguous form for all the sigiled types.
          He elaborated on his proposal.
    title: Language
  - name: perl6-internals
    threads:
      - date_from: 1158660033
        date_to: 1159669917
        hidden: new comment doesn't require a summary
        message_id: 8e8ee0d40609190736q71262a47s1702c4c1e4e4bb3a@mail.gmail.com
        messages:
          - 1d9a3f400609190756o30196f3dla1506329039cbb3e@mail.gmail.com
          - 200609191009.29244.chromatic@wgz.org
          - rt-3.5.HEAD-31257-1159669906-702.40361-14-0@perl.org
          - rt-3.5.HEAD-31258-1158659993-117.40361-72-0@perl.org
          - 1d9a3f400609190714p2edcee91s715663db1fe2afd7@mail.gmail.com
          - 1d9a3f400609190756o30196f3dla1506329039cbb3e@mail.gmail.com
          - 200609191009.29244.chromatic@wgz.org
          - rt-3.5.HEAD-31257-1159669906-702.40361-14-0@perl.org
          - 8e8ee0d40609190757u3f743f7kb1cc820039aa3ccc@mail.gmail.com
          - 1d9a3f400609190802k47694e6bwc5ffb02e1cf5e46c@mail.gmail.com
          - 8e8ee0d40609190841q290cb282n388aca3e532d9ecd@mail.gmail.com
          - 1d9a3f400609190900l2e3e5086j29a01a76be161e75@mail.gmail.com
        posters:
          - email: paultcochrane@gmail.com
            name: Paul Cochrane
          - email: jerry.gay@gmail.com
            name: jerry gay
          - email: chromatic@wgz.org
            name: chromatic
          - email: bugs-parrot-track@netlabs.develooper.com
            name: Will Coleda via RT
        subject: 'Re: [perl #40361] [PATCH] #40278 [CAGE] perl coding standards coda. (cont.)'
        summary: ''
      - date_from: 1158774542
        date_to: 1159798343
        hidden: new message is a commit comment
        message_id: rt-3.5.HEAD-31263-1159798324-283.40380-15-0@perl.org
        messages:
          - rt-3.5.HEAD-31263-1158774529-558.40380-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Kevin Tew via RT
        rt_ticket: 'perl #40380'
        subject: "[perl #40380] [PATCH] errors on 'make install' - src/pdb.c "
        summary: ''
      - date_from: 1159327322
        date_to: 1159822120
        hidden: ~
        message_id: 519C67EB-0194-4977-99F8-72DA50EBC97F@coleda.com
        messages:
          - 57934E5C-CB6A-4AC8-8131-44D84AD3C14F@chrisdolan.net
        posters:
          - email: will@coleda.com
            name: Will Coleda
          - email: chris@chrisdolan.net
            name: Chris Dolan
        subject: '[CAGE] perl coding standards...'
        summary: |-
          Earlier, Will Coleda  posted an attempt at creating a perlcritic test.
          This week, Chris Dolan created a patch to simplify the test code by
          using Test::Perl::Critic.
      - date_from: 1159477546
        date_to: 1160080050
        hidden: ~
        message_id: 451C3913.7050008@perl.org
        messages:
          - 73ddeb6c0609291854n10b665c2sc46082688d45595f@mail.gmail.com
          - 200609281530.40032.chromatic@wgz.org
          - 4523C179.7070706@ajs.com
          - 200610041028.49956.chromatic@wgz.org
          - 17692.17389.968384.475867@localhost.localdomain
          - 200609281530.40032.chromatic@wgz.org
          - 4523C179.7070706@ajs.com
          - 200610041028.49956.chromatic@wgz.org
        posters:
          - email: allison@perl.org
            name: Allison Randal
          - email: a.r.ferreira@gmail.com
            name: Adriano Ferreira
          - email: chromatic@wgz.org
            name: chromatic
          - email: ajs@ajs.com
            name: Aaron Sherman
          - email: triska@gmx.at
            name: Markus Triska
        subject: requirements gathering on mini transformation language
        summary: |-
          Last week,
          Allison Randal asked for a volunteer to write up the requirements
          for a mini transformation language to use the compiler tools.
          The job would involve spending time with Allison and Patrick
          Michaud and combining their ideas along with your own perspective.
          Adriano Ferreira offered some opinions on the subject, and
          Markus Triska volunteered to do it if it relates to his area of
          expertise.
          
          This week, Aaron Sherman expressed confusion over the purpose of
          this project.  He thought TGE performed this task.  chromatic replied
          that the mini language would be "the stuff in curly braces" in the 
          TGE grammar files.
          
          Adriano Ferreira named some desired features in a transformation
          language, such as a data structure pattern language, and rules which
          are selected via the patterns.
          
          Allison reported that there were several volunteers.
      - date_from: 1159478611
        date_to: 1159718340
        hidden: ~
        message_id: 20060928212316.9432FCBA4D@x12.develooper.com
        messages:
          - 451EA2B6.6090201@jnthn.net
          - 200609301113.41703.chromatic@wgz.org
          - 200609302114.19493.lt@toetsch.at
          - 1a83bc10610010858o196589e0uf25938cba3d955e@mail.gmail.com
          - c6iuu3-1nh.ln1@osiris.mauzo.dyndns.org
          - 451EA2B6.6090201@jnthn.net
          - 200609301113.41703.chromatic@wgz.org
          - 200609302114.19493.lt@toetsch.at
          - 1a83bc10610010858o196589e0uf25938cba3d955e@mail.gmail.com
        posters:
          - email: jonathan@cvs.perl.org
            name: jonathan
          - email: jonathan@jnthn.net
            name: Jonathan Worthington
          - email: chromatic@wgz.org
            name: chromatic
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: karl.forner@gmail.com
            name: Karl Forner
          - email: benmorrow@tiscali.co.uk
            name: Ben Morrow
        subject: '[svn:parrot-pdd] r14784 - trunk/docs/pdds/clip'
        summary: |-
          Last week, Jonathan Worthington committed a draft PDD on Parrot's
          bytecode format.  Ben Morrow wanted to know if pbc files could allow an 
          optional `#!` line so that they could be used as executables.  Jonathan 
          replied that he had considered this, but rejected it because it is 
          UNIX-specific.  There was additional discussion on the topic.
          
          This week, Karl Forner suggested working around the need to specify
          the absolute path by using the `env` command.
      - date_from: 1159515628
        date_to: 1159754127
        hidden: new comment doesn't require summary
        message_id: 8e8ee0d40610011855g1a69d675la644ace56378c17c@mail.gmail.com
        messages:
          - rt-3.5.HEAD-31259-1159669054-631.40429-15-0@perl.org
          - rt-3.5.HEAD-31259-1159515620-1789.40429-72-0@perl.org
        posters:
          - email: paultcochrane@gmail.com
            name: Paul Cochrane
          - email: parrotbug-followup@parrotcode.org
            name: Will Coleda via RT
        subject: 'Re: [perl #40429] [PATCH] test for perl code coda'
        summary: ''
      - date_from: 1159516031
        date_to: 1159669602
        hidden: addressed last week
        message_id: rt-3.5.HEAD-31263-1159669594-1873.40430-15-0@perl.org
        messages:
          - rt-3.5.HEAD-31259-1159516022-123.40430-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Will Coleda via RT
        rt_ticket: 'perl #40430'
        subject: '[perl #40430] [PATCH] rename and update C code coda test '
        summary: ''
      - date_from: 1159647875
        date_to: 1159805514
        hidden: new comment is 'applied'
        message_id: rt-3.5.HEAD-31263-1159692860-1225.40438-14-0@perl.org
        messages:
          - 4520A044.4050702@tewk.com
          - 45213A3C.2000309@tewk.com
          - rt-3.5.HEAD-31258-1159647866-1409.40438-72-0@perl.org
        posters:
          - email: bugs-parrot-track@netlabs.develooper.com
            name: Leopold Toetsch via RT
          - email: tewk@tewk.com
            name: Kevin Tew
        rt_ticket: 'perl #40438'
        subject: '[perl #40438] Extending a dynpmc with a PIR method fails '
        summary: ''
      - date_from: 1159744939
        date_to: 1159744939
        hidden: ~
        message_id: rt-3.5.HEAD-31257-1159744931-307.40443-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Matt Diephouse
        rt_ticket: 'perl #40443'
        subject: '[perl #40443] Separate vtable functions from methods (using :vtable) '
        summary: |-
          In ticket <rt://perl/40443>, Matt Diephouse noted that it was decided
          at OSCON 2006 that vtables and methods should be separated.  This is the
          request for this modification.
      - date_from: 1159794963
        date_to: 1159794963
        hidden: summary
        message_id: 20061002131501.14691.qmail@x1.develooper.com
        posters:
          - email: perlbug-summary@perl.org
            name: Parrot Bug Summary
        subject: Parrot Bug Summary
        summary: ''
      - date_from: 1159820736
        date_to: 1159820736
        hidden: ~
        message_id: efrs01$d77$1@sea.gmane.org
        posters:
          - email: ananiev@thegdb.com
            name: Nikolay Ananiev
        subject: Can I use Parrot's subsystems in an embedded code?
        summary: |-
          Nikolay Ananiev is working on a C project which will embed Parrot.
          He'd like it to be as portable as Parrot, and wondered if there was
          some way he could take advantage of Parrot's portability.
      - date_from: 1159833497
        date_to: 1159858314
        hidden: ~
        message_id: 1a83bc10610021658y63c67e16k473c9d896fe1bd23@mail.gmail.com
        messages:
          - 200610030851.40920.lt@toetsch.at
        posters:
          - email: karl.forner@gmail.com
            name: Karl Forner
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: Questions about FixedBooleanArray and ResizeBooleanArray
        summary: |-
          Karl Forner was unable to find detailed specifications for the
          FixedBooleanArray and ResizeBooleanArray PMCs and was wondering what
          should happen if they were resized.  Leopold Toetsch replied that
          the FixedBooleanArray won't resize, and specified what the default
          values should be.
          
          Some additional questions were asked in 
          '<msgid:1a83bc10610041649r6b9bb7eep5356be79437da4be@mail.gmail.com>'.
      - date_from: 1159836873
        date_to: 1160261560
        hidden: ~
        message_id: 17697.46270.424770.357505@rgrjr.dyndns.org
        messages:
          - 5.1.0.14.2.20061004084513.0287d900@pop.besancon.parkeon.com
        posters:
          - email: rogers-perl6@rgrjr.dyndns.org
            name: Bob Rogers
          - email: francois.perrad@gadz.org
            name: François PERRAD
        subject: 'Heads up:  Dynamic environment now captured in continuations'
        summary: |-
          Bob Rogers announced that as of r14830, continuations capture the
          dynamic environment in order to restore it properly on invocation.
          He also noted that moving the `control_stack` slot broke coroutines,
          but that he suspected this was due to problems with coroutines.  He
          asked to know if any problems with coroutines developed.  François Perrad
          replied that he'd been unable to implement coroutines in Lua.
          Bob Rogers was not surprised, and discussed some of the problems involved.
      - date_from: 1159837611
        date_to: 1159837611
        hidden: formatting commit
        message_id: 20061003010641.6F584CBA4E@x12.develooper.com
        posters:
          - email: chromatic@cvs.perl.org
            name: chromatic
        subject: '[svn:parrot-pdd] r14831 - in trunk: . docs/pdds/clip'
        summary: ''
      - date_from: 1159856958
        date_to: 1159914159
        hidden: ~
        message_id: 8e8ee0d40610022329s7817c34dr42fe2d21c8086db2@mail.gmail.com
        messages:
          - FCDC4D93-9406-4509-AF6B-FE127B5D708C@clotho.com
          - 13DFDFCD-9DCD-487B-8162-7322046F44A5@coleda.com
        posters:
          - email: paultcochrane@gmail.com
            name: Paul Cochrane
          - email: chris@clotho.com
            name: Chris Dolan
          - email: will@coleda.com
            name: Will Coleda
        subject: Emacs/vim code coda placement
        summary: |-
          Paul Cochrane reported that the Perl::Critic policy for the coda
          skips `__END__` and `__DATA__` sections, but vim requires the coda
          to be within the first or the last 5 lines of the file. 
          Chris Dolan agreed with Paul that using `=cut` for POD in the
          `__END__` section would work, but was not sure how to handle `__DATA__`.
          Will Coleda approved putting the coda after the `__END__`.
      - date_from: 1159890422
        date_to: 1159899909
        hidden: ~
        message_id: rt-3.5.HEAD-31258-1159890409-977.40449-72-0@perl.org
        messages:
          - 200610031124.44999.chromatic@wgz.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Chris Dolan
          - email: chromatic@wgz.org
            name: chromatic
        rt_ticket: 'perl #40449'
        subject: '[perl #40449] [PATCH] improvements to examples/io/httpd.pir '
        summary: |-
          Chris Dolan created ticket <rt://perl/40449> to supply a patch to make
          improvements to the HTTP server which ships with Parrot.  It was applied
          as r14833.
      - date_from: 1159904204
        date_to: 1159904204
        hidden: small commit
        message_id: 20061003193636.76DA0CBA4D@x12.develooper.com
        posters:
          - email: chip@cvs.perl.org
            name: chip
        subject: '[svn:parrot-pdd] r14840 - in trunk: . docs/pdds/clip'
        summary: ''
      - date_from: 1159908092
        date_to: 1160189232
        hidden: ~
        message_id: 4522CADF.7020506@ajs.com
        messages:
          - 17698.54984.678960.91503@localhost.localdomain
          - 4523BF37.3010001@ajs.com
        posters:
          - email: ajs@ajs.com
            name: Aaron Sherman
          - email: triska@gmx.at
            name: Markus Triska
          - email: chromatic@wgz.org
            name: chromatic
        subject: Wikipedia example
        summary: |-
          Aaron Sherman sent a patch which was requested on IRC.  It contains
          code which executes the parser on a sample string and dumps the parse
          tree; it checks the speed of PGE.  chromatic reported difficulties in
          getting the patch to work.
      - date_from: 1159990009
        date_to: 1159990009
        hidden: ~
        message_id: rt-3.5.HEAD-31251-1159989997-1894.40455-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Bernhard Schmalhofer
        rt_ticket: 'perl #40455'
        subject: '[perl #40455] [PATCH] Bring dotnet back into unified languages testing '
        summary: |-
          Ticket <rt://perl/40455>, by Bernhard Schmalhofer, contained a patch
          to extend the library search path to fix failing tests for
          `languages/dotnet`.
      - date_from: 1160005799
        date_to: 1160086247
        hidden: ~
        message_id: 1a83bc10610041649r6b9bb7eep5356be79437da4be@mail.gmail.com
        messages:
          - 45254AB0.7050405@gmx.de
          - 1a83bc10610051510l67165ab4n93b06ec74ede1b5f@mail.gmail.com
          - 200610052111.04489.lt@toetsch.at
          - 1a83bc10610051519s630d591clce880056da994bed@mail.gmail.com
        posters:
          - email: karl.forner@gmail.com
            name: Karl Forner
          - email: Bernhard.Schmalhofer@gmx.de
            name: Bernhard Schmalhofer
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: '[#39063 and #40066] boolean arrays'
        summary: |-
          Karl Forner wrote that he has been working on FixedBooleanArray and
          ResizeableBooleanArray.  Ticket <rt://perl/40066> indicated they
          needed to be rewritten.  He also looked at bug <rt://perl/39063>
          on ResizeableBooleanArray using 64 bytes per bit.  He thought that
          it would be best to rewrite the PMC.  He had a few questions on
          what was desired in an implementation.  Bernhard Schmalhofer and
          Leopold Toetsch tried to answer the questions.
          
          From this, Karl concluded that the best solution might be to use
          an external lib.  He also described two other possible approaches.
          
          A related thread is
          '<msgid:1a83bc10610021658y63c67e16k473c9d896fe1bd23@mail.gmail.com>'.
      - date_from: 1160026417
        date_to: 1160071757
        hidden: ~
        message_id: 200610042233.07557.chromatic@wgz.org
        messages:
          - 17700.60695.655570.292304@rgrjr.dyndns.org
        posters:
          - email: chromatic@wgz.org
            name: chromatic
          - email: rogers-perl6@rgrjr.dyndns.org
            name: Bob Rogers
        subject: Linux/PPC Segfault in Build
        summary: |-
          chromatic reported that he cannot get Parrot to build.
          Bob Rogers attributed the problem to his continuation changes, and
          thought r14845 would correct the problem.  chromatic confirmed that
          this solved the issue.
      - date_from: 1160059882
        date_to: 1160059882
        hidden: ~
        message_id: rt-3.5.HEAD-31257-1160059867-1747.40458-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Paul Cochrane
        rt_ticket: 'perl #40458'
        subject: '[perl #40458] [PATCH] fix for c_code_coda.t multiple occurrences test '
        summary: |-
          In ticket <rt://perl/40458>,
          Paul Cochrane supplied a patch to make the C-file coda test work correctly
          with multiple instances of the coda.
      - date_from: 1159486780
        date_to: 1160124331
        hidden: ~
        message_id: 451C5D20.60705@jwcs.net
        messages:
          - 200609291152.23133.lt@toetsch.at
          - 45257374.9070506@gmx.de
          - 45261797.3060005@jnthn.net
          - 200610052330.35064.lt@toetsch.at
          - 45261934.1010805@jnthn.net
        posters:
          - email: jonathan@jwcs.net
            name: Jonathan Worthington
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: Bernhard.Schmalhofer@gmx.de
            name: Bernhard Schmalhofer
          - email: jonathan@jnthn.net
            name: Jonathan Worthington
        subject: Bytecode PDD
        summary: |-
          Last week, Jonathan Worthington committed a draft of the Bytecode
          PDD and Leopold Toetsch offered comments.
          
          Bernhard Schmalhofer wondered if the 'UUID' field should be named
          'checksum'.  Leopold agreed, but thought that a UUID was
          also needed.  Jonathan noted that he had simply written down
          the incorrect definition in the file.
    title: Parrot Porters
  - name: perl6-users
    threads:
      - date_from: 1159771387
        date_to: 1159793668
        hidden: ~
        message_id: 451E464E.9020404@rusrating.ru
        messages:
          - C95A3A62-17F4-478A-A649-FE016BF71A2A@audreyt.org
          - 454CE1DB-560B-4C03-ADAF-AB168C16A7A7@audreyt.org
        posters:
          - email: richard@rusrating.ru
            name: Richard Hainsworth
          - email: audreyt@audreyt.org
            name: Audrey Tang
        subject: trying to use a role within a role
        summary: |-
          Richard Hainsworth posted some code where he was trying to use a role
          within a role and wondered why it didn't work.
          Audrey Tang replied that the statement-level `does` form of roles
          was not yet implemented.  Later, she replied that it had been implemented
          as r13782.  She gave Richard some information on writing tests for Pugs.
      - date_from: 1159885391
        date_to: 1159889454
        hidden: ~
        message_id: f69265510610030722y210cd52aha2e55dd3f0125b2d@mail.gmail.com
        messages:
          - 4F08BE51-7297-4BCA-9A69-BA95EB6C84F3@audreyt.org
        posters:
          - email: wim.vanderbauwhede@gmail.com
            name: Wim Vanderbauwhede
          - email: audreyt@audreyt.org
            name: Audrey Tang
        subject: error when using -> as lambda function
        summary: |-
          Wim Vanderbauwhede reported a problem with using `->` in calculating the
          factorial of 5.  Audrey Tang found the problem with the code, and
          recommended looking at 'Changes to Perl 5 operators' in S03.  She
          asked if Wim could supply a test to ensure that `1<2` generates
          a parse failure.
      - date_from: 1160057288
        date_to: 1160078505
        hidden: ~
        message_id: f69265510610050707p2368aa88we00bb3812c3231f5@mail.gmail.com
        messages:
          - 20061005200134.95098.qmail@web56205.mail.re3.yahoo.com
        posters:
          - email: wim.vanderbauwhede@gmail.com
            name: Wim Vanderbauwhede
          - email: dbrunton@yahoo.com
            name: David Brunton
        subject: Operator overloading/Inheritance from built-in types?
        summary: |-
          Wim Vanderbauwhede wanted to create a bitvector object and had problems
          overloading the `+` operator.  He also wondered if it was possible to
          overload the assignment operator, and included code from his attempt.
          David Brunton offered a suggestion.
      - date_from: 1160079000
        date_to: 1160079000
        hidden: part of thread f69265510610050707p2368aa88we00bb3812c3231f5@mail.gmail.com
        message_id: 20061005200951.71169.qmail@web56213.mail.re3.yahoo.com
        posters:
          - email: dbrunton@yahoo.com
            name: David Brunton
        subject: 'Re: Operator overloading/Inheritance from built-in types?'
        summary: ''
    title: Users
  - name: perl6-compiler
    threads:
      - date_from: 1159422558
        date_to: 1159702834
        hidden: ~
        message_id: c711ff240609272249q4f1e8988ra31289f081e3e5d4@mail.gmail.com
        messages:
          - c711ff240609302231o1b2f5ac5ocfccfa7f4055295a@mail.gmail.com
          - efo9ei$t98$1@sea.gmane.org
        posters:
          - email: agentzh@gmail.com
            name: Agent Zhang
          - email: iblech@web.de
            name: Ingo Blechschmidt
        subject: Synopses on the smoke server are a bit out-of-date
        summary: |-
          Previously,
          Agent Zhang reported that the synopses on the smoke server are out of
          date--r12432 as compared to version r12466 on feather, which syncs every      
          hour.
          
          This week,
          Ingo Blechschmidt asked for an example of something which was out of
          date, because the timestamps indicated a recent refresh.
    title: Compiler
title: Weekly Perl 6 mailing list summary
