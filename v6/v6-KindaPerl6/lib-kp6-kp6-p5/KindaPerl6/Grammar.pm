{

    package KindaPerl6::Grammar;

    # Do not edit this file - Perl 5 generated by KindaPerl6
    use v5;
    use strict;
    no strict 'vars';
    use constant KP6_DISABLE_INSECURE_CODE => 0;
    use KindaPerl6::Runtime::Perl5::KP6Runtime;
    my $_MODIFIED;
    BEGIN { $_MODIFIED = {} }
    BEGIN { $_ = ::DISPATCH( $::Scalar, "new", { modified => $_MODIFIED, name => "$_" } ); }
    {
        my $Class_name;
        $Class_name = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$Class_name' } ) unless defined $Class_name;
        BEGIN { $Class_name = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$Class_name' } ) }
        our $Code_get_class_name = ::DISPATCH( $::Routine, 'new', { modified => $_MODIFIED, name => '$Code_get_class_name' } );
        do {
            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_VAR_defined, 'APPLY', $::KindaPerl6::Grammar ), "true" ), "p5landish" ) ) { }
            else {
                {
                    my $Class_name;
                    $Class_name = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$Class_name' } ) unless defined $Class_name;
                    BEGIN { $Class_name = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$Class_name' } ) }
                    our $Code_get_class_name = ::DISPATCH( $::Routine, 'new', { modified => $_MODIFIED, name => '$Code_get_class_name' } );
                    do {
                        ::MODIFIED($::KindaPerl6::Grammar);
                        $::KindaPerl6::Grammar = ::DISPATCH( ::DISPATCH( $::Class, 'new', ::DISPATCH( $::Str, 'new', 'KindaPerl6::Grammar' ) ), 'PROTOTYPE', );
                        }
                }
            }
        };
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'ident_digit' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            {
                                                my $pos1;
                                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                do {
                                                    ::MODIFIED($pos1);
                                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                                };
                                                do {
                                                    do {
                                                        my $____some__weird___var____ = do {
                                                            {
                                                                do {
                                                                    (   do {
                                                                            my $____some__weird___var____ = do {
                                                                                {
                                                                                    my $pos1;
                                                                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                                                    BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                                                    do {
                                                                                        ::MODIFIED($pos1);
                                                                                        $pos1 = ::DISPATCH( $MATCH, 'to', );
                                                                                    };
                                                                                    do {
                                                                                        do {
                                                                                            my $____some__weird___var____ = do {
                                                                                                {
                                                                                                    do {
                                                                                                        {
                                                                                                            my $m2;
                                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                            do {
                                                                                                                ::MODIFIED($m2);
                                                                                                                $m2 = ::DISPATCH( $self, 'word', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                                                            };
                                                                                                            do {
                                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                }
                                                                                            };
                                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                            }
                                                                                            || do {
                                                                                            my $____some__weird___var____ = do {
                                                                                                {
                                                                                                    do {
                                                                                                        {
                                                                                                            my $m2;
                                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                            do {
                                                                                                                ::MODIFIED($m2);
                                                                                                                $m2 = ::DISPATCH( $self, 'word', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                                                            };
                                                                                                            do {
                                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                }
                                                                                            };
                                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                            }
                                                                                            || ::DISPATCH( $::Bit, "new", 0 );
                                                                                        }
                                                                                }
                                                                            };
                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                            }
                                                                            && do {
                                                                            my $____some__weird___var____ = do {
                                                                                {
                                                                                    my $pos1;
                                                                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                                                    BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                                                    do {
                                                                                        ::MODIFIED($pos1);
                                                                                        $pos1 = ::DISPATCH( $MATCH, 'to', );
                                                                                    };
                                                                                    do {
                                                                                        do {
                                                                                            my $____some__weird___var____ = do {
                                                                                                {
                                                                                                    do {
                                                                                                        {
                                                                                                            my $m2;
                                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                            do {
                                                                                                                ::MODIFIED($m2);
                                                                                                                $m2 = ::DISPATCH( $self, 'word', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                                                            };
                                                                                                            do {
                                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                }
                                                                                            };
                                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                            }
                                                                                            || do {
                                                                                            my $____some__weird___var____ = do {
                                                                                                {
                                                                                                    do {
                                                                                                        {
                                                                                                            my $m2;
                                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                            do {
                                                                                                                ::MODIFIED($m2);
                                                                                                                $m2 = ::DISPATCH( $self, 'word', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                                                            };
                                                                                                            do {
                                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                }
                                                                                            };
                                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                            }
                                                                                            || ::DISPATCH( $::Bit, "new", 0 );
                                                                                        }
                                                                                }
                                                                            };
                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                            }
                                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                                    }
                                                            }
                                                        };
                                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                        }
                                                        || do {
                                                        my $____some__weird___var____ = do {
                                                            {
                                                                do {
                                                                    (   do {
                                                                            my $____some__weird___var____ = do {
                                                                                {
                                                                                    my $pos1;
                                                                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                                                    BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                                                    do {
                                                                                        ::MODIFIED($pos1);
                                                                                        $pos1 = ::DISPATCH( $MATCH, 'to', );
                                                                                    };
                                                                                    do {
                                                                                        do {
                                                                                            my $____some__weird___var____ = do {
                                                                                                {
                                                                                                    do {
                                                                                                        {
                                                                                                            my $m2;
                                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                            do {
                                                                                                                ::MODIFIED($m2);
                                                                                                                $m2 = ::DISPATCH( $self, 'word', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                                                            };
                                                                                                            do {
                                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                }
                                                                                            };
                                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                            }
                                                                                            || do {
                                                                                            my $____some__weird___var____ = do {
                                                                                                {
                                                                                                    do {
                                                                                                        {
                                                                                                            my $m2;
                                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                            do {
                                                                                                                ::MODIFIED($m2);
                                                                                                                $m2 = ::DISPATCH( $self, 'word', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                                                            };
                                                                                                            do {
                                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                }
                                                                                            };
                                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                            }
                                                                                            || ::DISPATCH( $::Bit, "new", 0 );
                                                                                        }
                                                                                }
                                                                            };
                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                            }
                                                                            && do {
                                                                            my $____some__weird___var____ = do {
                                                                                {
                                                                                    my $pos1;
                                                                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                                                    BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                                                    do {
                                                                                        ::MODIFIED($pos1);
                                                                                        $pos1 = ::DISPATCH( $MATCH, 'to', );
                                                                                    };
                                                                                    do {
                                                                                        do {
                                                                                            my $____some__weird___var____ = do {
                                                                                                {
                                                                                                    do {
                                                                                                        {
                                                                                                            my $m2;
                                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                            do {
                                                                                                                ::MODIFIED($m2);
                                                                                                                $m2 = ::DISPATCH( $self, 'word', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                                                            };
                                                                                                            do {
                                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                }
                                                                                            };
                                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                            }
                                                                                            || do {
                                                                                            my $____some__weird___var____ = do {
                                                                                                {
                                                                                                    do {
                                                                                                        {
                                                                                                            my $m2;
                                                                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                                                            do {
                                                                                                                ::MODIFIED($m2);
                                                                                                                $m2 = ::DISPATCH( $self, 'word', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                                                            };
                                                                                                            do {
                                                                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                        }
                                                                                                }
                                                                                            };
                                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                            }
                                                                                            || ::DISPATCH( $::Bit, "new", 0 );
                                                                                        }
                                                                                }
                                                                            };
                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                            }
                                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                                    }
                                                            }
                                                        };
                                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                        }
                                                        || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'ident' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', '\\\'' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', '\\\'' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', '\\\'' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', '\\\'' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'full_ident' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            do {
                                                                ::MODIFIED($m2);
                                                                $m2 = ::DISPATCH( $self, 'ident', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                            };
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            do {
                                                                ::MODIFIED($m2);
                                                                $m2 = ::DISPATCH( $self, 'ident', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                            };
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'namespace' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'to_line_end' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'not_newline', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'not_newline', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'not_newline', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'not_newline', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'pod_begin' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'newline', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'newline', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'newline', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'newline', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'pod_other' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'newline', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'newline', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'newline', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'newline', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'ws' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $pos1;
                                                            $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                            BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                            do {
                                                                ::MODIFIED($pos1);
                                                                $pos1 = ::DISPATCH( $MATCH, 'to', );
                                                            };
                                                            do {
                                                                do {
                                                                    my $____some__weird___var____ = do {
                                                                        {
                                                                            do {
                                                                                (   do {
                                                                                        my $____some__weird___var____ = do {
                                                                                            {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    $GLOBAL::Code_infix_58__60__60__62_,
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ),
                                                                                                                    ::DISPATCH( $::Int,               'new',   1 )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        }
                                                                                                    }
                                                                                                    else {
                                                                                                        {
                                                                                                            do {
                                                                                                                if (::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                                'APPLY',
                                                                                                                                ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                                ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                            ),
                                                                                                                            "true"
                                                                                                                        ),
                                                                                                                        "p5landish"
                                                                                                                    )
                                                                                                                    )
                                                                                                                {
                                                                                                                    {
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                'STORE',
                                                                                                                                ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                            )
                                                                                                                            )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                    }
                                                                                                    }
                                                                                            }
                                                                                        };
                                                                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                        }
                                                                                        && do {
                                                                                        my $____some__weird___var____ = do {
                                                                                            {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    $GLOBAL::Code_infix_58__60__60__62_,
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ),
                                                                                                                    ::DISPATCH( $::Int,               'new',   1 )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        }
                                                                                                    }
                                                                                                    else {
                                                                                                        {
                                                                                                            do {
                                                                                                                if (::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                                'APPLY',
                                                                                                                                ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                                ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                            ),
                                                                                                                            "true"
                                                                                                                        ),
                                                                                                                        "p5landish"
                                                                                                                    )
                                                                                                                    )
                                                                                                                {
                                                                                                                    {
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                'STORE',
                                                                                                                                ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                            )
                                                                                                                            )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                    }
                                                                                                    }
                                                                                            }
                                                                                        };
                                                                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                        }
                                                                                ) || ::DISPATCH( $::Bit, "new", 0 );
                                                                                }
                                                                        }
                                                                    };
                                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                    }
                                                                    || do {
                                                                    my $____some__weird___var____ = do {
                                                                        {
                                                                            do {
                                                                                (   do {
                                                                                        my $____some__weird___var____ = do {
                                                                                            {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    $GLOBAL::Code_infix_58__60__60__62_,
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ),
                                                                                                                    ::DISPATCH( $::Int,               'new',   1 )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        }
                                                                                                    }
                                                                                                    else {
                                                                                                        {
                                                                                                            do {
                                                                                                                if (::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                                'APPLY',
                                                                                                                                ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                                ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                            ),
                                                                                                                            "true"
                                                                                                                        ),
                                                                                                                        "p5landish"
                                                                                                                    )
                                                                                                                    )
                                                                                                                {
                                                                                                                    {
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                'STORE',
                                                                                                                                ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                            )
                                                                                                                            )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                    }
                                                                                                    }
                                                                                            }
                                                                                        };
                                                                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                        }
                                                                                        && do {
                                                                                        my $____some__weird___var____ = do {
                                                                                            {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    $GLOBAL::Code_infix_58__60__60__62_,
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ),
                                                                                                                    ::DISPATCH( $::Int,               'new',   1 )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        }
                                                                                                    }
                                                                                                    else {
                                                                                                        {
                                                                                                            do {
                                                                                                                if (::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                                'APPLY',
                                                                                                                                ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                                ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                            ),
                                                                                                                            "true"
                                                                                                                        ),
                                                                                                                        "p5landish"
                                                                                                                    )
                                                                                                                    )
                                                                                                                {
                                                                                                                    {
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                'STORE',
                                                                                                                                ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                            )
                                                                                                                            )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                    }
                                                                                                    }
                                                                                            }
                                                                                        };
                                                                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                        }
                                                                                ) || ::DISPATCH( $::Bit, "new", 0 );
                                                                                }
                                                                        }
                                                                    };
                                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                    }
                                                                    || ::DISPATCH( $::Bit, "new", 0 );
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $pos1;
                                                            $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                            BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                            do {
                                                                ::MODIFIED($pos1);
                                                                $pos1 = ::DISPATCH( $MATCH, 'to', );
                                                            };
                                                            do {
                                                                do {
                                                                    my $____some__weird___var____ = do {
                                                                        {
                                                                            do {
                                                                                (   do {
                                                                                        my $____some__weird___var____ = do {
                                                                                            {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    $GLOBAL::Code_infix_58__60__60__62_,
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ),
                                                                                                                    ::DISPATCH( $::Int,               'new',   1 )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        }
                                                                                                    }
                                                                                                    else {
                                                                                                        {
                                                                                                            do {
                                                                                                                if (::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                                'APPLY',
                                                                                                                                ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                                ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                            ),
                                                                                                                            "true"
                                                                                                                        ),
                                                                                                                        "p5landish"
                                                                                                                    )
                                                                                                                    )
                                                                                                                {
                                                                                                                    {
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                'STORE',
                                                                                                                                ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                            )
                                                                                                                            )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                    }
                                                                                                    }
                                                                                            }
                                                                                        };
                                                                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                        }
                                                                                        && do {
                                                                                        my $____some__weird___var____ = do {
                                                                                            {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    $GLOBAL::Code_infix_58__60__60__62_,
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ),
                                                                                                                    ::DISPATCH( $::Int,               'new',   1 )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        }
                                                                                                    }
                                                                                                    else {
                                                                                                        {
                                                                                                            do {
                                                                                                                if (::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                                'APPLY',
                                                                                                                                ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                                ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                            ),
                                                                                                                            "true"
                                                                                                                        ),
                                                                                                                        "p5landish"
                                                                                                                    )
                                                                                                                    )
                                                                                                                {
                                                                                                                    {
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                'STORE',
                                                                                                                                ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                            )
                                                                                                                            )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                    }
                                                                                                    }
                                                                                            }
                                                                                        };
                                                                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                        }
                                                                                ) || ::DISPATCH( $::Bit, "new", 0 );
                                                                                }
                                                                        }
                                                                    };
                                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                    }
                                                                    || do {
                                                                    my $____some__weird___var____ = do {
                                                                        {
                                                                            do {
                                                                                (   do {
                                                                                        my $____some__weird___var____ = do {
                                                                                            {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    $GLOBAL::Code_infix_58__60__60__62_,
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ),
                                                                                                                    ::DISPATCH( $::Int,               'new',   1 )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        }
                                                                                                    }
                                                                                                    else {
                                                                                                        {
                                                                                                            do {
                                                                                                                if (::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                                'APPLY',
                                                                                                                                ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                                ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                            ),
                                                                                                                            "true"
                                                                                                                        ),
                                                                                                                        "p5landish"
                                                                                                                    )
                                                                                                                    )
                                                                                                                {
                                                                                                                    {
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                'STORE',
                                                                                                                                ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                            )
                                                                                                                            )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                    }
                                                                                                    }
                                                                                            }
                                                                                        };
                                                                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                        }
                                                                                        && do {
                                                                                        my $____some__weird___var____ = do {
                                                                                            {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    $GLOBAL::Code_infix_58__60__60__62_,
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ),
                                                                                                                    ::DISPATCH( $::Int,               'new',   1 )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        }
                                                                                                    }
                                                                                                    else {
                                                                                                        {
                                                                                                            do {
                                                                                                                if (::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            ::DISPATCH(
                                                                                                                                $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                                'APPLY',
                                                                                                                                ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                                ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                            ),
                                                                                                                            "true"
                                                                                                                        ),
                                                                                                                        "p5landish"
                                                                                                                    )
                                                                                                                    )
                                                                                                                {
                                                                                                                    {
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                            ::DISPATCH_VAR(
                                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                                'STORE',
                                                                                                                                ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                            )
                                                                                                                            )
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    {
                                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                        }
                                                                                                    }
                                                                                                    }
                                                                                            }
                                                                                        };
                                                                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                                        }
                                                                                ) || ::DISPATCH( $::Bit, "new", 0 );
                                                                                }
                                                                        }
                                                                    };
                                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                    }
                                                                    || ::DISPATCH( $::Bit, "new", 0 );
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'opt_ws' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        do {
                                                            ::MODIFIED($m2);
                                                            $m2 = ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                        };
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                {
                                                                    ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        do {
                                                            ::MODIFIED($m2);
                                                            $m2 = ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                        };
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                {
                                                                    ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'opt_ws2' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        do {
                                                            ::MODIFIED($m2);
                                                            $m2 = ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                        };
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                {
                                                                    ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        do {
                                                            ::MODIFIED($m2);
                                                            $m2 = ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                        };
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                {
                                                                    ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'opt_ws3' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        do {
                                                            ::MODIFIED($m2);
                                                            $m2 = ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                        };
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                {
                                                                    ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        do {
                                                            ::MODIFIED($m2);
                                                            $m2 = ::DISPATCH( $self, 'ws', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                        };
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                {
                                                                    ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'parse' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'comp_unit', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'comp_unit' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'comp_unit', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'comp_unit' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'comp_unit', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'comp_unit' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'comp_unit', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'comp_unit' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'unit_type' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                )
                                                                )
                                                            {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                        ::DISPATCH( $::Str, 'new', '\\\'' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH(
                                                                                    $GLOBAL::Code_infix_58__60__43__62_,
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                    )
                                                                                    )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                )
                                                                )
                                                            {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                        ::DISPATCH( $::Str, 'new', '\\\'' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH(
                                                                                    $GLOBAL::Code_infix_58__60__43__62_,
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                    )
                                                                                    )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'trait_auxiliary' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', 'i' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', 'i' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', 'i' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', 'i' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'class_trait' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'trait_auxiliary', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'trait_auxiliary' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'trait_auxiliary', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'trait_auxiliary' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'class_traits' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'class_trait', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'class_trait' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'class_trait', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'class_trait' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'class_trait', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'class_trait' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'class_trait', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'class_trait' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'comp_unit' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'opt_ws', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'opt_ws', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'opt_ws', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    do {
                                                                        ::MODIFIED($m2);
                                                                        $m2 = ::DISPATCH( $self, 'opt_ws', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                                    };
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'infix_op' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                )
                                                                )
                                                            {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                        ::DISPATCH( $::Str, 'new', '\\\'' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH(
                                                                                    $GLOBAL::Code_infix_58__60__43__62_,
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                    )
                                                                                    )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                )
                                                                )
                                                            {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                        ::DISPATCH( $::Str, 'new', '\\\'' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH(
                                                                                    $GLOBAL::Code_infix_58__60__43__62_,
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                    )
                                                                                    )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'hyper_op' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                )
                                                                )
                                                            {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                        ::DISPATCH( $::Str, 'new', '\\\'' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH(
                                                                                    $GLOBAL::Code_infix_58__60__43__62_,
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                    )
                                                                                    )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                )
                                                                )
                                                            {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                        ::DISPATCH( $::Str, 'new', '\\\'' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH(
                                                                                    $GLOBAL::Code_infix_58__60__43__62_,
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                    )
                                                                                    )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'prefix_op' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $pos1;
                                                            $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                            BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                            do {
                                                                ::MODIFIED($pos1);
                                                                $pos1 = ::DISPATCH( $MATCH, 'to', );
                                                            };
                                                            do {
                                                                do {
                                                                    my $____some__weird___var____ = do {
                                                                        {
                                                                            do {
                                                                                {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            {
                                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                                            }
                                                                                        }
                                                                                        else {
                                                                                            {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $::Str, 'new', '$' ),
                                                                                                                    ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        {
                                                                                                            ::DISPATCH(
                                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                ::DISPATCH_VAR(
                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                )
                                                                                                                )
                                                                                                        }
                                                                                                    }
                                                                                                    else {
                                                                                                        {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        }
                                                                                                    }
                                                                                                    }
                                                                                            }
                                                                                        }
                                                                                        }
                                                                                }
                                                                                }
                                                                        }
                                                                    };
                                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                    }
                                                                    || do {
                                                                    my $____some__weird___var____ = do {
                                                                        {
                                                                            do {
                                                                                {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            {
                                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                                            }
                                                                                        }
                                                                                        else {
                                                                                            {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $::Str, 'new', '$' ),
                                                                                                                    ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        {
                                                                                                            ::DISPATCH(
                                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                ::DISPATCH_VAR(
                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                )
                                                                                                                )
                                                                                                        }
                                                                                                    }
                                                                                                    else {
                                                                                                        {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        }
                                                                                                    }
                                                                                                    }
                                                                                            }
                                                                                        }
                                                                                        }
                                                                                }
                                                                                }
                                                                        }
                                                                    };
                                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                    }
                                                                    || ::DISPATCH( $::Bit, "new", 0 );
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $pos1;
                                                            $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                            BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                            do {
                                                                ::MODIFIED($pos1);
                                                                $pos1 = ::DISPATCH( $MATCH, 'to', );
                                                            };
                                                            do {
                                                                do {
                                                                    my $____some__weird___var____ = do {
                                                                        {
                                                                            do {
                                                                                {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            {
                                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                                            }
                                                                                        }
                                                                                        else {
                                                                                            {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $::Str, 'new', '$' ),
                                                                                                                    ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        {
                                                                                                            ::DISPATCH(
                                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                ::DISPATCH_VAR(
                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                )
                                                                                                                )
                                                                                                        }
                                                                                                    }
                                                                                                    else {
                                                                                                        {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        }
                                                                                                    }
                                                                                                    }
                                                                                            }
                                                                                        }
                                                                                        }
                                                                                }
                                                                                }
                                                                        }
                                                                    };
                                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                    }
                                                                    || do {
                                                                    my $____some__weird___var____ = do {
                                                                        {
                                                                            do {
                                                                                {
                                                                                    do {
                                                                                        if (::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true"
                                                                                                ),
                                                                                                "p5landish"
                                                                                            )
                                                                                            )
                                                                                        {
                                                                                            {
                                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                                            }
                                                                                        }
                                                                                        else {
                                                                                            {
                                                                                                do {
                                                                                                    if (::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                ::DISPATCH(
                                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                    'APPLY',
                                                                                                                    ::DISPATCH( $::Str, 'new', '$' ),
                                                                                                                    ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                ),
                                                                                                                "true"
                                                                                                            ),
                                                                                                            "p5landish"
                                                                                                        )
                                                                                                        )
                                                                                                    {
                                                                                                        {
                                                                                                            ::DISPATCH(
                                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                ::DISPATCH_VAR(
                                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                )
                                                                                                                )
                                                                                                        }
                                                                                                    }
                                                                                                    else {
                                                                                                        {
                                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                                        }
                                                                                                    }
                                                                                                    }
                                                                                            }
                                                                                        }
                                                                                        }
                                                                                }
                                                                                }
                                                                        }
                                                                    };
                                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                    }
                                                                    || ::DISPATCH( $::Bit, "new", 0 );
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'declarator' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                )
                                                                )
                                                            {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                        ::DISPATCH( $::Str, 'new', '\\\'' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH(
                                                                                    $GLOBAL::Code_infix_58__60__43__62_,
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                    )
                                                                                    )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                )
                                                                )
                                                            {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                        ::DISPATCH( $::Str, 'new', '\\\'' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH(
                                                                                    $GLOBAL::Code_infix_58__60__43__62_,
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                    )
                                                                                    )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'opt_declarator' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'declarator', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'declarator' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'declarator', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'declarator' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'declarator', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'declarator' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'declarator', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'declarator' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'exp2' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'exp', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'exp', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'exp' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'term_meth', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'term_meth' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'term_meth', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'term_meth' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'opt_ident' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'term_meth' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'full_ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'full_ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'full_ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'full_ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'sub_or_method_name' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'full_ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'full_ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'opt_type' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $pos1;
                                                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                                    BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                                    do {
                                                                        ::MODIFIED($pos1);
                                                                        $pos1 = ::DISPATCH( $MATCH, 'to', );
                                                                    };
                                                                    do {
                                                                        do {
                                                                            my $____some__weird___var____ = do {
                                                                                {
                                                                                    do {
                                                                                        {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    }
                                                                                                }
                                                                                                else {
                                                                                                    {
                                                                                                        do {
                                                                                                            if (::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                            ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                        ),
                                                                                                                        "true"
                                                                                                                    ),
                                                                                                                    "p5landish"
                                                                                                                )
                                                                                                                )
                                                                                                            {
                                                                                                                {
                                                                                                                    ::DISPATCH(
                                                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                        ::DISPATCH_VAR(
                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                            'STORE',
                                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                        )
                                                                                                                        )
                                                                                                                }
                                                                                                            }
                                                                                                            else {
                                                                                                                {
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                }
                                                                                                            }
                                                                                                            }
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                }
                                                                            };
                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                            }
                                                                            || do {
                                                                            my $____some__weird___var____ = do {
                                                                                {
                                                                                    do {
                                                                                        {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    }
                                                                                                }
                                                                                                else {
                                                                                                    {
                                                                                                        do {
                                                                                                            if (::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                            ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                        ),
                                                                                                                        "true"
                                                                                                                    ),
                                                                                                                    "p5landish"
                                                                                                                )
                                                                                                                )
                                                                                                            {
                                                                                                                {
                                                                                                                    ::DISPATCH(
                                                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                        ::DISPATCH_VAR(
                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                            'STORE',
                                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                        )
                                                                                                                        )
                                                                                                                }
                                                                                                            }
                                                                                                            else {
                                                                                                                {
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                }
                                                                                                            }
                                                                                                            }
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                }
                                                                            };
                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                            }
                                                                            || ::DISPATCH( $::Bit, "new", 0 );
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $pos1;
                                                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                                    BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                                    do {
                                                                        ::MODIFIED($pos1);
                                                                        $pos1 = ::DISPATCH( $MATCH, 'to', );
                                                                    };
                                                                    do {
                                                                        do {
                                                                            my $____some__weird___var____ = do {
                                                                                {
                                                                                    do {
                                                                                        {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    }
                                                                                                }
                                                                                                else {
                                                                                                    {
                                                                                                        do {
                                                                                                            if (::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                            ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                        ),
                                                                                                                        "true"
                                                                                                                    ),
                                                                                                                    "p5landish"
                                                                                                                )
                                                                                                                )
                                                                                                            {
                                                                                                                {
                                                                                                                    ::DISPATCH(
                                                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                        ::DISPATCH_VAR(
                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                            'STORE',
                                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                        )
                                                                                                                        )
                                                                                                                }
                                                                                                            }
                                                                                                            else {
                                                                                                                {
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                }
                                                                                                            }
                                                                                                            }
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                }
                                                                            };
                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                            }
                                                                            || do {
                                                                            my $____some__weird___var____ = do {
                                                                                {
                                                                                    do {
                                                                                        {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    }
                                                                                                }
                                                                                                else {
                                                                                                    {
                                                                                                        do {
                                                                                                            if (::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                            ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                        ),
                                                                                                                        "true"
                                                                                                                    ),
                                                                                                                    "p5landish"
                                                                                                                )
                                                                                                                )
                                                                                                            {
                                                                                                                {
                                                                                                                    ::DISPATCH(
                                                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                        ::DISPATCH_VAR(
                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                            'STORE',
                                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                        )
                                                                                                                        )
                                                                                                                }
                                                                                                            }
                                                                                                            else {
                                                                                                                {
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                }
                                                                                                            }
                                                                                                            }
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                }
                                                                            };
                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                            }
                                                                            || ::DISPATCH( $::Bit, "new", 0 );
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $pos1;
                                                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                                    BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                                    do {
                                                                        ::MODIFIED($pos1);
                                                                        $pos1 = ::DISPATCH( $MATCH, 'to', );
                                                                    };
                                                                    do {
                                                                        do {
                                                                            my $____some__weird___var____ = do {
                                                                                {
                                                                                    do {
                                                                                        {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    }
                                                                                                }
                                                                                                else {
                                                                                                    {
                                                                                                        do {
                                                                                                            if (::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                            ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                        ),
                                                                                                                        "true"
                                                                                                                    ),
                                                                                                                    "p5landish"
                                                                                                                )
                                                                                                                )
                                                                                                            {
                                                                                                                {
                                                                                                                    ::DISPATCH(
                                                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                        ::DISPATCH_VAR(
                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                            'STORE',
                                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                        )
                                                                                                                        )
                                                                                                                }
                                                                                                            }
                                                                                                            else {
                                                                                                                {
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                }
                                                                                                            }
                                                                                                            }
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                }
                                                                            };
                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                            }
                                                                            || do {
                                                                            my $____some__weird___var____ = do {
                                                                                {
                                                                                    do {
                                                                                        {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    }
                                                                                                }
                                                                                                else {
                                                                                                    {
                                                                                                        do {
                                                                                                            if (::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                            ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                        ),
                                                                                                                        "true"
                                                                                                                    ),
                                                                                                                    "p5landish"
                                                                                                                )
                                                                                                                )
                                                                                                            {
                                                                                                                {
                                                                                                                    ::DISPATCH(
                                                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                        ::DISPATCH_VAR(
                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                            'STORE',
                                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                        )
                                                                                                                        )
                                                                                                                }
                                                                                                            }
                                                                                                            else {
                                                                                                                {
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                }
                                                                                                            }
                                                                                                            }
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                }
                                                                            };
                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                            }
                                                                            || ::DISPATCH( $::Bit, "new", 0 );
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $pos1;
                                                                    $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                                    BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                                    do {
                                                                        ::MODIFIED($pos1);
                                                                        $pos1 = ::DISPATCH( $MATCH, 'to', );
                                                                    };
                                                                    do {
                                                                        do {
                                                                            my $____some__weird___var____ = do {
                                                                                {
                                                                                    do {
                                                                                        {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    }
                                                                                                }
                                                                                                else {
                                                                                                    {
                                                                                                        do {
                                                                                                            if (::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                            ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                        ),
                                                                                                                        "true"
                                                                                                                    ),
                                                                                                                    "p5landish"
                                                                                                                )
                                                                                                                )
                                                                                                            {
                                                                                                                {
                                                                                                                    ::DISPATCH(
                                                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                        ::DISPATCH_VAR(
                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                            'STORE',
                                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                        )
                                                                                                                        )
                                                                                                                }
                                                                                                            }
                                                                                                            else {
                                                                                                                {
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                }
                                                                                                            }
                                                                                                            }
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                }
                                                                            };
                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                            }
                                                                            || do {
                                                                            my $____some__weird___var____ = do {
                                                                                {
                                                                                    do {
                                                                                        {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    }
                                                                                                }
                                                                                                else {
                                                                                                    {
                                                                                                        do {
                                                                                                            if (::DISPATCH(
                                                                                                                    ::DISPATCH(
                                                                                                                        ::DISPATCH(
                                                                                                                            $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                            'APPLY',
                                                                                                                            ::DISPATCH( $::Str, 'new', '\\\'' ),
                                                                                                                            ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                                        ),
                                                                                                                        "true"
                                                                                                                    ),
                                                                                                                    "p5landish"
                                                                                                                )
                                                                                                                )
                                                                                                            {
                                                                                                                {
                                                                                                                    ::DISPATCH(
                                                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                                        'APPLY',
                                                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                                        ::DISPATCH_VAR(
                                                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                                                            'STORE',
                                                                                                                            ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                                        )
                                                                                                                        )
                                                                                                                }
                                                                                                            }
                                                                                                            else {
                                                                                                                {
                                                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                                                }
                                                                                                            }
                                                                                                            }
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                        }
                                                                                        }
                                                                                }
                                                                            };
                                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                            }
                                                                            || ::DISPATCH( $::Bit, "new", 0 );
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'use_from_perl5' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 12 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', ':from<perl5>' ),
                                                                                                    ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 12 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 12 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 12 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', ':from<perl5>' ),
                                                                                                    ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 12 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 12 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 12 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', ':from<perl5>' ),
                                                                                                    ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 12 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 12 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 12 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                    'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', ':from<perl5>' ),
                                                                                                    ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 12 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 12 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'sigil' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                )
                                                                )
                                                            {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                        ::DISPATCH( $::Str, 'new', '$' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH(
                                                                                    $GLOBAL::Code_infix_58__60__43__62_,
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                    )
                                                                                    )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        do {
                                                            if (::DISPATCH(
                                                                    ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                )
                                                                )
                                                            {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                        ::DISPATCH( $::Str, 'new', '$' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                    ),
                                                                                    "true"
                                                                                ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH(
                                                                                    $GLOBAL::Code_infix_58__60__43__62_,
                                                                                    'APPLY',
                                                                                    ::DISPATCH( $::Int, 'new', 1 ),
                                                                                    ::DISPATCH_VAR(
                                                                                        ::DISPATCH( $MATCH, 'to', ),
                                                                                        'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                    )
                                                                                    )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'twigil' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        my $pos1;
                                                        $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                        BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                        do {
                                                            ::MODIFIED($pos1);
                                                            $pos1 = ::DISPATCH( $MATCH, 'to', );
                                                        };
                                                        do {
                                                            do {
                                                                my $____some__weird___var____ = do {
                                                                    {
                                                                        do {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $::Str, 'new', '.' ),
                                                                                                                ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                            ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    {
                                                                                                        ::DISPATCH(
                                                                                                            $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                            ::DISPATCH_VAR(
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                            )
                                                                                                            )
                                                                                                    }
                                                                                                }
                                                                                                else {
                                                                                                    {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                            }
                                                                    }
                                                                };
                                                                ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                }
                                                                || do {
                                                                my $____some__weird___var____ = do {
                                                                    {
                                                                        do {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $::Str, 'new', '.' ),
                                                                                                                ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                            ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    {
                                                                                                        ::DISPATCH(
                                                                                                            $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                            ::DISPATCH_VAR(
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                            )
                                                                                                            )
                                                                                                    }
                                                                                                }
                                                                                                else {
                                                                                                    {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                            }
                                                                    }
                                                                };
                                                                ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                }
                                                                || ::DISPATCH( $::Bit, "new", 0 );
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        my $pos1;
                                                        $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                                        BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                                        do {
                                                            ::MODIFIED($pos1);
                                                            $pos1 = ::DISPATCH( $MATCH, 'to', );
                                                        };
                                                        do {
                                                            do {
                                                                my $____some__weird___var____ = do {
                                                                    {
                                                                        do {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $::Str, 'new', '.' ),
                                                                                                                ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                            ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    {
                                                                                                        ::DISPATCH(
                                                                                                            $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                            ::DISPATCH_VAR(
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                            )
                                                                                                            )
                                                                                                    }
                                                                                                }
                                                                                                else {
                                                                                                    {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                            }
                                                                    }
                                                                };
                                                                ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                }
                                                                || do {
                                                                my $____some__weird___var____ = do {
                                                                    {
                                                                        do {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            do {
                                                                                                if (::DISPATCH(
                                                                                                        ::DISPATCH(
                                                                                                            ::DISPATCH(
                                                                                                                $GLOBAL::Code_infix_58__60_eq_62_,
                                                                                                                'APPLY',
                                                                                                                ::DISPATCH( $::Str, 'new', '.' ),
                                                                                                                ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                            ),
                                                                                                            "true"
                                                                                                        ),
                                                                                                        "p5landish"
                                                                                                    )
                                                                                                    )
                                                                                                {
                                                                                                    {
                                                                                                        ::DISPATCH(
                                                                                                            $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                            'APPLY',
                                                                                                            ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                            ::DISPATCH_VAR(
                                                                                                                ::DISPATCH( $MATCH, 'to', ),
                                                                                                                'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                            )
                                                                                                            )
                                                                                                    }
                                                                                                }
                                                                                                else {
                                                                                                    {
                                                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                            }
                                                                    }
                                                                };
                                                                ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                                }
                                                                || ::DISPATCH( $::Bit, "new", 0 );
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'undeclared_var' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'sigil', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'sigil' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'sigil', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'sigil' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'var' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'sigil', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'sigil' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'sigil', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'sigil' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'sigil', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'sigil' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'sigil', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'sigil' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'val' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'val_undef', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'val_undef' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'val_undef', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'val_undef' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'val_undef', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'val_undef' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'val_undef', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'val_undef' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'val_bit' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', 'T' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', 'T' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', 'T' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    do {
                                                                        if (::DISPATCH(
                                                                                ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ),
                                                                                "p5landish"
                                                                            )
                                                                            )
                                                                        {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                do {
                                                                                    if (::DISPATCH(
                                                                                            ::DISPATCH(
                                                                                                ::DISPATCH(
                                                                                                    $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                                    ::DISPATCH( $::Str, 'new', 'T' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                                ),
                                                                                                "true"
                                                                                            ),
                                                                                            "p5landish"
                                                                                        )
                                                                                        )
                                                                                    {
                                                                                        {
                                                                                            ::DISPATCH(
                                                                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                                                                'APPLY',
                                                                                                ::DISPATCH( $::Int, 'new', 1 ),
                                                                                                ::DISPATCH_VAR(
                                                                                                    ::DISPATCH( $MATCH, 'to', ),
                                                                                                    'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                                )
                                                                                                )
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        {
                                                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                                                        }
                                                                                    }
                                                                                    }
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'val_undef' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'u' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'u' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'val_num' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'X' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'X' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'digits' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            do {
                                                                ::MODIFIED($m2);
                                                                $m2 = ::DISPATCH( $self, 'digit', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                            };
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            do {
                                                                ::MODIFIED($m2);
                                                                $m2 = ::DISPATCH( $self, 'digit', $str, ::DISPATCH( $MATCH, 'to', ) );
                                                            };
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH( $MATCH, 'to', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'val_int' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'digits', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'digits' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'digits', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'digits' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'exp_seq' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'exp', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'exp', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'exp', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'exp', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'lit' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'lit_object', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'lit_object' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'lit_object', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'lit_object' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'lit_seq' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'X' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'X' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'lit_array' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'X' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'X' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'lit_hash' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'X' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'X' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'lit_code' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'X' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'X' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'lit_object' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', '\\\'' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', '\\\'' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'call' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'exp', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'exp', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'apply' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'namespace', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'namespace' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'namespace', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'namespace' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'opt_name' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                {
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    {
                                                        my $m2;
                                                        $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                        BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                        ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                        do {
                                                            if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                {
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ), 'STORE', $m2 );
                                                                    ::DISPATCH( $::Int, 'new', 1 )
                                                                }
                                                            }
                                                            else {
                                                                {
                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                }
                                                            }
                                                            }
                                                    }
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'invocant' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'var', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'var' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'var', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'var' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'var', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'var' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'var', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'var' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'capture' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'exp', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'exp', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || do {
                                        my $____some__weird___var____ = do {
                                            {
                                                do {
                                                    (   do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'exp', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                            && do {
                                                            my $____some__weird___var____ = do {
                                                                {
                                                                    my $m2;
                                                                    $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                                    BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                                    ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'exp', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                                    do {
                                                                        if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                            {
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                                ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ), 'STORE', $m2 );
                                                                                ::DISPATCH( $::Int, 'new', 1 )
                                                                            }
                                                                        }
                                                                        else {
                                                                            {
                                                                                ::DISPATCH( $::Int, 'new', 0 )
                                                                            }
                                                                        }
                                                                        }
                                                                }
                                                            };
                                                            ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                            }
                                                    ) || ::DISPATCH( $::Bit, "new", 0 );
                                                    }
                                            }
                                        };
                                        ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                        }
                                        || ::DISPATCH( $::Bit, "new", 0 );
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'sig' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'invocant', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'invocant' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            my $m2;
                                                            $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                            BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                            ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'invocant', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                            do {
                                                                if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                                    {
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'invocant' ) ), 'STORE', $m2 );
                                                                        ::DISPATCH( $::Int, 'new', 1 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'base_class' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            {
                                                my $m2;
                                                $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) unless defined $m2;
                                                BEGIN { $m2 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$m2' } ) }
                                                ::DISPATCH_VAR( $m2, 'STORE', ::DISPATCH( $self, 'full_ident', $str, ::DISPATCH( $MATCH, 'to', ) ) );
                                                do {
                                                    if ( ::DISPATCH( ::DISPATCH( $m2, "true" ), "p5landish" ) ) {
                                                        {
                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ), 'STORE', ::DISPATCH( $m2, 'to', ) );
                                                            ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ), 'STORE', $m2 );
                                                            ::DISPATCH( $::Int, 'new', 1 )
                                                        }
                                                    }
                                                    else {
                                                        {
                                                            ::DISPATCH( $::Int, 'new', 0 )
                                                        }
                                                    }
                                                    }
                                            }
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'subset' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 's' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 's' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'method' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'm' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'm' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'begin_block' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'B' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'B' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'check_block' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'C' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 'C' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'token' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 't' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 't' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'token_sym' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $MATCH;
                    $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) unless defined $MATCH;
                    BEGIN { $MATCH = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$MATCH' } ) }
                    my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                    my $str;
                    $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) unless defined $str;
                    BEGIN { $str = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$str' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($str);
                        $str = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($pos);
                        $pos = ::DISPATCH( $List__, 'INDEX', ::DISPATCH( $::Int, 'new', 1 ) );
                    };
                    do {
                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_defined, 'APPLY', $str ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH_VAR( $str, 'STORE', $_ )
                            }
                        }
                    };
                    $MATCH;
                    ::DISPATCH_VAR( $MATCH, 'STORE', ::DISPATCH( $::Match, 'new', ) );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ), 'STORE', $str );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),      'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'to', ),        'STORE', $pos );
                    ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'bool', ),      'STORE', ::DISPATCH( $::Int, 'new', 1 ) );
                    ::DISPATCH_VAR(
                        ::DISPATCH( $MATCH, 'bool', ),
                        'STORE',
                        do {
                            {
                                my $pos1;
                                $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) unless defined $pos1;
                                BEGIN { $pos1 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos1' } ) }
                                do {
                                    ::MODIFIED($pos1);
                                    $pos1 = ::DISPATCH( $MATCH, 'to', );
                                };
                                do {
                                    {
                                        do {
                                            (   do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 't' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                                    && do {
                                                    my $____some__weird___var____ = do {
                                                        {
                                                            do {
                                                                if (::DISPATCH(
                                                                        ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__60__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $str ), ::DISPATCH( $::Int, 'new', 1 ) ), "true" ), "p5landish"
                                                                    )
                                                                    )
                                                                {
                                                                    {
                                                                        ::DISPATCH( $::Int, 'new', 0 )
                                                                    }
                                                                }
                                                                else {
                                                                    {
                                                                        do {
                                                                            if (::DISPATCH(
                                                                                    ::DISPATCH(
                                                                                        ::DISPATCH(
                                                                                            $GLOBAL::Code_infix_58__60_eq_62_, 'APPLY',
                                                                                            ::DISPATCH( $::Str, 'new', 't' ), ::DISPATCH( $GLOBAL::Code_substr, 'APPLY', $str, ::DISPATCH( $MATCH, 'to', ), ::DISPATCH( $::Int, 'new', 1 ) )
                                                                                        ),
                                                                                        "true"
                                                                                    ),
                                                                                    "p5landish"
                                                                                )
                                                                                )
                                                                            {
                                                                                {
                                                                                    ::DISPATCH(
                                                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                                                        'APPLY',
                                                                                        ::DISPATCH( $::Int, 'new', 1 ),
                                                                                        ::DISPATCH_VAR(
                                                                                            ::DISPATCH( $MATCH, 'to', ),
                                                                                            'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', ::DISPATCH( $::Int, 'new', 1 ), ::DISPATCH( $MATCH, 'to', ) )
                                                                                        )
                                                                                        )
                                                                                }
                                                                            }
                                                                            else {
                                                                                {
                                                                                    ::DISPATCH( $::Int, 'new', 0 )
                                                                                }
                                                                            }
                                                                            }
                                                                    }
                                                                }
                                                                }
                                                        }
                                                    };
                                                    ::DISPATCH( $____some__weird___var____, "true" )->{_value} && $____some__weird___var____;
                                                    }
                                            ) || ::DISPATCH( $::Bit, "new", 0 );
                                            }
                                    }
                                    }
                            }
                            }
                    );
                    return ($MATCH);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Array, "new",
                            {   _array => [
                                    ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ) ),
                                    ::DISPATCH( $GLOBAL::Code_prefix_58__60__64__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'namespace' ) ) ) )
                                ]
                            }
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Array, "new", { _array => [ ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ) ) ] } ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Array, "new", { _array => [] } ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Array, "new",
                            {   _array => [
                                    ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'comp_unit' ) ) ),
                                    ::DISPATCH( $GLOBAL::Code_prefix_58__60__64__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'parse' ) ) ) )
                                ]
                            }
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Array, "new", { _array => [ ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'comp_unit' ) ) ) ] } ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Array, "new", { _array => [] } ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Array, "new",
                            {   _array => [
                                    ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'trait_auxiliary' ) ) ),
                                    ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ) )
                                ]
                            }
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Array, "new",
                            {   _array => [
                                    ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'class_trait' ) ) ),
                                    ::DISPATCH( $GLOBAL::Code_prefix_58__60__64__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'class_traits' ) ) ) )
                                ]
                            }
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Array, "new", { _array => [ ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'class_trait' ) ) ) ] } ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Array, "new", { _array => [] } ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($Class_name);
                        $Class_name = ::DISPATCH( $GLOBAL::Code_prefix_58__60__126__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ) );
                        }
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    ::DISPATCH( $COMPILER::Code_add_pad, 'APPLY', $Class_name );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $env;
                    $env = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$env' } ) unless defined $env;
                    BEGIN { $env = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$env' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($env);
                        $env = ::DISPATCH( $COMPILER::List_PAD, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    ::DISPATCH( $COMPILER::Code_drop_pad, 'APPLY', );
                    return (
                        ::DISPATCH(
                            $::CompUnit,
                            'new',
                            ::DISPATCH( $::Str, 'new', 'unit_type' )  => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'unit_type' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'name' )       => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'traits' )     => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'class_traits' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'attributes' ) => ::DISPATCH( $::Hash,                              "new",   { _hash             => {} } ),
                            ::DISPATCH( $::Str, 'new', 'methods' )    => ::DISPATCH( $::Hash,                              "new",   { _hash             => {} } ),
                            ::DISPATCH( $::Str, 'new', 'body' )       => ::DISPATCH(
                                $::Lit::Code,
                                'new',
                                ::DISPATCH( $::Str, 'new', 'pad' ) => $env,
                                ::DISPATCH( $::Str, 'new', 'state' ) => ::DISPATCH( $::Hash, "new", { _hash => {} } ),
                                ::DISPATCH( $::Str, 'new', 'sig' )   => ::DISPATCH(
                                    $::Sig, 'new', ::DISPATCH( $::Str, 'new', 'invocant' ) => $::Undef,
                                    ::DISPATCH( $::Str, 'new', 'positional' ) => ::DISPATCH( $::Array, "new", { _array => [] } ),
                                    ::DISPATCH( $::Str, 'new', 'named' )      => ::DISPATCH( $::Hash,  "new", { _hash  => {} } ),
                                ),
                                ::DISPATCH( $::Str, 'new', 'body' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp_stmts' ) ) ),
                            ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($Class_name);
                        $Class_name = ::DISPATCH( $::Str, 'new', 'Main' );
                    };
                    ::DISPATCH( $COMPILER::Code_add_pad, 'APPLY', $Class_name );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $env;
                    $env = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$env' } ) unless defined $env;
                    BEGIN { $env = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$env' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($env);
                        $env = ::DISPATCH( $COMPILER::List_PAD, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    ::DISPATCH( $COMPILER::Code_drop_pad, 'APPLY', );
                    return (
                        ::DISPATCH(
                            $::CompUnit,
                            'new',
                            ::DISPATCH( $::Str, 'new', 'unit_type' ) => ::DISPATCH( $::Str, 'new', 'module' ),
                            ::DISPATCH( $::Str, 'new', 'name' )      => ::DISPATCH( $::Str, 'new', 'Main' ),
                            ::DISPATCH( $::Str, 'new', 'traits' )     => ::DISPATCH( $::Array, "new", { _array => [] } ),
                            ::DISPATCH( $::Str, 'new', 'attributes' ) => ::DISPATCH( $::Hash,  "new", { _hash  => {} } ),
                            ::DISPATCH( $::Str, 'new', 'methods' )    => ::DISPATCH( $::Hash,  "new", { _hash  => {} } ),
                            ::DISPATCH( $::Str, 'new', 'body' )       => ::DISPATCH(
                                $::Lit::Code,
                                'new',
                                ::DISPATCH( $::Str, 'new', 'pad' ) => $env,
                                ::DISPATCH( $::Str, 'new', 'state' ) => ::DISPATCH( $::Hash, "new", { _hash => {} } ),
                                ::DISPATCH( $::Str, 'new', 'sig' )   => ::DISPATCH(
                                    $::Sig, 'new', ::DISPATCH( $::Str, 'new', 'invocant' ) => $::Undef,
                                    ::DISPATCH( $::Str, 'new', 'positional' ) => ::DISPATCH( $::Array, "new", { _array => [] } ),
                                    ::DISPATCH( $::Str, 'new', 'named' )      => ::DISPATCH( $::Hash,  "new", { _hash  => {} } ),
                                ),
                                ::DISPATCH( $::Str, 'new', 'body' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp_stmts2' ) ) ),
                            ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'declarator' ) ) ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Str, 'new', '' ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ) ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Apply, 'new',
                            ::DISPATCH( $::Str, 'new', 'code' ) => ::DISPATCH(
                                $::Var, 'new', ::DISPATCH( $::Str, 'new', 'sigil' ) => ::DISPATCH( $::Str, 'new', '&' ),
                                ::DISPATCH( $::Str, 'new', 'twigil' ) => ::DISPATCH( $::Str, 'new', '' ),
                                ::DISPATCH( $::Str, 'new', 'name' )   => ::DISPATCH( $::Str, 'new', 'ternary:<?? !!>' ),
                                ::DISPATCH( $::Str, 'new', 'namespace' ) => ::DISPATCH( $::Array, "new", { _array => [] } ),
                            ),
                            ::DISPATCH( $::Str, 'new', 'arguments' ) => ::DISPATCH(
                                $::Array, "new",
                                {   _array => [
                                        ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'term_meth' ) ) ),
                                        ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ) ),
                                        ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp2' ) ) )
                                    ]
                                }
                            ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    ::DISPATCH( $GLOBAL::Code_say, 'APPLY', ::DISPATCH( $::Str, 'new', '*** Syntax error in ternary operation' ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Apply, 'new',
                            ::DISPATCH( $::Str, 'new', 'code' ) => ::DISPATCH(
                                $::Var, 'new',
                                ::DISPATCH( $::Str, 'new', 'sigil' )  => ::DISPATCH( $::Str, 'new', '&' ),
                                ::DISPATCH( $::Str, 'new', 'twigil' ) => ::DISPATCH( $::Str, 'new', '' ),
                                ::DISPATCH( $::Str, 'new', 'name' )   => ::DISPATCH(
                                    $GLOBAL::Code_infix_58__60__126__62_, 'APPLY',
                                    ::DISPATCH( $::Str, 'new', 'infix:<' ), ::DISPATCH( $GLOBAL::Code_infix_58__60__126__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'infix_op' ) ), ::DISPATCH( $::Str, 'new', '>' ) )
                                ),
                                ::DISPATCH( $::Str, 'new', 'namespace' ) => ::DISPATCH( $::Array, "new", { _array => [] } ),
                            ),
                            ::DISPATCH( $::Str, 'new', 'arguments' ) => ::DISPATCH(
                                $::Array, "new",
                                {   _array => [
                                        ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'term_meth' ) ) ),
                                        ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ) )
                                    ]
                                }
                            ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $bind;
                    $bind = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$bind' } ) unless defined $bind;
                    BEGIN { $bind = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$bind' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($bind);
                        $bind = ::DISPATCH(
                            $::Bind, 'new', ::DISPATCH( $::Str, 'new', 'parameters' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'term_meth' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'arguments' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ) ),
                        );
                    };
                    ::DISPATCH( $COMPILER::Code_begin_block, 'APPLY', $bind );
                    return ($bind);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Bind, 'new', ::DISPATCH( $::Str, 'new', 'parameters' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'term_meth' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'arguments' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ) ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Assign, 'new', ::DISPATCH( $::Str, 'new', 'parameters' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'term_meth' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'arguments' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ) ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'term_meth' ) ) ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ) ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Str, 'new', 'postcircumfix:<( )>' ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Call, 'new',
                            ::DISPATCH( $::Str, 'new', 'invocant' ) =>
                                ::DISPATCH( $::Proto, 'new', ::DISPATCH( $::Str, 'new', 'name' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__126__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ) ), ),
                            ::DISPATCH( $::Str, 'new', 'method' )    => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'arguments' ) => $::Undef,
                            ::DISPATCH( $::Str, 'new', 'hyper' )     => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'hyper_op' ) ) ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Call, 'new',
                            ::DISPATCH( $::Str, 'new', 'invocant' ) =>
                                ::DISPATCH( $::Proto, 'new', ::DISPATCH( $::Str, 'new', 'name' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__126__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ) ), ),
                            ::DISPATCH( $::Str, 'new', 'method' )    => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'arguments' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp_parameter_list' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'hyper' )     => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'hyper_op' ) ) ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Call, 'new', ::DISPATCH( $::Str, 'new', 'invocant' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'term' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'method' )    => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'opt_ident' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'arguments' ) => $::Undef,
                            ::DISPATCH( $::Str, 'new', 'hyper' )     => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'hyper_op' ) ) ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Call, 'new', ::DISPATCH( $::Str, 'new', 'invocant' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'term' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'method' )    => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'opt_ident' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'arguments' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp_parameter_list' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'hyper' )     => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'hyper_op' ) ) ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Index, 'new', ::DISPATCH( $::Str, 'new', 'obj' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'term' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'index' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ) ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Lookup, 'new', ::DISPATCH( $::Str, 'new', 'obj' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'term' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'index' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ) ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Lookup, 'new', ::DISPATCH( $::Str, 'new', 'obj' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'term' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'index' ) =>
                                ::DISPATCH( $::Val::Buf, 'new', ::DISPATCH( $::Str, 'new', 'buf' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__126__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'angle_quoted' ) ) ), ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'term' ) ) ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ) ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Str, 'new', '' ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Int, 'new', 1 ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Int, 'new', 0 ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Var, 'new', ::DISPATCH( $::Str, 'new', 'sigil' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__126__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'sigil' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'twigil' )    => ::DISPATCH( $GLOBAL::Code_prefix_58__60__126__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'twigil' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'name' )      => ::DISPATCH( $GLOBAL::Code_prefix_58__60__126__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'namespace' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_,  'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'namespace' ) ) ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Var, 'new', ::DISPATCH( $::Str, 'new', 'sigil' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__126__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'sigil' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'twigil' ) => ::DISPATCH( $::Str, 'new', '' ),
                            ::DISPATCH( $::Str, 'new', 'name' )   => ::DISPATCH( $::Str, 'new', '/' ),
                            ::DISPATCH( $::Str, 'new', 'namespace' ) => ::DISPATCH( $::Array, "new", { _array => [] } ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $COMPILER::Code_get_var,
                            'APPLY',
                            ::DISPATCH(
                                $::Var, 'new', ::DISPATCH( $::Str, 'new', 'sigil' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__126__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'sigil' ) ) ),
                                ::DISPATCH( $::Str, 'new', 'twigil' )    => ::DISPATCH( $GLOBAL::Code_prefix_58__60__126__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'twigil' ) ) ),
                                ::DISPATCH( $::Str, 'new', 'name' )      => ::DISPATCH( $GLOBAL::Code_prefix_58__60__126__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ) ),
                                ::DISPATCH( $::Str, 'new', 'namespace' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_,  'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'namespace' ) ) ),
                            )
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'val_undef' ) ) ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'val_int' ) ) ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'val_bit' ) ) ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'val_num' ) ) ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'val_buf' ) ) ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Val::Bit, 'new', ::DISPATCH( $::Str, 'new', 'bit' ) => ::DISPATCH( $::Int, 'new', 1 ), ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Val::Bit, 'new', ::DISPATCH( $::Str, 'new', 'bit' ) => ::DISPATCH( $::Int, 'new', 0 ), ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Val::Undef, 'new', ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Str, 'new', 'TODO: val_num' ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Val::Int, 'new', ::DISPATCH( $::Str, 'new', 'int' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__126__62_, 'APPLY', $MATCH ), ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Array, "new",
                            {   _array => [
                                    ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ) ),
                                    ::DISPATCH( $GLOBAL::Code_prefix_58__60__64__62_, 'APPLY', ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp_seq' ) ) ) )
                                ]
                            }
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Array, "new", { _array => [ ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ) ) ] } ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Array, "new", { _array => [] } ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'lit_object' ) ) ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Str, 'new', 'TODO: lit_seq' ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Str, 'new', 'TODO: lit_array' ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Str, 'new', 'TODO: lit_hash' ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $::Str, 'new', 'TODO - Lit::Code' ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Lit::Object, 'new', ::DISPATCH( $::Str, 'new', 'class' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'fields' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp_mapping' ) ) ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    ::DISPATCH(
                        $GLOBAL::Code_say, 'APPLY',
                        ::DISPATCH( $::Str, 'new', '*** Syntax Error parsing Constructor ' ),
                        ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ) )
                    );
                    ::DISPATCH( $GLOBAL::Code_die, 'APPLY', );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Call, 'new', ::DISPATCH( $::Str, 'new', 'invocant' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'method' )    => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'arguments' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp_parameter_list' ) ) ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Apply, 'new',
                            ::DISPATCH( $::Str, 'new', 'code' ) => ::DISPATCH(
                                $COMPILER::Code_get_var,
                                'APPLY',
                                ::DISPATCH(
                                    $::Var, 'new', ::DISPATCH( $::Str, 'new', 'sigil' ) => ::DISPATCH( $::Str, 'new', '&' ),
                                    ::DISPATCH( $::Str, 'new', 'twigil' ) => ::DISPATCH( $::Str, 'new', '' ),
                                    ::DISPATCH( $::Str, 'new', 'name' )      => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ) ),
                                    ::DISPATCH( $::Str, 'new', 'namespace' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'namespace' ) ) ),
                                )
                            ),
                            ::DISPATCH( $::Str, 'new', 'arguments' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp_parameter_list' ) ) ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Apply, 'new',
                            ::DISPATCH( $::Str, 'new', 'code' ) => ::DISPATCH(
                                $COMPILER::Code_get_var,
                                'APPLY',
                                ::DISPATCH(
                                    $::Var, 'new', ::DISPATCH( $::Str, 'new', 'sigil' ) => ::DISPATCH( $::Str, 'new', '&' ),
                                    ::DISPATCH( $::Str, 'new', 'twigil' ) => ::DISPATCH( $::Str, 'new', '' ),
                                    ::DISPATCH( $::Str, 'new', 'name' )      => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ) ),
                                    ::DISPATCH( $::Str, 'new', 'namespace' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'namespace' ) ) ),
                                )
                            ),
                            ::DISPATCH( $::Str, 'new', 'arguments' ) => ::DISPATCH( $::Array, "new", { _array => [] } ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'var' ) ) ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ($::Undef);
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Capture, 'new', ::DISPATCH( $::Str, 'new', 'invocant' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'array' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp_parameter_list' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'hash' )  => ::DISPATCH( $::Array,                             "new",   { _array            => [] } ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Capture, 'new', ::DISPATCH( $::Str, 'new', 'invocant' ) => $::Undef,
                            ::DISPATCH( $::Str, 'new', 'array' ) => ::DISPATCH( $::Array, "new", { _array => [] } ),
                            ::DISPATCH( $::Str, 'new', 'hash' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp_mapping' ) ) ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Sig, 'new', ::DISPATCH( $::Str, 'new', 'invocant' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'invocant' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'positional' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp_seq' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'named' )      => ::DISPATCH( $::Hash,                              "new",   { _hash             => {} } ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    ::DISPATCH( $COMPILER::Code_add_pad, 'APPLY', );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    ::DISPATCH(
                        $GLOBAL::Code_say, 'APPLY',
                        ::DISPATCH( $::Str,               'new', '*** Syntax Error in subset \\\'' ),
                        ::DISPATCH( $Code_get_class_name, 'APPLY', ),
                        ::DISPATCH( $::Str,               'new', '.' ),
                        ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'name' ) ) ),
                        ::DISPATCH( $::Str,                               'new',   '\\\' near pos=' ),
                        ::DISPATCH( $MATCH,                               'to', )
                    );
                    ::DISPATCH( $GLOBAL::Code_die, 'APPLY', ::DISPATCH( $::Str, 'new', 'error in Block' ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $env;
                    $env = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$env' } ) unless defined $env;
                    BEGIN { $env = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$env' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($env);
                        $env = ::DISPATCH( $COMPILER::List_PAD, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    ::DISPATCH( $COMPILER::Code_drop_pad, 'APPLY', );
                    return (
                        ::DISPATCH(
                            $::Subset,
                            'new',
                            ::DISPATCH( $::Str, 'new', 'name' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'full_ident' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'base_class' ) =>
                                ::DISPATCH( $::Proto, 'new', ::DISPATCH( $::Str, 'new', 'name' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'base_class' ) ) ), ),
                            ::DISPATCH( $::Str,       'new', 'block' )           => ::DISPATCH(
                                $::Sub, 'new',
                                ::DISPATCH( $::Str, 'new', 'name' )  => $::Undef,
                                ::DISPATCH( $::Str, 'new', 'block' ) => ::DISPATCH(
                                    $::Lit::Code,
                                    'new',
                                    ::DISPATCH( $::Str, 'new', 'pad' ) => $env,
                                    ::DISPATCH( $::Str, 'new', 'state' ) => ::DISPATCH( $::Hash, "new", { _hash => {} } ),
                                    ::DISPATCH( $::Str, 'new', 'sig' )   => ::DISPATCH(
                                        $::Sig, 'new', ::DISPATCH( $::Str, 'new', 'invocant' ) => $::Undef,
                                        ::DISPATCH( $::Str, 'new', 'positional' ) => ::DISPATCH( $::Array, "new", { _array => [] } ),
                                        ::DISPATCH( $::Str, 'new', 'named' )      => ::DISPATCH( $::Hash,  "new", { _hash  => {} } ),
                                    ),
                                    ::DISPATCH( $::Str, 'new', 'body' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp_stmts' ) ) ),
                                ),
                            ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    ::DISPATCH( $COMPILER::Code_add_pad, 'APPLY', );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    ::DISPATCH(
                        $GLOBAL::Code_say, 'APPLY',
                        ::DISPATCH( $::Str,               'new', '*** Syntax Error in method \\\'' ),
                        ::DISPATCH( $Code_get_class_name, 'APPLY', ),
                        ::DISPATCH( $::Str,               'new', '.' ),
                        ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'name' ) ) ),
                        ::DISPATCH( $::Str,                               'new',   '\\\' near pos=' ),
                        ::DISPATCH( $MATCH,                               'to', )
                    );
                    ::DISPATCH( $GLOBAL::Code_die, 'APPLY', ::DISPATCH( $::Str, 'new', 'error in Block' ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $env;
                    $env = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$env' } ) unless defined $env;
                    BEGIN { $env = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$env' } ) }
                    my $block;
                    $block = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$block' } ) unless defined $block;
                    BEGIN { $block = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$block' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($env);
                        $env = ::DISPATCH( $COMPILER::List_PAD, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    do {
                        ::MODIFIED($block);
                        $block = ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp_stmts' ) ) );
                    };
                    ::DISPATCH( $KindaPerl6::Grammar::Code_declare_parameters, 'APPLY', $env, $block, ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'method_sig' ) ) ) );
                    ::DISPATCH( $COMPILER::Code_drop_pad, 'APPLY', );
                    return (
                        ::DISPATCH(
                            $::Method,
                            'new',
                            ::DISPATCH( $::Str, 'new', 'name' )  => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'opt_name' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'block' ) => ::DISPATCH(
                                $::Lit::Code, 'new', ::DISPATCH( $::Str, 'new', 'pad' ) => $env,
                                ::DISPATCH( $::Str, 'new', 'state' ) => ::DISPATCH( $::Hash, "new", { _hash => {} } ),
                                ::DISPATCH( $::Str, 'new', 'sig' )  => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'method_sig' ) ) ),
                                ::DISPATCH( $::Str, 'new', 'body' ) => $block,
                            ),
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    ::DISPATCH( $COMPILER::Code_add_pad, 'APPLY', );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    ::DISPATCH( $GLOBAL::Code_say, 'APPLY', ::DISPATCH( $::Str, 'new', '*** Syntax Error in BEGIN near pos=' ), ::DISPATCH( $MATCH, 'to', ) );
                    ::DISPATCH( $GLOBAL::Code_die, 'APPLY', ::DISPATCH( $::Str, 'new', 'error in Block' ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    my $env;
                    $env = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$env' } ) unless defined $env;
                    BEGIN { $env = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$env' } ) }
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    do {
                        ::MODIFIED($env);
                        $env = ::DISPATCH( $COMPILER::List_PAD, 'INDEX', ::DISPATCH( $::Int, 'new', 0 ) );
                    };
                    ::DISPATCH( $COMPILER::Code_drop_pad, 'APPLY', );
                    return (
                        ::DISPATCH(
                            $COMPILER::Code_begin_block,
                            'APPLY',
                            ::DISPATCH(
                                $::Lit::Code,
                                'new',
                                ::DISPATCH( $::Str, 'new', 'pad' ) => $env,
                                ::DISPATCH( $::Str, 'new', 'state' ) => ::DISPATCH( $::Hash, "new", { _hash => {} } ),
                                ::DISPATCH( $::Str, 'new', 'sig' )   => ::DISPATCH(
                                    $::Sig, 'new', ::DISPATCH( $::Str, 'new', 'invocant' ) => $::Undef,
                                    ::DISPATCH( $::Str, 'new', 'positional' ) => ::DISPATCH( $::Array, "new", { _array => [] } ),
                                    ::DISPATCH( $::Str, 'new', 'named' )      => ::DISPATCH( $::Hash,  "new", { _hash  => {} } ),
                                ),
                                ::DISPATCH( $::Str, 'new', 'body' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp_stmts' ) ) ),
                            )
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    ::DISPATCH( $GLOBAL::Code_say, 'APPLY', ::DISPATCH( $::Str, 'new', '*** Syntax Error in CHECK block' ) );
                    ::DISPATCH( $GLOBAL::Code_die, 'APPLY', ::DISPATCH( $::Str, 'new', 'error in Block' ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return ( ::DISPATCH( $COMPILER::Code_check_block, 'APPLY', ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'exp_stmts' ) ) ) ) );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Token, 'new', ::DISPATCH( $::Str, 'new', 'name' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__126__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'opt_name' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'regex' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KindaPerl6::Grammar::Regex.rule' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'sym' )   => $::Undef,
                        )
                    );
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', '__rule_block5d88dc416ec0e1fe22013bb1cd40cc23' ),
            ::DISPATCH(
                $::Method,
                'new',
                sub {
                    $self = shift;
                    my $CAPTURE;
                    $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                    BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                    ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                    do {
                        ::MODIFIED($List__);
                        $List__ = ::DISPATCH( $CAPTURE, 'array', );
                    };
                    do {
                        ::MODIFIED($Hash__);
                        $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                    };
                    return (
                        ::DISPATCH(
                            $::Token, 'new', ::DISPATCH( $::Str, 'new', 'name' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__126__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'ident' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'regex' ) => ::DISPATCH( $GLOBAL::Code_prefix_58__60__36__62_,  'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'KindaPerl6::Grammar::Regex.rule' ) ) ),
                            ::DISPATCH( $::Str, 'new', 'sym' )   => ::DISPATCH( $GLOBAL::Code_prefix_58__60__126__62_, 'APPLY', ::DISPATCH( $MATCH, 'LOOKUP', ::DISPATCH( $::Str, 'new', 'angle_quoted' ) ) ),
                        )
                    );
                }
            )
        );
        use KindaPerl6::Grammar::Regex;
        use KindaPerl6::Grammar::Mapping;
        use KindaPerl6::Grammar::Control;
        use KindaPerl6::Grammar::Parameters;
        use KindaPerl6::Grammar::Term;
        use KindaPerl6::Grammar::Statements;
        use KindaPerl6::Grammar::Quote;
        use KindaPerl6::Grammar::Sub;
        use KindaPerl6::Grammar::Token;
        $Class_name;
        do {
            ::MODIFIED($Code_get_class_name);
            $Code_get_class_name = ::DISPATCH(
                $::Code, 'new',
                {   code => sub {
                        my $List__ = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List__' } );
                        my $CAPTURE;
                        $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) unless defined $CAPTURE;
                        BEGIN { $CAPTURE = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$CAPTURE' } ) }
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        do {
                            ::MODIFIED($List__);
                            $List__ = ::DISPATCH( $CAPTURE, 'array', );
                        };
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        $Class_name;
                    },
                    signature => ::DISPATCH( $::Signature, "new", { invocant => $::Undef, array => ::DISPATCH( $::Array, "new", { _array => [] } ), hash => ::DISPATCH( $::Hash, "new", { _hash => {} } ), return => $::Undef, } ),
                }
            );
            }
    };
    1
}
