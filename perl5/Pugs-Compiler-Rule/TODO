TODO for Pugs::Compiler::Rule (PCR)

Priorities:

- Match: .from and .to not implemented in subrules

- backtracking control ':'

- maybe use PadWalker for solving these problems:
  - simple closures should get the Match/self argument
  - $0, $1 should work inside the rule 

- grammar bug: '$var := (xxx)' should be: '$<var> := (xxx)'

- '%var := xxx'; '@var := xxx'; %<var> := ; @<var> :=

- rule parameters 

- :P5 rules

- the grammar may implement <...> and let a node parse the '...'

Related projects:

- implement (optional?) PCR in pugs

- use PCR in lrep
  - merge the 'dual engine' in PCR (used by the lrep-compiled grammar)

- implement Pugs::Compiler::PILN ?
  - not a priority - p5 could load ready-made YAML from Pugs

Other:

- move return blocks to a subroutine (started)

- add a hook for the closure compiler (such as pugs or a source filter)
  - cleanup any remaining source filtering

- document the '*name = $rule->code;' syntax (doc removed?)

- rule documentation (shorter than S05)
- examples of use

- incomplete rule syntax (see Pugs::Compiler::Rule pod)

- Switches - none so far - all rules have :p set (only match at start of 
  text) (see Pugs::Compiler::Rule workaround)

- there are 2 engines - the old lrep engine, which drives the rule parser,
  and the new engine, which is the user-side parser. The 2 steps should 
  use only the new engine.

- remove 'grammar1' namespace everywhere
- 'Pugs::Grammar::Rule::Lib' - old p5 code... -- 'use' in P:G:R

- namespace problems:
  - rules are compiled in the Pugs::Grammar::Rule namespace
  - user-defined rules are local to the current package
    and will need to be called with full-name (until fixed)
  - test user-defined subrules (there may be namespace problems)

- more tests (port from lrep)
  
- optimization: inline code in the Engine
