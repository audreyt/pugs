if(!Object.prototype.toJSONString){Array.prototype.toJSONString=function(C){var B=[],E,A=this.length,D;for(E=0;E<A;E+=1){D=this[E];switch(typeof D){case"object":if(D){if(typeof D.toJSONString==="function"){B.push(D.toJSONString(C))}}else{B.push("null")}break;case"string":case"number":case"boolean":B.push(D.toJSONString())}}return"["+B.join(",")+"]"};Boolean.prototype.toJSONString=function(){return String(this)};Date.prototype.toJSONString=function(){function A(B){return B<10?"0"+B:B}return"\""+this.getUTCFullYear()+"-"+A(this.getUTCMonth()+1)+"-"+A(this.getUTCDate())+"T"+A(this.getUTCHours())+":"+A(this.getUTCMinutes())+":"+A(this.getUTCSeconds())+"Z\""};Number.prototype.toJSONString=function(){return isFinite(this)?String(this):"null"};Object.prototype.toJSONString=function(B){var A=[],D,E,C;if(B){for(E=0;E<B.length;E+=1){D=B[E];if(typeof D==="string"){C=this[D];switch(typeof C){case"object":if(C){if(typeof C.toJSONString==="function"){A.push(D.toJSONString()+":"+C.toJSONString(B))}}else{A.push(D.toJSONString()+":null")}break;case"string":case"number":case"boolean":A.push(D.toJSONString()+":"+C.toJSONString())}}}}else{for(D in this){if(typeof D==="string"&&Object.prototype.hasOwnProperty.apply(this,[D])){C=this[D];switch(typeof C){case"object":if(C){if(typeof C.toJSONString==="function"){A.push(D.toJSONString()+":"+C.toJSONString())}}else{A.push(D.toJSONString()+":null")}break;case"string":case"number":case"boolean":A.push(D.toJSONString()+":"+C.toJSONString())}}}}return"{"+A.join(",")+"}"};(function(s){var m={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r","\"":"\\\"","\\":"\\\\"};s.parseJSON=function(filter){var j;function walk(k,v){var i;if(v&&typeof v==="object"){for(i in v){if(Object.prototype.hasOwnProperty.apply(v,[i])){v[i]=walk(i,v[i])}}}return filter(k,v)}if(/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/.test(this.replace(/\\./g,"@").replace(/"[^"\\\n\r]*"/g,""))){j=eval("("+this+")");return typeof filter==="function"?walk("",j):j}throw new SyntaxError("parseJSON")};s.toJSONString=function(){if(/["\\\x00-\x1f]/.test(this)){return"\""+this.replace(/[\x00-\x1f\\"]/g,function(a){var c=m[a];if(c){return c}c=a.charCodeAt();return"\\u00"+Math.floor(c/16).toString(16)+(c%16).toString(16)})+"\""}return"\""+this+"\""}})(String.prototype)}