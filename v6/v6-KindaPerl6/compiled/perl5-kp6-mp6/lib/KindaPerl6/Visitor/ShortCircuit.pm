# Do not edit this file - Generated by MiniPerl6
use v5;
use strict;
use MiniPerl6::Perl5::Runtime;
use MiniPerl6::Perl5::Match;

package KindaPerl6::Visitor::ShortCircuit;
sub new { shift; bless {@_}, "KindaPerl6::Visitor::ShortCircuit" }

sub visit {
    my $self   = shift;
    my $List__ = \@_;
    my $node;
    my $node_name;
    do { $node = $List__->[0]; $node_name = $List__->[1]; [ $node, $node_name ] };
    do {
        if ( ( ( $node_name eq 'Apply' ) && ( $node->code()->name() eq 'infix:<&&>' ) ) ) {
            COMPILER::add_pad();
            my $pad = $List_COMPILER::PAD->[0];
            COMPILER::drop_pad();
            return (
                Apply->new(
                    'code' => Var->new( 'name' => 'infix:<&&>', 'twigil' => '', 'sigil' => '&', 'namespace' => [], ),
                    'arguments' => [ Sub->new( 'block' => Lit::Code->new( 'pad' => $pad, 'body' => [ $node->arguments()->[0] ], 'sig' => Sig->new( 'positional' => [], 'named' => [], ), ), ) ],
                )
            );
        }
        else { }
    };
    return ( (undef) );
}

1;
