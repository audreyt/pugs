Feel free to use wikipedia Talk style if you know it.

== Purpose ==

This directory was created to address these problems:
 - No one knows what the current state of the project is.
 - It is difficult to determine what people are working on.
 - No one knows what needs to be done.
 - No one knows how they can help.
 - No one knows where we are going, or how we are to get there.
Perhaps this is a slight overstatement.  But only a slight one.

The project management approach of pugs has been anarchistic
development.  A flooding algorithm for planning (everyone working on
whatever development path/aspects appeals to them); active and rapid
development; continuous communication; and a low commit threshold
("don't worry about breaking the build, just commit, and we'll fix
it").  This approach worked well when development was rapid, there
was a clear primary development thrust, and an active community with
an up to date and detailed organizational memory.

For several reasons (we haven't been able to pay audreyt to work full
time being a key one), the main thrust has slowed, the overall pace of
development has slowed, and the community has become smaller, less
active, and less tightly informed.  This created negative feedback.
It became harder to tell what to work on, easier to get stuck, and
harder to be motivated.  Thus further slowing development and
shrinking the active community.

I created this directory to increase project transparency.  To make it
easier for people to see what needs doing, and why.  This is not a
full solution, but will hopefully mitigate the negative feedback loop,
helping us make less slow progress until things pick up again.

-- putter 2007-01-20


== Fix PIL2JS ==

PIL2JS is currently broken.
It is our second most complete implementation of p6, after pugs.

$ ./pugs -Bjs -e 'say 3;'
$
No output.
"make test-js" fails similarly.

<audreyt> the problem is that JS.pm needs to accomodate statement:cond form
  which unlike the :if form, takes two arguments as full closures instead of blocks
  and so will need to do the pil2js equiv of closure apply .()
  I'm checking in something that doesn't do the .() -- it's 7am here [...]

See r15128.
perl5/PIL2JS/lib/Prelude/JS.pm
  register "&statement_control:cond" => sub {...

-- putter 2007-01-22


== Integrating KP6 with the test suite ==

It would be nice to run the test suite against kp6.
It is easy, and will help make it obvious what is and is not working.
:Counter argument: it will only show nothing is working, and is thus
 uninteresting.  I expect only 01-sanity/01-tap.t will pass, as
 variable assignment doesn't work yet.  -- putter 2007-01-22
::But keeping an eye on that, and motivating improvement, is exactly
  what the testing is for.  *Everything* which is a p6 implementation
  should be able to run the test suite, no?  -- putter 2007-01-22

* Create a friendlier "program api" to kp6.
  It currently spits p5 on stdout.
  * Create a run-kp6.pl analogous to mp6's run-mp6.pl.
* Make ./pugs -Bkp6 call run-kp6.pl.
  src/Pugs.hs.  Perhaps follow the js code there.
  Hopefully only one or two lines will be needed.
* Add a test-kp6 target in Makefile.PL.
* Make smoke work.
  * Add a smoke-kp6 target in Makefile.PL.
  * Tell util/run-smoke.pl about kp6.
    Just a $ENV{HARNESS_PERL} modification like the other ones there.

-- putter 2007-01-21

