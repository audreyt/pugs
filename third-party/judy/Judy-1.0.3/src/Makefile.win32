# This file is provided for Windows users

# Set Compiler
CC = D:\ghc\ghc-6.4.2\gcc.exe

# Set Optimization
# COPT = '-O'
COPT = -ID:\ghc\ghc-6.4.2\include\mingw -ID:\ghc\ghc-6.4.2\gcc-lib\include \
	-BD:\ghc\ghc-6.4.2\gcc-lib

# Set Shared library option
# CPIC = -fPIC
CPIC = 

CP_F = perl -MExtUtils::Command -e cp
RM_F = perl -MExtUtils::Command -e rm_f

OBJS =	JudyCommon\JudyMalloc.o \
	JudyHS\JudyHS.o \
	JudyL\JudyLTables.o \
	JudyL\JudyLGet.o \
	JudyL\j__udyLGet.o \
	JudyL\JudyLIns.o \
	JudyL\JudyLInsArray.o \
	JudyL\JudyLDel.o \
	JudyL\JudyLFirst.o \
	JudyL\JudyLNext.o \
	JudyL\JudyLPrev.o \
	JudyL\JudyLNextEmpty.o \
	JudyL\JudyLPrevEmpty.o \
	JudyL\JudyLCount.o \
	JudyL\JudyLByCount.o \
	JudyL\JudyLFreeArray.o \
	JudyL\JudyLMemUsed.o \
	JudyL\JudyLMemActive.o \
	JudyL\JudyLCascade.o \
	JudyL\JudyLDecascade.o \
	JudyL\JudyLCreateBranch.o \
	JudyL\JudyLInsertBranch.o \
	JudyL\JudyLMallocIF.o \
	JudySL\JudySL.o \
	Judy1\Judy1Tables.o \
	Judy1\Judy1Test.o \
	Judy1\j__udy1Test.o \
	Judy1\Judy1Set.o \
	Judy1\Judy1SetArray.o \
	Judy1\Judy1Unset.o \
	Judy1\Judy1First.o \
	Judy1\Judy1Next.o \
	Judy1\Judy1Prev.o \
	Judy1\Judy1NextEmpty.o \
	Judy1\Judy1PrevEmpty.o \
	Judy1\Judy1Count.o \
	Judy1\Judy1ByCount.o \
	Judy1\Judy1FreeArray.o \
	Judy1\Judy1MemUsed.o \
	Judy1\Judy1MemActive.o \
	Judy1\Judy1Cascade.o \
	Judy1\Judy1Decascade.o \
	Judy1\Judy1CreateBranch.o \
	Judy1\Judy1InsertBranch.o \
	Judy1\Judy1MallocIF.o \

all: $(OBJS)

JudyCommon\JudyMalloc.o: JudyCommon\JudyMalloc.c
	cd JudyCommon && $(CC)  $(COPT) $(CPIC) -I. -I.. -c JudyMalloc.c

# Give Judy1 the proper names

Judy1\Judy1ByCount.c: JudyCommon\JudyByCount.c
	$(CP_F) JudyCommon\JudyByCount.c Judy1\Judy1ByCount.c

Judy1\Judy1Cascade.c: JudyCommon\JudyCascade.c
	$(CP_F) JudyCommon\JudyCascade.c Judy1\Judy1Cascade.c

Judy1\Judy1Count.c: JudyCommon\JudyCount.c
	$(CP_F) JudyCommon\JudyCount.c Judy1\Judy1Count.c

Judy1\Judy1CreateBranch.c: JudyCommon\JudyCreateBranch.c
	$(CP_F) JudyCommon\JudyCreateBranch.c Judy1\Judy1CreateBranch.c

Judy1\Judy1Decascade.c: JudyCommon\JudyDecascade.c
	$(CP_F) JudyCommon\JudyDecascade.c Judy1\Judy1Decascade.c

Judy1\Judy1Unset.c: JudyCommon\JudyDel.c
	$(CP_F) JudyCommon\JudyDel.c Judy1\Judy1Unset.c

Judy1\Judy1First.c: JudyCommon\JudyFirst.c
	$(CP_F) JudyCommon\JudyFirst.c Judy1\Judy1First.c

Judy1\Judy1FreeArray.c: JudyCommon\JudyFreeArray.c
	$(CP_F) JudyCommon\JudyFreeArray.c Judy1\Judy1FreeArray.c

Judy1\Judy1Test.c: JudyCommon\JudyGet.c
	$(CP_F) JudyCommon\JudyGet.c Judy1\Judy1Test.c

Judy1\j__udy1Test.c: JudyCommon\JudyGet.c
	$(CP_F) JudyCommon\JudyGet.c Judy1\j__udy1Test.c

Judy1\Judy1SetArray.c: JudyCommon\JudyInsArray.c
	$(CP_F) JudyCommon\JudyInsArray.c Judy1\Judy1SetArray.c

Judy1\Judy1Set.c: JudyCommon\JudyIns.c
	$(CP_F) JudyCommon\JudyIns.c Judy1\Judy1Set.c

Judy1\Judy1InsertBranch.c: JudyCommon\JudyInsertBranch.c
	$(CP_F) JudyCommon\JudyInsertBranch.c Judy1\Judy1InsertBranch.c

Judy1\Judy1MallocIF.c: JudyCommon\JudyMallocIF.c
	$(CP_F) JudyCommon\JudyMallocIF.c Judy1\Judy1MallocIF.c

Judy1\Judy1MemActive.c: JudyCommon\JudyMemActive.c
	$(CP_F) JudyCommon\JudyMemActive.c Judy1\Judy1MemActive.c

Judy1\Judy1MemUsed.c: JudyCommon\JudyMemUsed.c
	$(CP_F) JudyCommon\JudyMemUsed.c Judy1\Judy1MemUsed.c

Judy1\Judy1Next.c: JudyCommon\JudyPrevNext.c
	$(CP_F) JudyCommon\JudyPrevNext.c Judy1\Judy1Next.c

Judy1\Judy1Prev.c: JudyCommon\JudyPrevNext.c
	$(CP_F) JudyCommon\JudyPrevNext.c Judy1\Judy1Prev.c

Judy1\Judy1NextEmpty.c: JudyCommon\JudyPrevNextEmpty.c
	$(CP_F) JudyCommon\JudyPrevNextEmpty.c Judy1\Judy1NextEmpty.c

Judy1\Judy1PrevEmpty.c: JudyCommon\JudyPrevNextEmpty.c
	$(CP_F) JudyCommon\JudyPrevNextEmpty.c Judy1\Judy1PrevEmpty.c

Judy1\Judy1TablesGen.c: JudyCommon\JudyTables.c
	$(CP_F) JudyCommon\JudyTables.c Judy1\Judy1TablesGen.c

# This table is constructed from Judy1.h data to match malloc(3) needs

Judy1\Judy1TablesGen.exe: Judy1\Judy1TablesGen.c
	$(CC) $(COPT) -IJudy1 -I. -IJudyCommon -DJUDY1 Judy1\Judy1TablesGen.c \
		-o Judy1\Judy1TablesGen

Judy1\Judy1Tables.c: Judy1\Judy1TablesGen.exe
	cd Judy1 && Judy1TablesGen.exe

Judy1\Judy1Tables.o: Judy1\Judy1Tables.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c \
		-DJUDY1 Judy1Tables.c

# Compile the main line Judy1 modules

Judy1\Judy1Test.o: Judy1\Judy1Test.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 Judy1Test.c

Judy1\j__udy1Test.o: Judy1\j__udy1Test.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 -DJUDYGETINLINE j__udy1Test.c

Judy1\Judy1Set.o: Judy1\Judy1Set.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 Judy1Set.c

Judy1\Judy1SetArray.o: Judy1\Judy1SetArray.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 Judy1SetArray.c

Judy1\Judy1Unset.o: Judy1\Judy1Unset.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 Judy1Unset.c

Judy1\Judy1First.o: Judy1\Judy1First.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 Judy1First.c

Judy1\Judy1Next.o: Judy1\Judy1Next.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 -DJUDYNEXT Judy1Next.c

Judy1\Judy1Prev.o: Judy1\Judy1Prev.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 -DJUDYPREV Judy1Prev.c

Judy1\Judy1NextEmpty.o: Judy1\Judy1NextEmpty.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 -DJUDYNEXT Judy1NextEmpty.c

Judy1\Judy1PrevEmpty.o: Judy1\Judy1PrevEmpty.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 -DJUDYPREV Judy1PrevEmpty.c

Judy1\Judy1Count.o: Judy1\Judy1Count.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 Judy1Count.c

Judy1\Judy1ByCount.o: Judy1\Judy1ByCount.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 -DNOSMARTJBB -DNOSMARTJBU -DNOSMARTJLB Judy1ByCount.c

Judy1\Judy1FreeArray.o: Judy1\Judy1FreeArray.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 Judy1FreeArray.c

Judy1\Judy1MemUsed.o: Judy1\Judy1MemUsed.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 Judy1MemUsed.c

Judy1\Judy1MemActive.o: Judy1\Judy1MemActive.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 Judy1MemActive.c

Judy1\Judy1Cascade.o: Judy1\Judy1Cascade.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 Judy1Cascade.c

Judy1\Judy1Decascade.o: Judy1\Judy1Decascade.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 Judy1Decascade.c

Judy1\Judy1CreateBranch.o: Judy1\Judy1CreateBranch.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 Judy1CreateBranch.c

Judy1\Judy1InsertBranch.o: Judy1\Judy1InsertBranch.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 Judy1InsertBranch.c

Judy1\Judy1MallocIF.o: Judy1\Judy1MallocIF.c
	cd Judy1 && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDY1 Judy1MallocIF.c

# Give JudyL the proper names

JudyL\JudyLByCount.c: JudyCommon\JudyByCount.c
	$(CP_F) JudyCommon\JudyByCount.c JudyL\JudyLByCount.c

JudyL\JudyLCascade.c: JudyCommon\JudyCascade.c
	$(CP_F) JudyCommon\JudyCascade.c JudyL\JudyLCascade.c

JudyL\JudyLCount.c: JudyCommon\JudyCount.c
	$(CP_F) JudyCommon\JudyCount.c JudyL\JudyLCount.c

JudyL\JudyLCreateBranch.c: JudyCommon\JudyCreateBranch.c
	$(CP_F) JudyCommon\JudyCreateBranch.c JudyL\JudyLCreateBranch.c

JudyL\JudyLDecascade.c: JudyCommon\JudyDecascade.c
	$(CP_F) JudyCommon\JudyDecascade.c JudyL\JudyLDecascade.c

JudyL\JudyLDel.c: JudyCommon\JudyDel.c
	$(CP_F) JudyCommon\JudyDel.c JudyL\JudyLDel.c

JudyL\JudyLFirst.c: JudyCommon\JudyFirst.c
	$(CP_F) JudyCommon\JudyFirst.c JudyL\JudyLFirst.c

JudyL\JudyLFreeArray.c: JudyCommon\JudyFreeArray.c
	$(CP_F) JudyCommon\JudyFreeArray.c JudyL\JudyLFreeArray.c

JudyL\JudyLGet.c: JudyCommon\JudyGet.c
	$(CP_F) JudyCommon\JudyGet.c JudyL\JudyLGet.c

JudyL\j__udyLGet.c: JudyCommon\JudyGet.c
	$(CP_F) JudyCommon\JudyGet.c JudyL\j__udyLGet.c

JudyL\JudyLInsArray.c: JudyCommon\JudyInsArray.c
	$(CP_F) JudyCommon\JudyInsArray.c JudyL\JudyLInsArray.c

JudyL\JudyLIns.c: JudyCommon\JudyIns.c
	$(CP_F) JudyCommon\JudyIns.c JudyL\JudyLIns.c

JudyL\JudyLInsertBranch.c: JudyCommon\JudyInsertBranch.c
	$(CP_F) JudyCommon\JudyInsertBranch.c JudyL\JudyLInsertBranch.c

JudyL\JudyLMallocIF.c: JudyCommon\JudyMallocIF.c
	$(CP_F) JudyCommon\JudyMallocIF.c JudyL\JudyLMallocIF.c

JudyL\JudyLMemActive.c: JudyCommon\JudyMemActive.c
	$(CP_F) JudyCommon\JudyMemActive.c JudyL\JudyLMemActive.c

JudyL\JudyLMemUsed.c: JudyCommon\JudyMemUsed.c
	$(CP_F) JudyCommon\JudyMemUsed.c JudyL\JudyLMemUsed.c

JudyL\JudyLNext.c: JudyCommon\JudyPrevNext.c
	$(CP_F) JudyCommon\JudyPrevNext.c JudyL\JudyLNext.c

JudyL\JudyLPrev.c: JudyCommon\JudyPrevNext.c
	$(CP_F) JudyCommon\JudyPrevNext.c JudyL\JudyLPrev.c

JudyL\JudyLNextEmpty.c: JudyCommon\JudyPrevNextEmpty.c
	$(CP_F) JudyCommon\JudyPrevNextEmpty.c JudyL\JudyLNextEmpty.c

JudyL\JudyLPrevEmpty.c: JudyCommon\JudyPrevNextEmpty.c
	$(CP_F) JudyCommon\JudyPrevNextEmpty.c JudyL\JudyLPrevEmpty.c

JudyL\JudyLTablesGen.c: JudyCommon\JudyTables.c
	$(CP_F) JudyCommon\JudyTables.c JudyL\JudyLTablesGen.c

# This table is constructed from JudyL.h data to match malloc(3) needs

JudyL\JudyLTablesGen.exe: JudyL\JudyLTablesGen.c
	cd JudyL && $(CC) $(COPT) -I. -I.. -I..\JudyCommon -DJUDYL JudyLTablesGen.c \
		-o JudyLTablesGen

JudyL\JudyLTables.c: JudyL\JudyLTablesGen.exe
	cd JudyL && JudyLTablesGen.exe

JudyL\JudyLTables.o: JudyL\JudyLTables.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL \
		JudyLTables.c

# Compile the main line JudyL modules

JudyL\JudyLGet.o: JudyL\JudyLGet.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL JudyLGet.c

JudyL\j__udyLGet.o: JudyL\j__udyLGet.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL -DJUDYGETINLINE j__udyLGet.c

JudyL\JudyLIns.o: JudyL\JudyLIns.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL JudyLIns.c

JudyL\JudyLInsArray.o: JudyL\JudyLInsArray.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL JudyLInsArray.c

JudyL\JudyLDel.o: JudyL\JudyLDel.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL JudyLDel.c

JudyL\JudyLFirst.o: JudyL\JudyLFirst.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL JudyLFirst.c

JudyL\JudyLNext.o: JudyL\JudyLNext.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL -DJUDYNEXT JudyLNext.c

JudyL\JudyLPrev.o: JudyL\JudyLPrev.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL -DJUDYPREV JudyLPrev.c

JudyL\JudyLNextEmpty.o: JudyL\JudyLNextEmpty.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL -DJUDYNEXT JudyLNextEmpty.c

JudyL\JudyLPrevEmpty.o: JudyL\JudyLPrevEmpty.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL -DJUDYPREV JudyLPrevEmpty.c

JudyL\JudyLCount.o: JudyL\JudyLCount.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL JudyLCount.c

JudyL\JudyLByCount.o: JudyL\JudyLByCount.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL -DNOSMARTJBB -DNOSMARTJBU -DNOSMARTJLB JudyLByCount.c

JudyL\JudyLFreeArray.o: JudyL\JudyLFreeArray.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL JudyLFreeArray.c

JudyL\JudyLMemUsed.o: JudyL\JudyLMemUsed.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL JudyLMemUsed.c

JudyL\JudyLMemActive.o: JudyL\JudyLMemActive.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL JudyLMemActive.c

JudyL\JudyLCascade.o: JudyL\JudyLCascade.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL JudyLCascade.c

JudyL\JudyLDecascade.o: JudyL\JudyLDecascade.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL JudyLDecascade.c

JudyL\JudyLCreateBranch.o: JudyL\JudyLCreateBranch.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL JudyLCreateBranch.c

JudyL\JudyLInsertBranch.o: JudyL\JudyLInsertBranch.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL JudyLInsertBranch.c

JudyL\JudyLMallocIF.o: JudyL\JudyLMallocIF.c
	cd JudyL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c -DJUDYL JudyLMallocIF.c

# Compile the JudySL routine

JudySL\JudySL.o: JudySL\JudySL.c
	cd JudySL && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c JudySL.c

# Compile the JudyHS routine

JudyHS\JudyHS.o: JudyHS\JudyHS.c
	cd JudyHS && $(CC) $(COPT) $(CPIC) -I. -I.. -I..\JudyCommon -c JudyHS.c

clean:
	$(RM_F) $(OBJS) Judy1\Judy1TablesGen.exe
