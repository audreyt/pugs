# Do not edit this file - Generated by MiniPerl6
use v5;
use strict;
use MiniPerl6::Perl5::Runtime;
use MiniPerl6::Perl5::Match;

package KindaPerl6::Visitor::Emit::Perl5InlineToken;
sub new { shift; bless {@_}, "KindaPerl6::Visitor::Emit::Perl5InlineToken" }
use KindaPerl6::Visitor::Emit::Perl5;
use KindaPerl6::Visitor::Emit::TokenC;

sub visit {
    my $self   = shift;
    my $List__ = \@_;
    my $node;
    do { $node = $List__->[0]; [$node] };
    $node->emit_perl5_and_c();
}

package CompUnit;
sub new { shift; bless {@_}, "CompUnit" }

sub emit_perl5_and_c {
    my $self   = shift;
    my $List__ = \@_;
    do { [] };
    (
        '{package '
          . (
            $self->{name}
              . (
';use Inline C => Config,STRUCTS=>["match"];use Inline C => `cat "lib/KindaPerl6/Runtime/C/match.h"`.<<\'END\';'
                  . (
                    Main::newline()
                      . (
                        $self->emit_c()
                          . (
                            Main::newline()
                              . (
                                'END'
                                  . (
                                    Main::newline()
                                      . ( '}' . $self->emit_perl5() )
                                  )
                              )
                          )
                      )
                  )
              )
          )
    );
}

package Token;
sub new { shift; bless {@_}, "Token" }

sub emit_perl5 {
    my $self   = shift;
    my $List__ = \@_;
    do { [] };
    (
        '::DISPATCH(::DISPATCH($::'
          . (
            $KindaPerl6::Visitor::Emit::Perl5::current_compunit
              . (
                ',"HOW"),"add_method",::DISPATCH($::Str,"new",\''
                  . (
                    $self->{name}
                      . (
                        '\'),::DISPATCH($::Method,"new",sub {my $match = '
                          . (
                            Main::mangle_ident(
                                (
                                    $KindaPerl6::Visitor::Emit::Perl5::current_compunit
                                      . ( '::' . $self->{name} )
                                )
                              )
                              . '(GLOBAL::_str($_[1]),GLOBAL::_int($_[2]));::DISPATCH($::Match,"new",{match_str=>$_[1],bool=>::DISPATCH($::Bit,"new",$match->boolean),from=>::DISPATCH($::Int,"new",$match->from),to=>::DISPATCH($::Int,"new",$match->to)})}))'
                          )
                      )
                  )
              )
          )
    );
}

1;
