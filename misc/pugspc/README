==============================================================================
2008/02/11      Version 0.1.0 of pugspc
==============================================================================

NAME

This is pugspc, a Perl6-to-PIR compiler branched off from the main Pugs source.
I have removed (almost) all code that is not required for generating PIR and
brought the PIL1 compiler and PIR translator/emitter code up to date.

* Please read README-PUGS for general and copyright info

INSTALLATION

* You'll need ghc, the Glorious Glasgow Haskell Compiler, v6.8
* simply run ./build_pugspc or type ghc --make Main.hs -o pugspc
* the executable is pugspc

STATUS

The PIR backend is far less complete than the Pugs evaluation backend, all
help is very welcome. That said, it already compiles and runs quite a useful
subset of Perl 6, in particular most types of function calls. And it can compile
its own Prelude. See TODO for more info.

INFO

The PIR compilation strategy is as follows:

* Pugs uses Pugs.Lexer (a Parsec-based lexer) and Pugs.Parser to create an AST
(look at Pugs/AST/Internals for the AST datastructures)

* The AST is then compiled into PIL1 format using Pugs.Compile (see Pugs.PIL1 for the PIL1 datastructures)

* PIL1 is translated into PIR expressions (as defined in Emit.PIR) using the trans function in Pugs.CodeGen.PIR

* Finally, the emit function from Emit.PIR generates the actual PIR code. 
In practice, quite a bit of code is also generated in Pugs.CodeGen.PIR

AUTHOR
    Wim Vanderbauwhede (wim.vanderbauwhede@gmail.com)
    and all the other Pugs contributors
    
COPYRIGHT
    see README-PUGS and LICENSES


