comp_unit
CompUnit.new($m<statementlist>)

statement
*1*

expect_term
$m<noun>

integer
Val_Int.new(*text*)

subcall
Apply.new($m<subshortname>,$m<semilist>)

name
$m<ident>

statement_control:use
Use.new($m<module_name>)

module_name:depreciated
*text*

term:listop
Apply.new($m<ident>,[$m<arglist>])

quote:q
Val_Buf.new($m<text>)

quote:qq
Val_Buf.new($m<text>)

infix
Apply.new("infix:".*text*,[$m<left>,$m<right>])

# This was a quick experiment.  It's nowhere near close to working yet.
statement_control:if
If.new([$m<if_expr>,$m<if_block>,@{$m<elsif>}],$m<else>)

if__else
*1*

pblock
*1*

block
Block.new($m<statementlist>)
