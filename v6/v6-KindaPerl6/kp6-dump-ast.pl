package main;

use lib '../v6-MiniPerl6/lib5', 'lib5';
use strict;

BEGIN {
    $::_V6_COMPILER_NAME    = 'KindaPerl6';
    $::_V6_COMPILER_VERSION = '0.001';
}

use MiniPerl6::Perl5::Runtime;
use MiniPerl6::Perl5::Match;

package Main;
use KindaPerl6::Grammar;

use KindaPerl6::Traverse;
use KindaPerl6::Visitor::Perl;

use MiniPerl6::Grammar::Regex;
use MiniPerl6::Emitter::Token;

my $source = join('', <> );
my $pos = 0;

say( "# Generated by KindaPerl6" );

my $visitor = KindaPerl6::Visitor::Perl->new();

say( "[\n" );
while ( $pos < length( $source ) ) {
    #say( "Source code:", $source );
    my $p = MiniPerl6::Grammar->comp_unit($source, $pos);
    #say( Main::perl( $$p ) );
    say( join( ",\n", (map { $_->emit( $visitor ) } ($$p) )));
    #say( $p->to, " -- ", length($source) );
    say( "," );
    $pos = $p->to;
}
say( "]\n" );
