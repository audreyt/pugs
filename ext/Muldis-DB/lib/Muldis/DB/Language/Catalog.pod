=pod

=encoding utf8

=head1 NAME

Muldis::DB::Language::Catalog -
The system catalog or meta-model of Muldis D

=head1 PREFACE

This document is part of the Muldis D language specification, whose root
document is L<Muldis::DB::Language>; you should read that root document
before you read this one, which provides subservient details.

=head1 DESCRIPTION

I<This documentation is pending.>

=head1 CATALOGS

The Muldis::DB catalog relcons and relvars collectively reflect and/or
control all entities in a DBMS.  Given that the catalog provides complete
descriptions of both the interface and implementation of each DBMS entity,
for user-defined entities, and just the interface for system-defined
entities, understanding these is akin to understanding the native grammar
of Muldis D.  This grammar is extremely simple by intention, but at a cost
of being a little more verbose.

Muldis D has closely corresponding representations between its 3 main
variants, which are catalog relations (what routines inside the DBMS see),
hierarchical AST nodes (what the application driving the DBMS typically
sees, ala L<Muldis::DB::AST>), and string-form Muldis D code that users
interacting with Muldis::DB via a shell interface would use.  The
string-form would be parsed into the AST, and the AST be flattened into the
relations; similarly, the relations can be unflattened into the AST, and
string-form code be generated from the AST if desired.

Third-party wrappers over Muldis::DB can provide additional interfaces for
their users, such as a SQL DBMS emulator, and they take care of parsing or
remapping that to Muldis D, most commonly its AST variant.

=head2 Catalog Relcons For System-Defined Entities

This section describes the structure of all C<< cont.sys.<unq_name> >>
catalog relcons, which themselves describe all system-defined DBMS entities
in a computer-readable manner.

I<This documentation is pending.>

=head2 Catalog Relvars For Depot Appearance Control

This section describes the structure of all C<< cont.mnt.<unq_name> >>
special catalog relvars, which reflect and control which depots are
currently mounted in the DBMS.  Users update these to open or close
client-server DBMS engine connections, or to attach or detach file-based
database files, create or delete the depots themselves, or associate,
disassociate, create, or delete shared memory based depots, mount or
unmount filesystem-based depots, etc.  Updating these relvars has
side-effects in making the entities belonging to a depot, named C<*.db.*>,
appear in or disappear from view.  Details stored here include analogies to
DSNs, database file names, DBMS server names and addresses, authentication
details like login names and passwords.  What details are stored per depot
can vary significantly depending on which Muldis::DB Engine implements the
DBMS, but this variance is limited to just C<cont.mnt.depot_detail>.  Note
that it is forbidden to update any C<mnt> relvars while a multi-statement
transaction is active, because a transaction subjugates all entities
concurrently visible or mounted in a DBMS, such that they must all commit
or rollback as a unit.

I<This documentation is pending.>

=head2 Catalog Relvars for User-Defined Entities

This section describes the structure of all C<< cont.cat.app.<unq_name> >>
and C<< cont.cat.db.<depot>.<unq_name> >> general catalog relvars, the set
of C<< <unq_name> >> for each of which is identical, that reflect and
control user-defined entities, including data types, routines, non-lexical
variables (which are all relvars, real or virtual), state constraints, etc.
Users update these to create or drop their relvars, data types, routines,
constraints, etc.  Updating these catalog relvars has side-effects in
making global data relvars, named C<*.data.*>, appear, disappear, or change
in structure.

I<This documentation is pending.>

=head1 SEE ALSO

Go to L<Muldis::DB> for the majority of distribution-internal references,
and L<Muldis::DB::SeeAlso> for the majority of distribution-external
references.

=head1 AUTHOR

Darren Duncan (C<perl@DarrenDuncan.net>)

=head1 LICENSE AND COPYRIGHT

This file is part of the Muldis::DB framework.

Muldis::DB is Copyright Â© 2002-2007, Darren Duncan.

See the LICENSE AND COPYRIGHT of L<Muldis::DB> for details.

=head1 ACKNOWLEDGEMENTS

The ACKNOWLEDGEMENTS in L<Muldis::DB> apply to this file too.

=cut
