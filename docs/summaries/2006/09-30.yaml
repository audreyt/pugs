---
extra:
  footer:
    - body: |-
        This summary was prepared using
        [Mail::Summary::Tools](http://search.cpan.org/dist/Mail-Summary-Tools/),
        now available on CPAN.
        
        If you appreciate Perl, consider [contributing to the Perl
        Foundation](http://donate.perlfoundation.org) to help support the
        development of Perl.
        
        Jamie Cheetham supplied server access this week.
        
        Thank you to everyone who has pointed out mistakes and offered
        suggestions for improving this series.  Comments on this summary can be
        sent to Ann Barcomb, <kudra@domaintje.com>.
      title: Acknowlegements
    - body: |-
        This summary can be found in the following places:
        
        * [use.perl.org](http://use.perl.org/)
        * [The Pugs blog](http://pugs.blogs.com/)
        * [The perl6-announce mailing
          list](http://lists.cpan.org/showlist.cgi?name=perl6-announce)
        * [ONLamp](http://www.oreillynet.com/onlamp/blog/)
      title: Distribution
  header:
    - body: |-
        "Larry Wall wrote:
        > but only if self.HOW does Hash.
        
        And here I thought you were a responsible, law-abiding citizen... :P "
        
        -- Jonathan Lang
      title: This week on the Perl 6 mailing lists
  see_also:
    - name: Perl Foundation activities
      uri: http://blog.perlfoundation.org
    - name: Perl 6 Development
      uri: http://dev.perl.org/perl6
    - name: Planet Perl Six
      uri: http://planetsix.perl.org/perl6
lists:
  - name: perl6-language
    threads:
      - date_from: 1158681108
        date_to: 1159268600
        hidden: ~
        message_id: 45101204.30301@barco.com
        messages:
          - 451908EE.4050105@barco.com
        posters:
          - email: Thomas.Sandlass@barco.com
            name: TSa
        subject: class interface of roles
        summary: |-
          TSa wondered how [typing of
          mixins](http://www.jot.fm/issues/issue_2004_11/column1) would
          look in Perl 6.  A code example of how it might look was included.
          There were also some questions on roles in Perl 6.
      - date_from: 1158901434
        date_to: 1159134104
        hidden: ~
        message_id: ef30550b0609212203h8c9429bl7d931173db96ef57@mail.gmail.com
        messages:
          - 20060922055424.GA2372@wall.org
          - ef30550b0609220047y798ac34ara1902c9c31905b34@mail.gmail.com
          - 4516FB81.9040705@Yahoo.com
        posters:
          - email: dataweaver@gmail.com
            name: Jonathan Lang
          - email: larry@wall.org
            name: Larry Wall
          - email: Austin_Hastings@Yahoo.com
            name: Austin Hastings
        subject: Capture Literals
        summary: |-
          Responding to an earlier thread, Austin Hastings asked if Capture 
          literals would replace or unify "assuming"/"currying".
      - date_from: 1158934989
        date_to: 1159383833
        hidden: ~
        message_id: 97C57429-5F3C-4F5A-9A85-161BB7A5CD9E@audreyt.org
        messages:
          - 20060922143650.GA1810@host.pmichaud.com
          - aa47605d0609220834i577ecefewa1121a14fd676b49@mail.gmail.com
          - DA6A12F2-EE77-46DE-ABB7-839F4CDECCBD@audreyt.org
          - 16d769b70609271203x59ac7290oda641d1fab05b430@mail.gmail.com
        posters:
          - email: audreyt@audreyt.org
            name: Audrey Tang
          - email: pmichaud@pobox.com
            name: Patrick R. Michaud
          - email: fglock@gmail.com
            name: Flavio S. Glock
          - email: cmasak@gmail.com
            name: Carl Mäsak
        subject: Motivation for /<alpha>+/ set Array not Match?
        summary: |-
          In a previous week,
          Audrey Tang quoted a section of S05 concerning subrules.  She found
          the 'quantified' clause to be unintuitive and wondered if it would be
          possible to modify it to produce Match objects and to reserve Array
          only for noncontiguous same-name subrules.
          Patrick R. Michaud and Flavio S. Glock made some alternate suggestions.
          
          More recently Audrey replied to the thread, wondering if there was a
          hidden cost to making `/<foo>+/` always react so that `$<foo>.from`
          returns something.  Masak preferred the proposed semantics and asked if 
          the question had been discussed off-list.
      - date_from: 1159069747
        date_to: 1159069747
        hidden: minor commit
        message_id: 20060924034859.ACFD2CBA4D@x12.develooper.com
        posters:
          - email: audreyt@cvs.perl.org
            name: audreyt
        subject: '[svn:perl6-synopsis] r12347 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1159103595
        date_to: 1159103595
        hidden: minor commit
        message_id: 20060924131306.8655BCBA4D@x12.develooper.com
        posters:
          - email: audreyt@cvs.perl.org
            name: audreyt
        subject: '[svn:perl6-synopsis] r12348 - doc/trunk/design/syn'
        summary: ''
      - TAMARA: 'todo, still very active (and long)'
        date_from: 1159167687
        date_to: 1159316051
        hidden: ~
        message_id: 45177E12.3030707@vilain.net
        messages:
          - 4517E9D1.1050808@barco.com
          - 4517F42B.2050208@puremagic.com
          - cda42dbb0609251928me9f1efex82b69b4c074a4723@mail.gmail.com
          - 'p06230901c13e461a8ded@[192.168.1.101]'
          - 4518E13B.3070503@vilain.net
          - 'p06230901c13f65ae5407@[192.168.1.101]'
          - 4519C246.6080702@vilain.net
          - 4518DDCA.7000901@vilain.net
          - 4518E034.6090506@barco.com
          - 4519ACAF.8040806@vilain.net
          - 4517FB69.1010907@barco.com
          - 45184721.8070209@vilain.net
          - 4519073E.30708@barco.com
        posters:
          - email: sam@vilain.net
            name: Sam Vilain
          - email: Thomas.Sandlass@barco.com
            name: TSa
          - email: miro@puremagic.com
            name: Miroslav Silovic
          - email: ashley.winters@gmail.com
            name: Ashley Winters
          - email: darren@DarrenDuncan.net
            name: Darren Duncan
        subject: 'Nitpick my Perl6 - parametric roles'
        summary: |-
          Sam Vilain sent some code on Perl 6 core types as collections and asked
          if anyone would like to poke holes in it.  TSa applauded the use of
          functions but wondered if it would work.  Several other people followed
          up on that thought.
      - date_from: 1159204351
        date_to: 1159220315
        hidden: ~
        message_id: 45180DF2.3020303@ajs.com
        messages:
          - 20060925205334.19083.qmail@lists.develooper.com
          - 45184C49.5050506@vilain.net
        posters:
          - email: ajs@ajs.com
            name: Aaron Sherman
          - email: dave@whipp.name
            name: Dave Whipp
          - email: sam@vilain.net
            name: Sam Vilain
        subject: Mutability vs Laziness
        summary: |-
          Aaron Sherman pursued a conversation which began in IRC.  He listed
          some immutable types declared in S06 and noted that there appear to be
          three core attributes (Mutability, Laziness and Ordered), each of which 
          has two states (true or false).  From this he derived 8 types of
          containers. 
          
          Dave Whipp thought there was a fourth attribute, exclusivity.
          Sam Vilain felt that ordered was not an attribute of a collection.
      - date_from: 1159204416
        date_to: 1159274992
        hidden: ~
        message_id: 20060925171324.7D8B8CBA4D@x12.develooper.com
        messages:
          - 7ca3f0160609260004m3c6db0f3sf3448878bc1f29d8@mail.gmail.com
          - 4518E15E.8040300@barco.com
          - 20060926124941.GA16728@aaroncrane.co.uk
        posters:
          - email: larry@cvs.perl.org
            name: larry
          - email: lrpalmer@gmail.com
            name: Luke Palmer
          - email: Thomas.Sandlass@barco.com
            name: TSa
          - email: perl@aaroncrane.co.uk
            name: Aaron Crane
        subject: '[svn:perl6-synopsis] r12398 - doc/trunk/design/syn'
        summary: |-
          In a recent commit, Larry Wall removed the special `[,]`, which is now
          just a list op form of `[...]`.  In order to support the `|func()` syntax,
          `|` became the new disigilized `*`.  
          
          Luke Palmer replied in support of
          the new syntax.  TSa also approved, but would have liked the new operator
          spelled.  Aaron Crane thought that was undesirable because there are 
          already terms which begin with `/`, namely regular expressions.
      - date_from: 1159230172
        date_to: 1159378588
        hidden: ~
        message_id: 45187290.7020707@bereft.net
        messages:
          - ef9u7q$944$1@sea.gmane.org
          - 20060926013036.GA32695@wall.org
          - 451A900C.1020109@ajs.com
          - 7ca3f0160609270943o55b6b190rba81987c66ad1fbf@mail.gmail.com
          - 20060927173614.GA7177@wall.org
        posters:
          - email: list@bereft.net
            name: Brad Bowman
          - email: mark@summersault.com
            name: Mark Stosberg
          - email: larry@wall.org
            name: Larry Wall
          - email: ajs@ajs.com
            name: Aaron Sherman
          - email: lrpalmer@gmail.com
            name: Luke Palmer
        subject: Common Serialization Interface
        summary: |-
          Brad Bowman wondered if there was a common element to a serialization 
          role which could be included in the default implementation.
          Mark Stosberg noted that there is already a `.yaml` and a `.perl`
          to serialize to these formats, but he did not know if they were suitable
          substitutes for the role-based approach Brad had in mind.  He included
          a code sample.  Aaron Sherman and Luke Palmer offered additional code
          examples.  Larry Wall commented that it makes a big difference whether 
          the entire string must be held in memory or not.
      - date_from: 1159242608
        date_to: 1159242608
        hidden: ~
        message_id: 20060926035000.63DF5CBA4D@x12.develooper.com
        posters:
          - email: audreyt@cvs.perl.org
            name: audreyt
        subject: '[svn:perl6-synopsis] r12417 - doc/trunk/design/syn'
        summary: |-
          Audrey Tang committed a change which introduced the `$$x` form in
          adverbial pair parsing to S02 and canonicalized the term 'item'
          in S02 and S04.
      - date_from: 1159265252
        date_to: 1159265252
        hidden: ~
        message_id: 20060926100721.59FC8CBA4D@x12.develooper.com
        posters:
          - email: audreyt@cvs.perl.org
            name: audreyt
        subject: '[svn:perl6-synopsis] r12432 - doc/trunk/design/syn'
        summary: |-
          In S03, Audrey Tang noted that chained comparisons short-circuit and
          never evaluate arguments more than once.
      - date_from: 1159378049
        date_to: 1159378049
        hidden: minor commit
        message_id: 20060927172721.C74E8CBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r12466 - doc/trunk/design/syn'
        summary: ''
      - TAMARA: 'todo, still active'
        date_from: 1159379328
        date_to: 1159552374
        hidden: ~
        message_id: 451AB972.2090802@ajs.com
        messages:
          - ef30550b0609271903v1db7f60ah3912651ef77fbdce@mail.gmail.com
          - 20060927113943.G87014@bowser.eecs.harvard.edu
        posters:
          - email: ajs@ajs.com
            name: Aaron Sherman
          - email: dataweaver@gmail.com
            name: Jonathan Lang
          - email: trey@lopsa.org
            name: Trey Harris
          - email: miro@puremagic.com
            name: Miroslav Silovic
          - email: Thomas.Sandlass@barco.com
            name: TSa
          - email: larry@wall.org
            name: Larry Wall
          - email: markjreed@mail.com
            name: Mark J. Reed
        subject: 'RFC: multi assertions/prototypes: a step toward programming by contract'
        summary: |-
          Aaron Sherman wrote to suggest a signature prototype that all multis
          defined in or exported to the current namespace must match, as a means
          of implementing the paradigm of programming by contract.  
          
          Trey Harris felt that the point of multiple dispatch is that arguments
          are not bound to a single type, and the proposal might defeat this use,
          although junctive types, subsets and roles make 'single type' less of
          a constraint.  Miroslav Silovic was bothered by the possible duplication
          of functionality and believed that declarative requirements should go 
          in to roles.  Many other people responded to this thread.
          
          In addition, there was a discussion on the terminology of libraries
          in Perl 5 and Perl 6--'package' being the Perl 5 term, and 'module'
          the Perl 6 term.  The definition of 'programming by contract' was
          also discussed.
          
          There was also a discussion on whether 'package' implied a Perl 5 library
          and 'module' suggested a Perl 6 one.  Larry Wall attempted to clarify.
      - date_from: 1159383580
        date_to: 1159388161
        hidden: ~
        message_id: 20060927185932.44245.qmail@web56205.mail.re3.yahoo.com
        messages:
          - 20060927201553.GI12205@host.pmichaud.com
        posters:
          - email: dbrunton@yahoo.com
            name: David Brunton
          - email: pmichaud@pobox.com
            name: Patrick R. Michaud
        subject: special named assertions
        summary: |-
          David Brunton posted about an IRC conversation from earlier.  He
          listed the seven special named assertions found in S05, and the twenty-four
          found in `docs/Perl6/Overview/Rule.pod`.  He found another one in 
          `t/regex/from_perl6_rules/stdrules.t`.  In his opinion, it was worth
          creating a single place in S05 where all of these named assertions
          are listed. 
          
          Patrick R. Michaud disagreed with the inclusion of `<'...'>`
          and `<"...">` as named assertions.  He stated that he would compare the
          list with what PGE has implemented and report differences.
          Mark A. Biggar noted that the documentation should distinguish between
          pre-defined character classes and special builtins.  Patrick responded
          with PGE's view on what constitutes a special builtin.
      - date_from: 1159391491
        date_to: 1159392190
        hidden: duplicate of 20060927185932.44245.qmail@web56205.mail.re3.yahoo.com
        message_id: 092720062112.16933.451AE9220004F1C50000422522070209539D0E0909070DD20ED2059D0E03@comcast.net
        messages:
          - 20060927212300.GA3363@host.pmichaud.com
        posters:
          - email: mark.a.biggar@comcast.net
            name: mark.a.biggar
          - email: pmichaud@pobox.com
            name: Patrick R. Michaud
        subject: 'Re: special named assertions'
        summary: ''
      - date_from: 1159494825
        date_to: 1159494825
        hidden: small commit
        message_id: 20060929015333.BBD15CBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r12485 - doc/trunk/design/syn'
        summary: ''
    title: Language
  - name: perl6-internals
    threads:
      - TAMARA: "gmane article, can't do on the train"
        date_from: 1158195298
        date_to: 1159172989
        hidden: Karl and Leopold continue a discussion on detailed bits of this code
        message_id: 1a83bc10609131754o52a763e5va3b2c4f7c28a48e1@mail.gmail.com
        messages:
          - 200609151117.57783.lt@toetsch.at
          - 1a83bc10609241506s23965c8awef179f879da7b73@mail.gmail.com
          - 200609251029.33597.lt@toetsch.at
        posters:
          - email: karl.forner@gmail.com
            name: Karl Forner
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: '[TODO] fill Parrot_register_move() with code : new implementation'
        summary: ''
      - date_from: 1158544605
        date_to: 1159076881
        hidden: new msg is kthnx
        message_id: 17677.64708.889009.564361@rgrjr.dyndns.org
        messages:
          - 200609181153.37141.lt@toetsch.at
          - 17679.16698.213207.404816@rgrjr.dyndns.org
          - 198c87380609231356p4dd37ca6x8832e1e67460e880@mail.gmail.com
          - 17685.43648.647376.548963@rgrjr.dyndns.org
          - 17685.44697.879504.273503@rgrjr.dyndns.org
          - 198c87380609231721y68d42533oe4170ea712ea628b@mail.gmail.com
          - 17685.57918.237511.261370@rgrjr.dyndns.org
          - 198c87380609232247j1551b68fge96c484e42efe4ef@mail.gmail.com
          - 20060919013504.GA8085@wall.org
        posters:
          - email: rogers-perl6@rgrjr.dyndns.org
            name: Bob Rogers
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: mddiep@gmail.com
            name: Matt Diephouse
          - email: larry@wall.org
            name: Larry Wall
        subject: 'RFC: Consolidate stack-unwinding code'
        summary: ''
      - TAMARA: 'I only see three subjects, all from the 23rd'
        date_from: 1158945783
        date_to: 1159094316
        hidden: removal was agreed upon last week
        message_id: rt-3.5.HEAD-31258-1158945773-288.40402-72-0@perl.org
        messages:
          - 200609230203.42037.lt@toetsch.at
          - 45148061.2040502@jwcs.net
          - rt-3.5.HEAD-31263-1159094302-504.40402-15-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Bernhard Schmalhofer
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: jonathan@jwcs.net
            name: Jonathan Worthington
        rt_ticket: 'perl #40402'
        subject: '[perl #40402] Remove src/ops/dotgnu.ops '
        summary: ''
      - date_from: 1159062236
        date_to: 1159124134
        hidden: ~
        message_id: 17685.58068.629481.559366@rgrjr.dyndns.org
        messages:
          - 200609241316.08995.lt@toetsch.at
          - 17686.54427.662404.739996@rgrjr.dyndns.org
        posters:
          - email: rogers-perl6@rgrjr.dyndns.org
            name: Bob Rogers
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: A dedicated per-context stack for bsr/jsr/ret
        summary: |-
          Bob Rogers sent a patch to create a `return_stack` for `bsr/jsr/ret` ops.
          Leopold Toetsch replied that separate stacks are good, but wondered
          if a return stack per context was desired.  Bob Rogers replied in detail
          and included another patch.
      - date_from: 1159124166
        date_to: 1159170850
        hidden: ~
        message_id: 200609242055.51569.lt@toetsch.at
        messages:
          - 17687.44.468258.781725@rgrjr.dyndns.org
          - 200609250953.55248.lt@toetsch.at
        posters:
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: rogers-perl6@rgrjr.dyndns.org
            name: Bob Rogers
        subject: postgres interface
        summary: |-
          Leopold Toetsch has been working on `postgres.pir` and reported several
          changes, including a new test file.  Bob Rogers sent a patch to make it
          more forgiving of an absent `libpq.so`.  It was applied.
      - date_from: 1159140715
        date_to: 1159140715
        hidden: ~
        message_id: rt-3.5.HEAD-31251-1159140706-464.40410-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Jonathan Worthington
        rt_ticket: 'perl #40410'
        subject: '[perl #40410] Segfault in packfile code '
        summary: |-
          In ticket <rt://perl/40410>, Jonathan Worthington reported a
          segmentation fault in generating a packfile for compiled PIR generated
          by .Net.  Later he found the bug and implemented a workaround.
      - date_from: 1159190135
        date_to: 1159190135
        hidden: summary
        message_id: 20060925131459.16865.qmail@x1.develooper.com
        posters:
          - email: perlbug-summary@perl.org
            name: Parrot Bug Summary
        subject: Parrot Bug Summary
        summary: ''
      - date_from: 1159214908
        date_to: 1159216258
        hidden: ~
        message_id: 200609252208.14913.lt@toetsch.at
        messages:
          - 1d9a3f400609251330i4570e514kba490e7ffaa2c559@mail.gmail.com
        posters:
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: jerry.gay@gmail.com
            name: jerry gay
        subject: FYI improved pugs smokes
        summary: |-
          Leopold Toetsch referred to the recently improved smoke tests for Pugs,
          and wondered if it would be possible to do something similar for Parrot.
          Jerry Gay replied that he'd been working on a Parrot implemention.
      - date_from: 1159250789
        date_to: 1159250789
        hidden: small commit
        message_id: 20060926060618.8DA1ACBA4E@x12.develooper.com
        posters:
          - email: chromatic@cvs.perl.org
            name: chromatic
        subject: '[svn:parrot-pdd] r14732 - in trunk: . docs/pdds/clip'
        summary: ''
      - date_from: 1159250942
        date_to: 1159250942
        hidden: ~
        message_id: 200609252308.21344.chromatic@wgz.org
        posters:
          - email: chromatic@wgz.org
            name: chromatic
        subject: External PDD Checkin
        summary: |-
          chromatic reported that he had added details to the external API draft
          PDD and welcomed comments on `docs/pdds/clip/pdd10_embedding.pod`.
      - date_from: 1159257700
        date_to: 1159257700
        hidden: ~
        message_id: 5.1.0.14.2.20060925224543.022fdb80@pop.besancon.parkeon.com
        posters:
          - email: francois.perrad@gadz.org
            name: François PERRAD
        subject: '[PATCH] Parrot-Embed on Win32'
        summary: |-
          François 
          Perrad supplied a patch to make Parrot-Embed compile and run on 
          Win32.
      - date_from: 1159299691
        date_to: 1159478171
        hidden: ~
        message_id: 200609262141.18411.lt@toetsch.at
        messages:
          - 451A245D.10308@perl.org
          - 200609271138.10611.lt@toetsch.at
          - 20060927140253.GA7893@pobox.com
        posters:
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: allison@perl.org
            name: Allison Randal
          - email: duff@pobox.com
            name: Jonathan Scott Duff
          - email: chromatic@wgz.org
            name: chromatic
          - email: pmichaud@pobox.com
            name: Patrick R. Michaud
          - email: mddiep@gmail.com
            name: Matt Diephouse
        subject: FYI compiling PIR function calls
        summary: |-
          Leopold Toetsch wanted people to know about alternate syntax for
          generating PIR calls from a compiler:
              `.pcc_begin 
               .arg "hello" 
               .arg "\n" 
               .invocant obj 
               .meth_call "_meth" 
               .result $S0 
               .pcc_end`
          
          Allison Randal replied that she felt the problem was one of 
          inconsistency.  She gave a few suggestions, which Leopold Toetsch
          responded to.  Jonathan Scott Duff also proposed a slight modification
          of syntax.  A discussion on the syntax followed.
      - date_from: 1159307548
        date_to: 1159307548
        hidden: ~
        message_id: 20060926215217.68A0BCBA4E@x12.develooper.com
        posters:
          - email: allison@cvs.perl.org
            name: allison
        subject: '[svn:parrot-pdd] r14741 - in trunk: . docs/pdds/clip'
        summary: |-
          Allison Randal made some modifications to PDD22 to create a first
          release candidate of the I/O PDD.
      - date_from: 1159308119
        date_to: 1159308119
        hidden: ~
        message_id: 4519A340.7040701@perl.org
        posters:
          - email: allison@perl.org
            name: Allison Randal
        subject: A moment of Zen
        summary: |-
          Allison Randal posted that the single most important thing in the
          project is shipping a 1.0 release of Parrot, which is now very close.
          She called for functionality over elegant theory for the moment.
      - date_from: 1159309661
        date_to: 1159311891
        hidden: ~
        message_id: 4519A94E.3020805@gmail.com
        messages:
          - 200609261604.40109.chromatic@wgz.org
        posters:
          - email: watsonbladd@gmail.com
            name: Watson Ladd
          - email: chromatic@wgz.org
            name: chromatic
        subject: call/return and CPS
        summary: |-
          Watson Ladd asked how call and ret opcodes will interact with
          continuations.  chromatic replied that the opcodes invoke the
          appropriate continuations.
      - date_from: 1159314314
        date_to: 1159378503
        hidden: ~
        message_id: 4519BB75.7010004@perl.org
        messages:
          - 200609271240.34312.lt@toetsch.at
          - 200609271008.29729.chromatic@wgz.org
          - 200609271934.48117.lt@toetsch.at
          - 20060927113906.GF21712@ifa.hawaii.edu
          - 20060927093307.GA29388@ppp-75.la.vclk.net
          - 200609261702.53013.chromatic@wgz.org
        posters:
          - email: allison@perl.org
            name: Allison Randal
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: chromatic@wgz.org
            name: chromatic
          - email: jhoblitt@ifa.hawaii.edu
            name: Joshua Hoblitt
          - email: Tim.Bunce@pobox.com
            name: Tim Bunce
        subject: 'PDD 22 - I/O release candidate 1'
        summary: |-
          Allison Randal announced that she'd committed an updated I/O PDD.
          She requested feedback, especially on which lightweight concurrency
          model to use for asynchronous operations.  She also asked for a reaction 
          on async ops returning status objects while sync ops return integer 
          error codes.
          
          chromatic suggested that ops could always return PMCs, and simply check
          the intval if required.  Tim Bunce wondered if speed-sensitive ops which
          might be used in loops could be given the PMC to reuse.
          
          Leopold Toetsch remarked that he did not like I/O opcodes and explained
          why.  chromatic disagreed with one of the arguments and Leopold replied.
          
          Joshua Hoblitt asked for more details on Allison's comment about concurrency
          models: was she speaking of the Parrot API, the actual implementation, or 
          both?  He felt that the implementation would need to be highly 
          platform specific.
      - date_from: 1159327322
        date_to: 1159327322
        hidden: ~
        message_id: 519C67EB-0194-4977-99F8-72DA50EBC97F@coleda.com
        posters:
          - email: will@coleda.com
            name: Will Coleda
        subject: '[CAGE] perl coding standards...'
        summary: |-
          Will Coleda created a perlcritic tests, `t/codingstd/perlcritic.t`,
          which isn't run by default.  It currently reports only a few rules.
          He suggested that Cage Cleaners could run this test to receive a long
          list of things to fix.  He offered some advice on addressing the issues
          which show up.
      - date_from: 1159371443
        date_to: 1159371443
        hidden: ~
        message_id: rt-3.5.HEAD-31257-1159371433-1862.40419-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Will Coleda
        rt_ticket: 'perl #40419'
        subject: '[perl #40419] 2 PDD 07s '
        summary: |-
          In ticket <rt://perl/40419>, Will Coleda reported that there are
          two PDDs numbered 07.
      - date_from: 1159386919
        date_to: 1159386919
        hidden: ~
        message_id: 451AD70D.8030303@perl.org
        posters:
          - email: allison@perl.org
            name: Allison Randal
        subject: Prototyping variable-sized PMCs
        summary: |-
          Allison Randal summarized a telephone conversation with Leopold
          Toetsch.  They discussed proposals on variable-sized PMCs and a
          shared base class for PMC types ('<msgid:200609272157.37544.lt@toetsch.at>').
          In Allison's opinion, variable-sized PMCs are a step toward closing the
          gap between low-level PMCs and higher-level Parrot Object PMCs.  She
          also thought there were several good ideas in the shared base class
          proposal.  The new PMCs will be implemented first as prototypes, and
          assessed/rewritten without changing the existing system.
      - date_from: 1159387052
        date_to: 1159434409
        hidden: really part of 200609272157.37544.lt@toetsch.at
        message_id: 20060927195723.65822CBA4E@x12.develooper.com
        messages:
          - 451B09A3.2010009@jwcs.net
        posters:
          - email: leo@cvs.perl.org
            name: leo
          - email: jonathan@jwcs.net
            name: Jonathan Worthington
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: '[svn:parrot-pdd] r14774 - in trunk: . docs/pdds/clip'
        summary: ''
      - date_from: 1159387074
        date_to: 1159387074
        hidden: ~
        message_id: 200609272157.37544.lt@toetsch.at
        posters:
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: Two new pdds
        summary: |-
          Leopold Toetsch announced two new documents in `docs/pddfs/clip` as of
          r14774.  One, `pddXX_cstruct.pod` is the metaclass of all publically
          accessible C-derived structures used in Parrot.  The other, 
          `pddXX_pmc.pod`, describes the general structure of PMC internal
          layout.
          
          Jonathan Worthington replied to the commit 
          (<msgid:20060927195723.65822CBA4E@x12.develooper.com>) to give his
          thoughts on Leopold's proposals.
          
          A related thread is '<msgid:451AD70D.8030303@perl.org>'.
      - date_from: 1159388737
        date_to: 1159390063
        hidden: ~
        message_id: 200609272225.25934.lt@toetsch.at
        messages:
          - 451AE362.8000806@perl.org
        posters:
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: allison@perl.org
            name: Allison Randal
        subject: 'FYI: $job'
        summary: |-
          Leopold Toetsch announced that his job will require him to reduce his
          Parrot commitments, but that he would continue to follow development
          as time permits.  Allison Randal thanked him for his contributions.
      - date_from: 1157711932
        date_to: 1159443759
        hidden: ~
        message_id: 200609081238.39612.lt@toetsch.at
        messages:
          - 200609080946.54886.chromatic@wgz.org
          - 450323CA.9090100@tewk.com
          - 200609092313.55199.lt@toetsch.at
          - 20060928083613.GG95088@plum.flirble.org
        posters:
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: chromatic@wgz.org
            name: chromatic
          - email: tewk@tewk.com
            name: Kevin Tew
          - email: nick@ccl4.org
            name: Nicholas Clark
          - email: jhoblitt@ifa.hawaii.edu
            name: Joshua Hoblitt
        subject: socket related constants
        summary: |-
          Nicholas Clark replied to an older thread.  He said that there are two
          problems to be solved, namely parsing C header files and identifying 
          the constants, and injecting identified constants in to Parrot
          appropriately.  Nicholas explained a little about how this is going
          in Perl 5.10.
          
          Joshua Hoblitt was reminded of the question of whether anyone had
          looked at APR for doing portable I/O.
      - date_from: 1159140715
        date_to: 1159400438
        hidden: duplicate of rt-3.5.HEAD-31251-1159140706-464.40410-72-0@perl.org
        message_id: rt-3.5.HEAD-31258-1159400428-476.40410-15-0@perl.org
        messages:
          - rt-3.5.HEAD-31251-1159140706-464.40410-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: jnthn@jnthn.net via RT
        rt_ticket: 'perl #40410'
        subject: '[perl #40410] Segfault in packfile code '
        summary: ''
      - date_from: 1159432767
        date_to: 1159432767
        hidden: minor commit
        message_id: 20060928083919.6F442CBA4D@x12.develooper.com
        posters:
          - email: leo@cvs.perl.org
            name: leo
        subject: '[svn:parrot-pdd] r14781 - trunk/docs/pdds/clip'
        summary: ''
      - date_from: 1159440470
        date_to: 1159482158
        hidden: ~
        message_id: 1a83bc10609280347tf928e4fm2e69101bf8a487e8@mail.gmail.com
        messages:
          - 200609281311.53738.lt@toetsch.at
          - 1a83bc10609281522y34bc14c9jcddca02671bb2ea9@mail.gmail.com
        posters:
          - email: karl.forner@gmail.com
            name: Karl Forner
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: '[HOWTO] call a method on a PMC in PIR'
        summary: |-
          Karl Forner wanted to call the `elements()` method on a FixedBooleanArray,
          or add a custom method `get_allocated_size()` to the FixedBooleanArray.pmc.
          Leopold Toetsch replied with suggestions.
      - date_from: 1159477100
        date_to: 1159477100
        hidden: ~
        message_id: 451C3755.90606@perl.org
        posters:
          - email: allison@perl.org
            name: Allison Randal
        subject: Draft of Bytecode PDD
        summary: |-
          Allison Randal announced that Jonathan Worthington had written a draft
          PDD for Parrot's bytecode format, which was checked in as
          '<msgid:20060928212316.9432FCBA4D@x12.develooper.com>'.  Later some
          additional changes (based upon a conversation with Allison) were
          also committed.
          
          In '<msgid:451C5D20.60705@jwcs.net>' Jonathan asked for feedback.
          Leopold Toetsch offered a few comments.
          
          Ben Morrow wanted to know if pbc files could allow an optional `#!`
          line so that they could be used as executables.  Jonathan replied that
          he had considered this, but rejected it because it is UNIX-specific.
          There was additional discussion on the topic.
      - date_from: 1159477546
        date_to: 1159581315
        hidden: ~
        message_id: 451C3913.7050008@perl.org
        messages:
          - 73ddeb6c0609291854n10b665c2sc46082688d45595f@mail.gmail.com
          - 17692.17389.968384.475867@localhost.localdomain
          - 200609281530.40032.chromatic@wgz.org
        posters:
          - email: allison@perl.org
            name: Allison Randal
          - email: a.r.ferreira@gmail.com
            name: Adriano Ferreira
          - email: triska@gmx.at
            name: Markus Triska
          - email: chromatic@wgz.org
            name: chromatic
        subject: requirements gathering on mini transformation language
        summary: |-
          Allison Randal asked for a volunteer to write up the requirements
          for a mini transformation language to use the compiler tools.
          The job would involve spending time with Allison and Patrick
          Michaud and combining their ideas along with your own perspective.
          Adriano Ferreira offered some opinions on the subject, and 
          Markus Triska volunteered to do it if it relates to his area of
          expertise.
      - date_from: 1159478611
        date_to: 1159643673
        hidden: introduced by 451C3755.90606@perl.org
        message_id: 20060928212316.9432FCBA4D@x12.develooper.com
        messages:
          - c6iuu3-1nh.ln1@osiris.mauzo.dyndns.org
        posters:
          - email: jonathan@cvs.perl.org
            name: jonathan
          - email: benmorrow@tiscali.co.uk
            name: Ben Morrow
          - email: jonathan@jnthn.net
            name: Jonathan Worthington
          - email: chromatic@wgz.org
            name: chromatic
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: '[svn:parrot-pdd] r14784 - trunk/docs/pdds/clip'
        summary: ''
      - date_from: 1159484164
        date_to: 1159484164
        hidden: Allison already announced these changes were coming
        message_id: 20060928225553.B231ACBA4D@x12.develooper.com
        posters:
          - email: jonathan@cvs.perl.org
            name: jonathan
        subject: '[svn:parrot-pdd] r14785 - trunk/docs/pdds/clip'
        summary: ''
      - date_from: 1159486780
        date_to: 1159523554
        hidden: listed under 451C3755.90606@perl.org
        message_id: 451C5D20.60705@jwcs.net
        messages:
          - 200609291152.23133.lt@toetsch.at
        posters:
          - email: jonathan@jwcs.net
            name: Jonathan Worthington
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: Bytecode PDD
        summary: ''
      - date_from: 1159515424
        date_to: 1159515424
        hidden: ~
        message_id: rt-3.5.HEAD-31251-1159515415-1032.40428-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Paul Cochrane
        rt_ticket: 'perl #40428'
        subject: '[perl #40428] [PATCH] Return perl script and module file locations in parrot distro '
        summary: |-
          In ticket <rt://perl/40428>, Paul Cochrane
          submitted a patch to return the names and locations of the perl
          script and module files within the Parrot distribution.
      - date_from: 1159515628
        date_to: 1159515628
        hidden: ~
        message_id: rt-3.5.HEAD-31259-1159515620-1789.40429-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Paul Cochrane
        rt_ticket: 'perl #40429'
        subject: '[perl #40429] [PATCH] test for perl code coda '
        summary: |-
          Paul Cochrane supplied a patch in <rt://perl/40429> to add
          a test for the Perl code coda.  Will Coleda rejected the patch because
          he'd just added the same test as a Perl::Critic policy class.
      - date_from: 1159516031
        date_to: 1159516031
        hidden: ~
        message_id: rt-3.5.HEAD-31259-1159516022-123.40430-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Paul Cochrane
        rt_ticket: 'perl #40430'
        subject: '[perl #40430] [PATCH] rename and update C code coda test '
        summary: |-
          Paul Cochrane renamed the C coda test and removed Perl-specific code
          from the test.  It was applied as r14812.  The ticket for this patch is
          <rt://perl/40430>.
      - date_from: 1159515628
        date_to: 1159669066
        hidden: duplicate of rt-3.5.HEAD-31259-1159515620-1789.40429-72-0@perl.org
        message_id: rt-3.5.HEAD-31259-1159669054-631.40429-15-0@perl.org
        messages:
          - rt-3.5.HEAD-31259-1159515620-1789.40429-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Will Coleda via RT
        rt_ticket: 'perl #40429'
        subject: '[perl #40429] [PATCH] test for perl code coda '
        summary: ''
      - date_from: 1159516031
        date_to: 1159669602
        hidden: duplicate of rt-3.5.HEAD-31259-1159516022-123.40430-72-0@perl.org
        message_id: rt-3.5.HEAD-31263-1159669594-1873.40430-15-0@perl.org
        messages:
          - rt-3.5.HEAD-31259-1159516022-123.40430-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Will Coleda via RT
        rt_ticket: 'perl #40430'
        subject: '[perl #40430] [PATCH] rename and update C code coda test '
        summary: ''
    title: Parrot Porters
  - name: perl6-users
    threads:
      - date_from: 1157827008
        date_to: 1158826444
        hidden: ~
        message_id: 'p06230900c128b8a02d9b@[192.168.1.101]'
        messages:
          - 20060916173836.GD19031@klangraum
          - 'p06230900c13225ccdbd8@[192.168.1.101]'
          - 20060916185824.GD16337@c4.convolution.nl
          - 20060916222014.GA19860@klangraum
          - 20060909191532.12771.qmail@lists.develooper.com
          - 20060910142358.F43587@bowser.eecs.harvard.edu
          - 20060911201333.19368.qmail@lists.develooper.com
          - 874pvdldn5.fsf@teufelkommraus.webit.de
          - 20060912132152.12099.qmail@lists.develooper.com
          - 'p06230900c12cde1d7114@[192.168.1.101]'
          - 20060913160052.GK1952@bytemark.barnyard.co.uk
          - 'p06230902c12e30eaee25@[192.168.1.101]'
          - 97f280ea0609120718u4eba6fa0p3a4fd21ad98e7aa5@mail.gmail.com
          - 20060913151550.GG1952@bytemark.barnyard.co.uk
          - 20060917012340.14037.qmail@lists.develooper.com
          - a51e610c0609131521x8904c64r7977ca2442209f38@mail.gmail.com
          - ae697d050609141700r45003586h8e38289a9ca10183@mail.gmail.com
          - 450CB3A7.8010003@summersault.com
          - 20060921081355.GY16337@c4.convolution.nl
          - 450CB353.8000403@summersault.com
          - 20060917092747.GG16337@c4.convolution.nl
          - 20060917121011.3817.qmail@lists.develooper.com
          - 20060927233931.20739.qmail@lists.develooper.com
          - 20060917101645.GI16337@c4.convolution.nl
          - 20060915021812.GT16337@c4.convolution.nl
          - 'p06230900c12fa515c3fa@[192.168.1.101]'
          - dc69626e0609150727p575da8a0n8d440f3c82172bbf@mail.gmail.com
          - Pine.LNX.4.62.0609131140060.17562@fractal.phys.lafayette.edu
          - 86k645xg1k.fsf@blue.stonehenge.com
          - 450F12C1.2000208@cantrell.org.uk
          - 86odtbhool.fsf@blue.stonehenge.com
          - 20060920020615.GC31081@klangraum
          - 20060921113133.GA23541@bytemark.barnyard.co.uk
          - 20060919194449.22165.qmail@lists.develooper.com
          - 20060919204413.GJ16337@c4.convolution.nl
          - 20060920010522.32103.qmail@lists.develooper.com
          - 45105622.5050504@metalogicplc.com
          - 86hcz2y3gh.fsf@blue.stonehenge.com
          - 20060920200130.GB9337@klangraum
          - 20060920201847.GU16337@c4.convolution.nl
          - 20060920203935.GD9337@klangraum
          - 20060920224341.GV16337@c4.convolution.nl
          - 20060920234308.GF9337@klangraum
          - 20060920233405.GB11475@wall.org
          - 20060921081003.GX16337@c4.convolution.nl
          - 20060921222438.GA23602@wall.org
          - 20060921223447.GH16337@c4.convolution.nl
          - 20060921224450.GA24119@wall.org
          - 57494.80.98.159.250.1158621728.squirrel@www.hunhost.com
          - 20060915212656.GZ16337@c4.convolution.nl
          - 20060915213532.GB16337@c4.convolution.nl
          - 20060917013831.15426.qmail@lists.develooper.com
          - 'p06230900c128dec41e00@[192.168.1.101]'
          - 20060910144650.O43587@bowser.eecs.harvard.edu
          - 20060916174746.GE19031@klangraum
        posters:
          - email: darren@DarrenDuncan.net
            name: Darren Duncan
          - email: pagaltzis@gmx.de
            name: A. Pagaltzis
          - email: juerd@convolution.nl
            name: Juerd
          - email: mark@summersault.com
            name: Mark Stosberg
          - email: trey@eecs.harvard.edu
            name: Trey Harris
          - email: mail@gedankenkonstrukt.de
            name: Thomas Wittek
          - email: schwigon@webit.de
            name: Steffen Schwigon
          - email: david@cantrell.org.uk
            name: David Cantrell
          - email: amir.aharoni@gmail.com
            name: Amir E. Aharoni
          - email: fawaka@gmail.com
            name: Leon Timmermans
          - email: aankhen@gmail.com
            name: Aankhen
          - email: michael.snoyman@ucla.edu
            name: Michael Snoyman
          - email: doughera@lafayette.edu
            name: Andy Dougherty
          - email: merlyn@stonehenge.com
            name: merlyn
          - email: stevep@metalogicplc.com
            name: Steve Pitchford
          - email: larry@wall.org
            name: Larry Wall
          - email: concept@conceptonline.hu
            name: Fagyal Csongor
        subject: How to pass a ref from a language with no refs
        summary: |-
          This week the long-running CGI thread splintered in to the question of
          how to pass a reference from a language with no references when Mark
          Stosberg replied to a discussion on how Perl 5 embeds in Perl 6.
          
          Mark saw some recent Pugs commits on Perl 5 embedding, which encouraged him to 
          experiment with passing hashes and arrays.  In his tests, he was able to
          send an array as an arrayref, but was unable to get a hashref.  He wondered
          if there was another way to do it.  Aristotle Pagaltzis replied.
      - date_from: 1157829345
        date_to: 1158185556
        hidden: 'is but a copy of p06230900c128b8a02d9b@[192.168.1.101]'
        message_id: 20060910142358.F43587@bowser.eecs.harvard.edu
        messages:
          - 20060911201333.19368.qmail@lists.develooper.com
          - 874pvdldn5.fsf@teufelkommraus.webit.de
          - 20060912132152.12099.qmail@lists.develooper.com
          - 'p06230900c12cde1d7114@[192.168.1.101]'
          - 20060913160052.GK1952@bytemark.barnyard.co.uk
          - 'p06230902c12e30eaee25@[192.168.1.101]'
          - 97f280ea0609120718u4eba6fa0p3a4fd21ad98e7aa5@mail.gmail.com
          - 20060913151550.GG1952@bytemark.barnyard.co.uk
          - 20060917012340.14037.qmail@lists.develooper.com
          - a51e610c0609131521x8904c64r7977ca2442209f38@mail.gmail.com
          - ae697d050609141700r45003586h8e38289a9ca10183@mail.gmail.com
          - 450CB3A7.8010003@summersault.com
          - 20060921081355.GY16337@c4.convolution.nl
          - 450CB353.8000403@summersault.com
          - 20060917092747.GG16337@c4.convolution.nl
          - 20060917121011.3817.qmail@lists.develooper.com
          - 20060927233931.20739.qmail@lists.develooper.com
          - 20060917101645.GI16337@c4.convolution.nl
          - 20060915021812.GT16337@c4.convolution.nl
          - 'p06230900c12fa515c3fa@[192.168.1.101]'
          - dc69626e0609150727p575da8a0n8d440f3c82172bbf@mail.gmail.com
          - Pine.LNX.4.62.0609131140060.17562@fractal.phys.lafayette.edu
          - 86k645xg1k.fsf@blue.stonehenge.com
          - 450F12C1.2000208@cantrell.org.uk
          - 86odtbhool.fsf@blue.stonehenge.com
          - 20060920020615.GC31081@klangraum
          - 20060921113133.GA23541@bytemark.barnyard.co.uk
          - 20060919194449.22165.qmail@lists.develooper.com
          - 20060919204413.GJ16337@c4.convolution.nl
          - 20060920010522.32103.qmail@lists.develooper.com
          - 45105622.5050504@metalogicplc.com
          - 86hcz2y3gh.fsf@blue.stonehenge.com
          - 20060920200130.GB9337@klangraum
          - 20060920201847.GU16337@c4.convolution.nl
          - 20060920203935.GD9337@klangraum
          - 20060920224341.GV16337@c4.convolution.nl
          - 20060920234308.GF9337@klangraum
          - 20060920233405.GB11475@wall.org
          - 20060921081003.GX16337@c4.convolution.nl
          - 20060921222438.GA23602@wall.org
          - 20060921223447.GH16337@c4.convolution.nl
          - 20060921224450.GA24119@wall.org
          - 57494.80.98.159.250.1158621728.squirrel@www.hunhost.com
          - 20060915212656.GZ16337@c4.convolution.nl
          - 20060915213532.GB16337@c4.convolution.nl
          - 20060917013831.15426.qmail@lists.develooper.com
          - 20060909191532.12771.qmail@lists.develooper.com
          - 20060911201333.19368.qmail@lists.develooper.com
          - 874pvdldn5.fsf@teufelkommraus.webit.de
          - 20060912132152.12099.qmail@lists.develooper.com
          - 'p06230900c12cde1d7114@[192.168.1.101]'
          - 20060913160052.GK1952@bytemark.barnyard.co.uk
          - 'p06230902c12e30eaee25@[192.168.1.101]'
          - 97f280ea0609120718u4eba6fa0p3a4fd21ad98e7aa5@mail.gmail.com
          - 20060913151550.GG1952@bytemark.barnyard.co.uk
          - 20060917012340.14037.qmail@lists.develooper.com
          - a51e610c0609131521x8904c64r7977ca2442209f38@mail.gmail.com
          - ae697d050609141700r45003586h8e38289a9ca10183@mail.gmail.com
          - 450CB3A7.8010003@summersault.com
          - 20060921081355.GY16337@c4.convolution.nl
          - 450CB353.8000403@summersault.com
          - 20060917092747.GG16337@c4.convolution.nl
          - 20060917121011.3817.qmail@lists.develooper.com
          - 20060927233931.20739.qmail@lists.develooper.com
          - 20060917101645.GI16337@c4.convolution.nl
          - 20060915021812.GT16337@c4.convolution.nl
          - 'p06230900c12fa515c3fa@[192.168.1.101]'
          - dc69626e0609150727p575da8a0n8d440f3c82172bbf@mail.gmail.com
          - Pine.LNX.4.62.0609131140060.17562@fractal.phys.lafayette.edu
          - 86k645xg1k.fsf@blue.stonehenge.com
          - 450F12C1.2000208@cantrell.org.uk
          - 86odtbhool.fsf@blue.stonehenge.com
          - 20060920020615.GC31081@klangraum
          - 20060921113133.GA23541@bytemark.barnyard.co.uk
          - 20060919194449.22165.qmail@lists.develooper.com
          - 20060919204413.GJ16337@c4.convolution.nl
          - 20060920010522.32103.qmail@lists.develooper.com
          - 45105622.5050504@metalogicplc.com
          - 86hcz2y3gh.fsf@blue.stonehenge.com
          - 20060920200130.GB9337@klangraum
          - 20060920201847.GU16337@c4.convolution.nl
          - 20060920203935.GD9337@klangraum
          - 20060920224341.GV16337@c4.convolution.nl
          - 20060920234308.GF9337@klangraum
          - 20060920233405.GB11475@wall.org
          - 20060921081003.GX16337@c4.convolution.nl
          - 20060921222438.GA23602@wall.org
          - 20060921223447.GH16337@c4.convolution.nl
          - 20060921224450.GA24119@wall.org
          - 57494.80.98.159.250.1158621728.squirrel@www.hunhost.com
          - 20060915212656.GZ16337@c4.convolution.nl
          - 20060915213532.GB16337@c4.convolution.nl
          - 20060917013831.15426.qmail@lists.develooper.com
          - 'p06230900c128dec41e00@[192.168.1.101]'
          - 20060910144650.O43587@bowser.eecs.harvard.edu
          - 20060916174746.GE19031@klangraum
        posters:
          - email: trey@eecs.harvard.edu
            name: Trey Harris
          - email: mail@gedankenkonstrukt.de
            name: Thomas Wittek
          - email: schwigon@webit.de
            name: Steffen Schwigon
          - email: darren@DarrenDuncan.net
            name: Darren Duncan
          - email: david@cantrell.org.uk
            name: David Cantrell
          - email: amir.aharoni@gmail.com
            name: Amir E. Aharoni
          - email: mark@summersault.com
            name: Mark Stosberg
          - email: fawaka@gmail.com
            name: Leon Timmermans
          - email: aankhen@gmail.com
            name: Aankhen
          - email: juerd@convolution.nl
            name: Juerd
          - email: michael.snoyman@ucla.edu
            name: Michael Snoyman
          - email: doughera@lafayette.edu
            name: Andy Dougherty
          - email: merlyn@stonehenge.com
            name: merlyn
          - email: pagaltzis@gmx.de
            name: A. Pagaltzis
          - email: stevep@metalogicplc.com
            name: Steve Pitchford
          - email: larry@wall.org
            name: Larry Wall
          - email: concept@conceptonline.hu
            name: Fagyal Csongor
        subject: 'Re: the CGI.pm in Perl 6'
        summary: ''
      - date_from: 1158764136
        date_to: 1158796239
        hidden: ~
        message_id: 45115686.3030805@conceptonline.hu
        messages:
          - 20060920202918.GC9337@klangraum
          - 16d769b70609201506q43f2f0e8u433d07a5a9ae7d86@mail.gmail.com
          - 20060920224734.GW16337@c4.convolution.nl
          - 20060920235111.GG9337@klangraum
          - 'p06230902c1377b99e46f@[192.168.1.101]'
          - 20060920232743.GA11475@wall.org
          - 1EB9620C-E8F9-40E5-8CA4-9F1B393F6B96@chrisdolan.net
          - 1d9a3f400609200823v2237a573w3c61c9128e06c46c@mail.gmail.com
          - dc69626e0609200859t69d018c1qb2aab3d2381f4659@mail.gmail.com
        posters:
          - email: concept@conceptonline.hu
            name: Fagyal Csongor
          - email: pagaltzis@gmx.de
            name: A. Pagaltzis
          - email: cmasak@gmail.com
            name: Carl Mäsak
          - email: juerd@convolution.nl
            name: Juerd
          - email: darren@DarrenDuncan.net
            name: Darren Duncan
          - email: larry@wall.org
            name: Larry Wall
          - email: chris@chrisdolan.net
            name: Chris Dolan
          - email: jerry.gay@gmail.com
            name: jerry gay
          - email: michael.snoyman@ucla.edu
            name: Michael Snoyman
        subject: Perl6 "style-guide"
        summary: |-
          Last week, Fagyal Csongor asked if someone was willing to write a Perl 
          6 style guide.  This led to a discussion on other resources, desired and
          existing.  This week, Chris Dolan asked if anyone wanted to start a port
          of Perl::Critic.
      - date_from: 1157829345
        date_to: 1158826444
        hidden: 'still the duplicate CGI thread p06230900c128b8a02d9b@[192.168.1.101]'
        message_id: 20060909191532.12771.qmail@lists.develooper.com
        messages:
          - 20060910142358.F43587@bowser.eecs.harvard.edu
          - 20060911201333.19368.qmail@lists.develooper.com
          - 874pvdldn5.fsf@teufelkommraus.webit.de
          - 20060912132152.12099.qmail@lists.develooper.com
          - 97f280ea0609120718u4eba6fa0p3a4fd21ad98e7aa5@mail.gmail.com
          - 20060913151550.GG1952@bytemark.barnyard.co.uk
          - 20060917012340.14037.qmail@lists.develooper.com
          - 450CB3A7.8010003@summersault.com
          - 20060921081355.GY16337@c4.convolution.nl
          - 450CB353.8000403@summersault.com
          - 20060917092747.GG16337@c4.convolution.nl
          - 20060917121011.3817.qmail@lists.develooper.com
          - 20060927233931.20739.qmail@lists.develooper.com
          - 20060929184723.GA8007@klangraum
          - 20060917101645.GI16337@c4.convolution.nl
          - Pine.LNX.4.62.0609131140060.17562@fractal.phys.lafayette.edu
          - 86k645xg1k.fsf@blue.stonehenge.com
          - 450F12C1.2000208@cantrell.org.uk
          - 86odtbhool.fsf@blue.stonehenge.com
          - 20060920020615.GC31081@klangraum
          - 20060921113133.GA23541@bytemark.barnyard.co.uk
          - 20060919194449.22165.qmail@lists.develooper.com
          - 20060919204413.GJ16337@c4.convolution.nl
          - 20060920010522.32103.qmail@lists.develooper.com
          - 45105622.5050504@metalogicplc.com
          - 86hcz2y3gh.fsf@blue.stonehenge.com
          - 20060920200130.GB9337@klangraum
          - 20060920201847.GU16337@c4.convolution.nl
          - 20060920203935.GD9337@klangraum
          - 20060920224341.GV16337@c4.convolution.nl
          - 20060920234308.GF9337@klangraum
          - 20060920233405.GB11475@wall.org
          - 20060921081003.GX16337@c4.convolution.nl
          - 20060921222438.GA23602@wall.org
          - 20060921223447.GH16337@c4.convolution.nl
          - 20060921224450.GA24119@wall.org
          - 57494.80.98.159.250.1158621728.squirrel@www.hunhost.com
          - 20060917013831.15426.qmail@lists.develooper.com
          - 20060910144650.O43587@bowser.eecs.harvard.edu
          - 20060916174746.GE19031@klangraum
        posters:
          - email: mark@summersault.com
            name: Mark Stosberg
          - email: trey@eecs.harvard.edu
            name: Trey Harris
          - email: mail@gedankenkonstrukt.de
            name: Thomas Wittek
          - email: schwigon@webit.de
            name: Steffen Schwigon
          - email: amir.aharoni@gmail.com
            name: Amir E. Aharoni
          - email: david@cantrell.org.uk
            name: David Cantrell
          - email: juerd@convolution.nl
            name: Juerd
          - email: pagaltzis@gmx.de
            name: A. Pagaltzis
          - email: doughera@lafayette.edu
            name: Andy Dougherty
          - email: merlyn@stonehenge.com
            name: merlyn
          - email: stevep@metalogicplc.com
            name: Steve Pitchford
          - email: larry@wall.org
            name: Larry Wall
          - email: concept@conceptonline.hu
            name: Fagyal Csongor
        subject: 'Re: the CGI.pm in Perl 6'
        summary: ''
      - date_from: 1159449076
        date_to: 1159452168
        hidden: ~
        message_id: 451BCA03.1010002@conceptonline.hu
        messages:
          - 20060928132135.242730@gmx.net
          - 451BD618.3030901@conceptonline.hu
          - 20060928132338.GY32741@c4.convolution.nl
        posters:
          - email: concept@conceptonline.hu
            name: Fagyal Csongor
          - email: pagaltzis@gmx.de
            name: A. Pagaltzis
          - email: juerd@convolution.nl
            name: Juerd
        subject: xx operator
        summary: |-
          Fagyal Csongor included some code which gave an unexpected result and
          wondered if the code or Pugs was at fault.
          A. Pagaltzis replied that the `xx` operator is list-repeat rather
          than string-repeat.  Juerd also explained further, and the code was
          fixed.
    title: Users
  - name: perl6-compiler
    threads:
      - date_from: 1159422558
        date_to: 1159680680
        hidden: ~
        message_id: c711ff240609272249q4f1e8988ra31289f081e3e5d4@mail.gmail.com
        messages:
          - c711ff240609302231o1b2f5ac5ocfccfa7f4055295a@mail.gmail.com
        posters:
          - email: agentzh@gmail.com
            name: Agent Zhang
        subject: Synopses on the smoke server are a bit out-of-date
        summary: |-
          Agent Zhang reported that the synopses on the smoke server are out of
          date--r12432 as compared to version r12466 on feather, which syncs every
          hour.
    title: Compiler
title: Weekly Perl 6 mailing list summary
