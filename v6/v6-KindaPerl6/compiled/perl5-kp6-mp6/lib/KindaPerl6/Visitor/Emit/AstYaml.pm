# Do not edit this file - Generated by MiniPerl6
use v5;
use strict;
use MiniPerl6::Perl5::Runtime;
use MiniPerl6::Perl5::Match;

package KindaPerl6::Visitor::Emit::AstYaml;
sub new { shift; bless {@_}, "KindaPerl6::Visitor::Emit::AstYaml" }

sub visit {
    my $self   = shift;
    my $List__ = \@_;
    my $node;
    my $node_name;
    do { $node = $List__->[0]; $node_name = $List__->[1]; [ $node, $node_name ] };
    do {
        if   ( ( $node_name eq 'CompUnit' ) ) { return ( $node->emit_ast_yaml( $self->{visitor_args}->{'secure'} ) ) }
        else                                  { return (' ') }
        }
}

package CompUnit;
sub new { shift; bless {@_}, "CompUnit" }

sub emit_ast_yaml {
    my $self   = shift;
    my $List__ = \@_;
    my $args_secure;
    do { $args_secure = $List__->[0]; [$args_secure] };
    Main::emit_yaml($self);
}

1;
