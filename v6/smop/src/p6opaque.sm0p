#include <stdlib.h>
#include <assert.h>
#include <stdio.h>
#include <smop.h>
#include <smop_oo.h>
#include <smop_lowlevel.h>

/*
class p6opaque {
  has $.WHENCE;
  has metadata $.metadata;
}
class metadata {
  has $.how;
  has $.package;
  has @.isa;
  has @.does;
  has %.class_storage;
  has @.attributes;
  has %.methods of Array;
  has %.submethods of Array;
}
*/
SMOP__Object* SMOP__p6opaque__RI;
typedef struct SMOP_p6opaque_metadata {
  SMOP__Object__BASE
  SMOP__Object* how;
  SMOP__Object* package;
  SMOP__Object* does;
  SMOP__Object* class_storage;
  SMOP__Object* attributes;
  SMOP__Object* methods;
  SMOP__Object* submethods;
} SMOP_p6opaque_metadata;

typedef struct SMOP_p6opaque {
  SMOP__Object__BASE
  SMOP__Object *metadata;
  SMOP__Object *instance;
} SMOP_p6opaque;

static SMOP__Object* p6opaque_message(SMOP__Object* interpreter,
                                      SMOP__ResponderInterface* self,
                                      SMOP__Object* identifier,
                                      SMOP__Object* capture) {
  SMOP__Object* ret = SMOP__NATIVE__bool_false;
  SMOP_p6opaque* invocant = (SMOP_p6opaque*) capture;
  SMOP_p6opaque_metadata* metadata = (SMOP_p6opaque_metadata*) invocant->metadata;
  if (identifier == SMOP__ID__REPR_CREATE) {
    invocant->instance = SMOP__NATIVE__bool_false;
    invocant->metadata = SMOP__NATIVE__bool_false;
  } else if (identifier == SMOP__ID__DESTROYALL) {
    SMOP_RELEASE(interpreter,invocant->instance);
    SMOP_RELEASE(interpreter,invocant->metadata);
  }
  SMOP_RELEASE(interpreter,capture);
  return ret;
}

void smop_p6opaque_init() {
  SMOP__p6opaque__RI = calloc(1,sizeof(SMOP__ResponderInterface));
  ((SMOP__ResponderInterface*)SMOP__p6opaque__RI)->MESSAGE = p6opaque_message;
  ((SMOP__ResponderInterface*)SMOP__p6opaque__RI)->REFERENCE = smop_lowlevel_generic_reference;
  ((SMOP__ResponderInterface*)SMOP__p6opaque__RI)->RELEASE = smop_lowlevel_generic_release;
  ((SMOP__ResponderInterface*)SMOP__p6opaque__RI)->id = "p6opaque";
}

void smop_p6opaque_destr() {
  free(SMOP__p6opaque__RI);
}
