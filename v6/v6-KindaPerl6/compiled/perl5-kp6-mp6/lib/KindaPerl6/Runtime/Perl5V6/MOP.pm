{

    package KindaPerl6::Runtime::Perl5V6::MOP;

    # Do not edit this file - Perl 5 generated by HASH(0x8f88db0)
    # AUTHORS, COPYRIGHT: Please look at the source file.
    use v5;
    use strict;
    use Data::Bind;
    use KindaPerl6::Runtime::Perl5V6::Runtime;
    sub {
        do {
            my $Class_cache;
            my $Class_metaobject;
            use Class::MOP;
            ( $::Proto_Class::MOP::Attribute = 'Class::MOP::Attribute' );
            ( $::Proto_Class::MOP::Class     = 'Class::MOP::Class' );
            $Class_cache = $::Proto_Class::MOP::Class->create_anon_class()

                ;
            $Class_cache->add_method(
                'add_method',
                sub {
                    my $List__;
                    my $self;
                    my $name;
                    my $code;
                    bind_op( '$self' => \$_[0] );
                    bind_op( '$name' => \$_[1] );
                    bind_op( '$code' => \$_[2] );
                    $self->cache()->add_method( $name, $code );
                }
            );
            $Class_cache->add_attribute( $::Proto_Class::MOP::Attribute->new( 'cache', 'accessor', 'cache' ) );
            $Class_metaobject = $Class_cache->new_object()

                ;
            $Class_metaobject->cache($Class_cache);
            $Class_metaobject->add_method(
                'PROTOTYPE',
                sub {
                    my $proto;
                    my $List__;
                    my $self;
                    bind_op( '$self' => \$_[0] );
                    $proto = $self->cache()->new_object()

                        ;
                    return ($proto);
                }
            );
            $Class_metaobject->add_method(
                'HOW',
                sub {
                    my $List__;
                    my $self;
                    bind_op( '$self' => \$_[0] );
                    return ($Class_metaobject);
                }
            );
            ( $::Proto_Class = $Class_metaobject );
            $::Proto_Class->HOW()->add_method(
                'add_attribute',
                sub {
                    my $List__;
                    my $self;
                    my $attr_name;
                    bind_op( '$self'      => \$_[0] );
                    bind_op( '$attr_name' => \$_[1] );
                    $self->cache()->add_attribute( $::Proto_Class::MOP::Attribute->new( $attr_name, 'accessor', $attr_name ) );
                }
            );
            $::Proto_Class->HOW()->add_method(
                'new',
                sub {
                    my $new;
                    my $List__;
                    my $self;
                    bind_op( '$self' => \$_[0] );
                    $new = $self->cache()->new_object()

                        ;
                    $new->cache( $::Proto_Class::MOP::Class->create_anon_class() );
                    $new->add_method(
                        'HOW',
                        sub {
                            my $List__;
                            $new;
                        }
                    );
                    $new->add_method(
                        'new',
                        sub {
                            my $List__;
                            $new->new_object();
                        }
                    );
                    $new;
                }
            );
            $::Proto_Class->HOW()->add_method(
                'new_object',
                sub {
                    my $new;
                    my $List__;
                    my $self;
                    bind_op( '$self' => \$_[0] );
                    $new = $self->cache()->new_object()

                        ;
                    return ($new);
                }
            );
            }
        }
        ->();
    1
}
