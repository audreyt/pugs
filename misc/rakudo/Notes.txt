Here is a 2008-Mar-05 conversation from #parrot, describing what
remained to be done to get yaml dumping of ast's working.

2008-Mar-05 from #parrot

(01:11:15 PM) avar: what handles the --target emitting?
(01:11:27 PM) pmichaud: Parrot's Dumper.pbc
(01:11:31 PM) pmichaud: and PGE::Dumper
(01:11:43 PM) pmichaud: runtime/parrot/library/PGE/Dumper.pir
(01:17:08 PM) particle: ...and particle committed runtime/parrot/library/yaml_dumper.pir for yaml emitting
(01:19:18 PM) nopaste: "particle" at 24.19.3.148 pasted "patch to enable yaml output with pct" (31 lines) at http://nopaste.snit.ch/12444
(01:19:56 PM) particle: that patch allows you to emit yaml instead of dumper format
(01:20:32 PM) particle: however, the pmc types need a helper function to emit yaml appropriately
(01:21:00 PM) particle: likely that just means that the base past object type needs that helper function
(01:22:16 PM) pmichaud: there isn't a base past object type
(01:22:24 PM) pmichaud: (well, it's Capture_PIR)
(01:22:35 PM) pmichaud: but the other pmc types are just the Parrot PMC types
(01:23:17 PM) particle: right now, if i type >perl 6 --target=past
(01:23:20 PM) particle: > say 1;
(01:23:22 PM) particle: ---
(01:23:22 PM) particle: {
(01:23:22 PM) particle:     "past" : pmcPAST::Block
(01:23:22 PM) particle: !PAST::Block { ... },
(01:23:22 PM) particle: }
(01:23:51 PM) particle: it's calling the pmcDefault sub in runtime/parrot/library/YAML/Dumper/Default.pir
(01:24:18 PM) particle: however, it should recognize that past nodes are hashes, and call that func
(01:27:21 PM) pmichaud: particle: PAST::Node is more than just Hash
(01:27:34 PM) pmichaud: PAST::Block isa PAST::Node isa Capture_PIR isa Hash+ResizablePMCArray
(01:27:50 PM) pmichaud: actually
(01:27:55 PM) particle: pmichaud: okay, then it needs a helper function called 'yaml'
(01:28:10 PM) pmichaud: PAST::Block isa PAST::Node isa Capture_PIR
(01:28:29 PM) pmichaud: Capture_PIR has Hash has ResizablePMCArray has Scalar
(01:28:45 PM) pmichaud: feel free to create a 'yaml' function for Capture_PIR :-)
(01:28:53 PM) pmichaud: (function or method?)
end of thread.

"patch to enable yaml output with pct" (31 lines) at http://nopaste.snit.ch/12444:
START OF PATCH
Index: compilers/pct/src/PCT/HLLCompiler.pir
===================================================================
--- compilers/pct/src/PCT/HLLCompiler.pir	(revision 26206)
+++ compilers/pct/src/PCT/HLLCompiler.pir	(working copy)
@@ -514,7 +514,7 @@
     if null $P0 goto interactive_loop
     unless target goto interactive_loop
     if target == 'pir' goto target_pir
-    '_dumper'($P0, target)
+    'yaml'($P0, target)
     goto interactive_loop
   target_pir:
     say $P0
@@ -585,7 +585,7 @@
     $P0 = self.'eval'(code, adverbs :flat :named)
     if target == '' goto end
     if target == 'pir' goto end
-    '_dumper'($P0, target)
+    'yaml'($P0, target)
   end:
     .return ($P0)
 
@@ -633,7 +633,7 @@
     .param pmc args
     .param pmc adverbs         :slurpy :named
 
-    load_bytecode 'dumper.pbc'
+    load_bytecode 'yaml_dumper.pbc'
     load_bytecode 'PGE/Dumper.pbc'
 
     ##  get the name of the program
END OF PATCH
