TODO for Pugs::Compiler::Rule (PCR)

Perl 6 parser:

- implement Perl 6 minilanguages (and categories).
  each language generate entries for the tokenizer hash
  <%statement_control|%prefix|%term>
- implement the main tokenizer using the minilanguages as terms

Priorities:

- features used in PGE P6 Grammar
- <after ...>
- char classes

- make PadWalker optional, as most distros don't hold PW 1.0

- move files to /perl5; fix paths in Makefile.PL

- Match: .from and .to not implemented in subrules

- '%var := xxx'; '@var := xxx'; %<var> := ; @<var> :=

- rule parameters 

- :P5 rules

- add placeholder 'not implemented' messages in the right places

- make Emitter::Rule::Perl5 subclassable - such that closures can be 
  parsed/compiled by a custom parser
- make the 'return' block functionally detectable (instead of regex)
- cleanup any remaining source filtering

Bugs:

- $variable should look into the user pad

Categories:

- see "Syntactic categories" in S05 (extensibility)

- finish documenting add_op( %options )

- return AST

- memoize/recompile dynamically

- special cases (test):
  <tight> <op>+ [<tight> <op>+]* <tight>?
  1;;;2  - ignore extra ;;?
  1,,2
  1, 2,
  1 Y 2 Y 
  loop ($a;;$b) { ... } - special form via macro?

Tests:

- add categories looser/tighter than current boundaries

- backtracking control ':' 

- <'... <?... <!...

- more tests (port from lrep)
  
Related projects:

- implement (optional?) PCR in pugs

- use PCR in lrep
  - merge the 'dual engine' in PCR (used by the lrep-compiled grammar)

- implement Pugs::Compiler::PILN ?
  - not a priority - p5 could load ready-made YAML from Pugs

Other:

- see 'not implemented' messages in Pugs::Emitter::Rule::Perl5

- migrate Pugs::Grammar::Rule::Rule compilation to PCR

- cleanup the engine: it is both returning the match, and building the match tree.
  There is no need to return the match.

- closures should be called on the Match object

- rule documentation (shorter than S05)
- examples of use

- incomplete rule syntax (see Pugs::Compiler::Rule pod); 
- more escaped chars

- Switches (:p is implemented)

- 'Pugs::Grammar::Rule' - old p5 code... -- 'use' in P:G:R

- optimization: inline code in the Engine; 
- "pre-generate" engine output?
- see "RuleInline.pl"

- cached precompiled variable rules, per S05

- bug: can only access parameters through $^a $^b...
- bug: parameters must be constants

Implementation notes:

- maybe change PCR->code() to PCR->as_method()
