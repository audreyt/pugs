{

    package Hash;

    # Do not edit this file - Perl 5 generated by KindaPerl6
    use v5;
    use strict;
    no strict 'vars';
    use constant KP6_DISABLE_INSECURE_CODE => 0;
    use KindaPerl6::Runtime::Perl5::Runtime;
    my $_MODIFIED;
    BEGIN { $_MODIFIED = {} }

    BEGIN {
        $_ =
          ::DISPATCH( $::Scalar, "new",
            { modified => $_MODIFIED, name => "$_" } );
    }
    do {
        if (
            ::DISPATCH(
                ::DISPATCH(
                    ::DISPATCH( $GLOBAL::Code_VAR_defined, 'APPLY', $::Hash ),
                    "true"
                ),
                "p5landish"
            )
          )
        {
        }
        else {
            do {
                ::MODIFIED($::Hash);
                $::Hash = ::DISPATCH(
                    ::DISPATCH(
                        $::Class, 'new',
                        ::DISPATCH( $::Str, 'new', 'Hash' )
                    ),
                    'PROTOTYPE',
                );
              }
        }
    };
    ::DISPATCH(
        ::DISPATCH( $::Hash, 'HOW', ),
        'add_parent',
        ::DISPATCH( $::Str, 'new', 'Container' )
    );
    ::DISPATCH(
        ::DISPATCH( $::Hash, 'HOW', ),
        'add_method',
        ::DISPATCH( $::Str, 'new', 'perl' ),
        ::DISPATCH(
            $::Method,
            'new',
            sub {
                my $pair;
                $pair =
                  ::DISPATCH( $::Scalar, 'new',
                    { modified => $_MODIFIED, name => '$pair' } )
                  unless defined $pair;

                BEGIN {
                    $pair =
                      ::DISPATCH( $::Scalar, 'new',
                        { modified => $_MODIFIED, name => '$pair' } );
                }
                my $s;
                $s =
                  ::DISPATCH( $::Scalar, 'new',
                    { modified => $_MODIFIED, name => '$s' } )
                  unless defined $s;

                BEGIN {
                    $s =
                      ::DISPATCH( $::Scalar, 'new',
                        { modified => $_MODIFIED, name => '$s' } );
                }
                my $List__ =
                  ::DISPATCH( $::Array, 'new',
ss defined $CAPTURE;

                BEGIN {
                    $CAPTURE =
                      ::DISPATCH( $::Scalar, 'new',
                        { modified => $_MODIFIED, name => '$CAPTURE' } );
                }
                ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                do {
                    ::MODIFIED($List__);
                    $List__ = ::DISPATCH( $CAPTURE, 'array', );
                };
                ::DISPATCH( $::Kp6Security, 'guard_unsecure_code', );
                ::DISPATCH( $::Int, 'new', 42 );
            }
        )
      )

      ;
    1
}

