=pod

=encoding utf8

=head1 NAME

Muldis::DB::Copying -
Matters of ownership, licensing, contributions

=head1 VERSION

This document is Muldis::DB::Copying version 0.3.0.

=head1 DESCRIPTION

This document is about copyright issues concerning the Muldis::DB
framework, both as they are now, and how they are anticipated to be in the
future.

These may very well be intuitive, but the principle of least surprise will
be followed such that they are explicitly spelled out anyway, so that no
one is surprised later on.

First note that Muldis::DB was renamed from "QDRDBMS" in 2007.06, and that
was renamed from "Rosetta" in 2006.  In this document, any reference to
"Muldis::DB" should be read as "Muldis::DB, QDRDBMS, Rosetta, and any
derived works of either".

=head1 COMPOSITION

For the purposes of this document, the I<Muldis::DB framework core> aka the
I<Muldis::DB framework> aka the I<core> is composed entirely of, and only
of, all the files included with this Muldis::DB distribution in its C<lib/>
and C<t/> directories.  While there are a few other files in this
distribution, they are of relatively little importance as far as copyright
issues of the Muldis::DB core go, and can be ignored for the purposes of
this document.

While this Muldis::DB distribution is expected to evolve in content over
time, it is expected that its functionality will be generally limited to
the following: 1. Providing a complete set of container data types to
represent Perl-hosted Abstract Muldis D (L<Muldis::DB::Literal>); 2.
Providing a parser and generator of Concrete Muldis D (also
L<Muldis::DB::Literal>); 3. Providing a complete public API for the Muldis
DB virtual machine (L<Muldis::DB::Interface>); 4. Providing a complete but
simple reference implementation of a Muldis DB Engine
(L<Muldis::DB::Engine::Example>); 5. Providing a complete reusable test
suite to help prove if any Engine implements Muldis D properly
(L<Muldis::DB::Validator>); 6. A test suite for parts of the aforementioned
in isolation, particularly #s 1 and 3.  It is not expected that the core
Muldis DB distribution would ever have any other substantial functionality,
and that such would be distributed separately instead.

While this Muldis::DB distribution could potentially have included
copyright-significant extra files, particularly in a C<examples/>
directory, which are explicitly not part of the core, and which may be the
copyright of other parties, such things will instead be distributed
separately to keep various matters simpler; in the case of C<examples/>,
such would likely be part of a separate L<Muldis::DB::Cookbook>
distribution.

=head1 OWNERSHIP

Presently, all of the Muldis::DB framework core files are owned entirely by
Darren Duncan, the sole copyright holder, all rights reserved; there are no
co-owners to consult.

Presently, all of the Muldis::DB framework core files have been created and
maintained entirely by Darren, both code and documentation, save for small
amounts of casual assistance by other people.  This consists mainly of
providing advice in discussions that went to improve Muldis::DB, or in
correcting minor code details or typos.  Any exceptions are specifically
mentioned in AUTHOR or ACKNOWLEDGEMENTS documentation.

In accordance with common sense, it is maintained that none of the
assistance received to date, save any specifically mentioned, is enough to
warrant partial ownership of affected portions of Muldis::DB to the other
people, and so they remain entirely Darren's.

Likewise, Darren disclaims any possible ownership over portions of other
peoples' projects where contributions to said by Darren were minor and
casual, and even with more major contributions, Darren disclaims any
ownership interest in them, unless explicitly stated otherwise.

=head1 LICENSING

All components of the Muldis::DB framework that Darren owns, particularly
the core, are now and pledged to forever be available under at least one
free / liberated and open source software (FLOSS) license.  This grants all
users the right to use it for any purpose, to make modifications, and to
redistribute both the pristine and modified versions.  The specific license
terms may differ for each component, and are specified in that component's
documentation.

This is a summary of their licensing terms, usually taking the core as an
example, but what is written in the components themselves takes precedence;
regarding the core, see the LICENSE AND COPYRIGHT documentation in the
L<Muldis::DB> file.

This Muldis::DB core distribution is currently licensed under the GNU
General Public License (GPL), version 3.0 or later.

These licensing terms are being applied to Muldis::DB because the copyright
holder agrees with, and wants to support, the principles of user freedom
provided by use of the GPL, which users should hopefully appreciate.

I<For the record, the copyright holder would actually prefer to license
works instead under the GNU Affero General Public License (AGPL) version 3
or later, which offers stronger protection of freedoms than the vanilla GPL
to those who interact with the works over a network, and the AGPL will be
the license of choice for the works that are applications.  However, for
the Muldis DB framework core, which is conceptually more of a library, the
vanilla GPL is being used instead as a strategic choice to help encourage
wider adoption among developers of derived works.  But since the AGPL is
GPL compatible, larger works encompassing Muldis DB can still be AGPL.>

The copyright holder has no intention of broadly releasing Muldis::DB
itself under any license that is not compatible with the GPL, and has
little intention of broadly releasing Muldis::DB under a non-copyleft
license.  A broad release under a license like BSD or MIT would be
irrevocably granting the legal means for anyone to make non-free
derivatives, due to other licenses having weaker protections for indirect
recipients of covered works.  The copyright holder currently believes that
a broad release under the GPL license would be best, but is willing to
consider switching to an LGPL licensed broad release instead, if doing so
would have strategic value to benefit the free software community, and
would increase the adoption of Muldis DB.

The copyright holder would prefer that it be possible for everyone to
employ Muldis::DB according to the GPL.  The GPL/proprietary dual-license
is not intended as a developer-extortion measure to build a business with;
in fact, it would often be the case that the proprietary licenses would be
provided at no cost, meaning the copyright holder makes no financial gain
at all from them; rather, the copyright holder intends to build a business
with Muldis::DB in the same ways that the GPL permits everyone else to,
such as by selling GPL-licensed copies for a fee, and support services, and
warranties, and sponsored improvements, and by using Muldis::DB as a
platform to build other works on; a unique selling proposition of the
copyright holder for this is that, being the creator, they know and can
support the product best.

The main reason that proprietary licenses are also offered for Muldis::DB
is that, for some potential users, various legal or business or
compatibility concerns create an environment where it is not feasible for
them to employ GPL-licensed works, and so customized proprietary licenses
should address these concerns so that it is still possible for them to
employ Muldis::DB to meet their needs.  The copyright holder values any
reasonable means by which the most people possible can use Muldis::DB.

There should not be any rationale for rejecting Muldis::DB as a solution
due to its license(s); but if that assumption proves to be false, then
workable arrangements should still be possible on a case by case basis.

All extensions to the Muldis::DB framework, that Darren creates, whose sole
purpose is to enable other free software modules or applications on top of
Muldis::DB, such as Tangram or DBIx::Class or Bricolage, will typically be
individually licensed under the same terms as those components being
enabled.

For example, "DBIx::Class::Storage::Muldis::DB is free software and is
licensed under the same terms as DBIx::Class itself".

A primary advantage of this approach is that the enabling glue code can be
both distributed with the enabled module or application regardless of the
latter's license, and the latter can choose to refactor itself by moving
code from the glue code to itself, without affecting its licensing
implications.  It also makes conceptual sense, since the glue is more part
of the enabled component than Muldis::DB.

=head1 CONTRIBUTIONS

The copyright holder of Muldis::DB welcomes and encourages contributions
towards improving Muldis::DB from anyone and at any time, big or small, and
for any part of the system.

Considering Muldis::DB's heavily componentized design, some improvements
are best included in the core, and others are best done as externally
distributed extensions.  As Muldis::DB matures, changes to extensions
should become the more common way to extend it than modifying the core is,
since a mature core should readily support a wide variety of extensions.

In the case of extensions that you write and distribute separately, you
retain ownership of them as usual.

If your contribution fits best inside one of Darren's modules and is
non-trivial, then you would normally retain ownership of that contribution
unless you grant said ownership to Darren.

In the case of the Muldis::DB core modules, Darren will require the
transfer of ownership for your contribution (which can be done, eg, with an
informal statement by email), as a precondition for merging that into the
official releases of the core modules.  This is done so that sole ownership
of said core modules can be maintained, and Darren can then still
unilaterally re-license Muldis::DB in the future, should that become
necessary.  (But you can still reuse your contributed code as you see fit
in external projects.)

If you refuse the ownership transfer, then Darren will not accept the
contribution into the Muldis::DB core distribution, or may possibly rewrite
the contribution instead, in which case the contribution would effectively
be 'advice'.

As an exception to the above, material changes to a core module that are
distributed independently as a patch may remain yours.

In a worst case scenario, you are always allowed to fork Muldis::DB, and
have shared ownership in your alternate version, though the Muldis::DB
copyright holder would hope that a fork would never happen.

=head1 CONCLUSION

Darren Duncan created Muldis::DB in the hope that it would be greatly
useful to and be used by a lot of people, and through its use, lead to
positive change in society.  Releasing it as free software should take care
that it serves this purpose over the long term.  But it is also hoped that
Muldis::DB can contribute to the ability of its copyright holder to earn a
living over the long term.  Hopefully the policies that have been laid out
in this document are fair and acceptable to everyone.

=head1 SEE ALSO

Go to L<Muldis::DB> for the majority of distribution-internal references,
and L<Muldis::DB::SeeAlso> for the majority of distribution-external
references.

=head1 AUTHOR

Darren Duncan (C<perl@DarrenDuncan.net>)

=head1 LICENSE AND COPYRIGHT

This file is part of the Muldis::DB framework.

Muldis::DB is Copyright © 2002-2007, Darren Duncan.

See the LICENSE AND COPYRIGHT of L<Muldis::DB> for details.

=head1 ACKNOWLEDGEMENTS

The ACKNOWLEDGEMENTS in L<Muldis::DB> apply to this file too.

=cut
