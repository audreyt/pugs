{

    package Main;

    # Do not edit this file - Perl 5 generated by KindaPerl6
    use v5;
    use strict;
    no strict 'vars';
    use constant KP6_DISABLE_INSECURE_CODE => 0;
    use KindaPerl6::Runtime::Perl5::KP6Runtime;
    my $_MODIFIED;
    BEGIN { $_MODIFIED = {} }
    BEGIN { $_ = ::DISPATCH( $::Scalar, "new", { modified => $_MODIFIED, name => "$_" } ); }
    {
        my $List_visitors = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List_visitors' } );
        my $emit_p5;
        $emit_p5 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$emit_p5' } ) unless defined $emit_p5;
        BEGIN { $emit_p5 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$emit_p5' } ) }
        my $code;
        $code = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$code' } ) unless defined $code;
        BEGIN { $code = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$code' } ) }
        my $pos;
        $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
        BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
        my $len;
        $len = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$len' } ) unless defined $len;
        BEGIN { $len = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$len' } ) }
        do {
            if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_VAR_defined, 'APPLY', $::Main ), "true" ), "p5landish" ) ) { }
            else {
                {
                    my $List_visitors = ::DISPATCH( $::Array, 'new', { modified => $_MODIFIED, name => '$List_visitors' } );
                    my $emit_p5;
                    $emit_p5 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$emit_p5' } ) unless defined $emit_p5;
                    BEGIN { $emit_p5 = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$emit_p5' } ) }
                    my $code;
                    $code = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$code' } ) unless defined $code;
                    BEGIN { $code = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$code' } ) }
                    my $pos;
                    $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) unless defined $pos;
                    BEGIN { $pos = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$pos' } ) }
                    my $len;
                    $len = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$len' } ) unless defined $len;
                    BEGIN { $len = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$len' } ) }
                    do {
                        ::MODIFIED($::Main);
                        $::Main = ::DISPATCH( ::DISPATCH( $::Class, 'new', ::DISPATCH( $::Str, 'new', 'Main' ) ), 'PROTOTYPE', );
                        }
                }
            }
        };
        use KindaPerl6::Runtime::Perl5::KP6Runtime;
        use KindaPerl6::Grammar;
        use KindaPerl6::Traverse;
        use KindaPerl6::Ast;
        use KindaPerl6::Grammar::Regex;
        use KindaPerl6::Runtime::Perl6::Compiler;
        use KindaPerl6::Runtime::Perl6::Grammar;
        use KindaPerl6::Visitor::ExtractRuleBlock;
        use KindaPerl6::Visitor::Token;
        use KindaPerl6::Visitor::MetaClass;
        use KindaPerl6::Visitor::Global;
        use KindaPerl6::Visitor::EmitPerl5;
        $List_visitors;
        ::DISPATCH( $List_visitors, 'push', ::DISPATCH( $::KindaPerl6::Visitor::ExtractRuleBlock, 'new', ) );
        ::DISPATCH( $List_visitors, 'push', ::DISPATCH( $::KindaPerl6::Visitor::Token,            'new', ) );
        ::DISPATCH( $List_visitors, 'push', ::DISPATCH( $::KindaPerl6::Visitor::MetaClass,        'new', ) );
        ::DISPATCH( $List_visitors, 'push', ::DISPATCH( $::KindaPerl6::Visitor::Global,           'new', ) );
        ::DISPATCH_VAR( $emit_p5, 'STORE', ::DISPATCH( $::KindaPerl6::Visitor::EmitPerl5, 'new', ) );
        ::DISPATCH_VAR( ::DISPATCH( $emit_p5, 'visitor_args', ), 'STORE', ::DISPATCH( $::Hash, "new", { _hash => { ::DISPATCH( $::Str, 'new', 'secure' )->{_value} => ::DISPATCH( $::Int, 'new', 1 ), } } ) );
        ::DISPATCH( $List_visitors, 'push', $emit_p5 );
        ::DISPATCH_VAR( $code, 'STORE', ::DISPATCH( $GLOBAL::Code_slurp, 'APPLY', ) );
        ::DISPATCH( $COMPILER::Code_env_init, 'APPLY', );
        ::DISPATCH_VAR(
            ::DISPATCH(
                $GLOBAL::Code_ternary_58__60__63__63__32__33__33__62_,
                'APPLY',
                ::DISPATCH( $GLOBAL::Code_VAR_defined, 'APPLY', $COMPILER::source_md5 ),
                $COMPILER::source_md5,
                do {
                    ::MODIFIED($COMPILER::source_md5);
                    $COMPILER::source_md5 = ::DISPATCH( $::Scalar, 'new', );
                    }
            ),
            'STORE',
            ::DISPATCH( $::Str, 'new', 'temporary_value' )
        );
        ::DISPATCH_VAR( $pos, 'STORE', ::DISPATCH( $::Int, 'new', ) );
        ::DISPATCH_VAR( $len, 'STORE', ::DISPATCH( $GLOBAL::Code_length, 'APPLY', $code ) );
        do {
            while ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_infix_58__60__62__62_, 'APPLY', $len, $pos ), "true" ), "p5landish" ) ) {
                {
                    my $match;
                    $match = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$match' } ) unless defined $match;
                    BEGIN { $match = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$match' } ) }
                    my $ast;
                    $ast = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ast' } ) unless defined $ast;
                    BEGIN { $ast = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$ast' } ) }
                    my $res;
                    $res = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$res' } ) unless defined $res;
                    BEGIN { $res = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$res' } ) }
                    ::DISPATCH_VAR( $match, 'STORE', ::DISPATCH( $::KindaPerl6::Grammar, 'comp_unit', $code, $pos ) );
                    ::DISPATCH_VAR( $ast, 'STORE', ::DISPATCH( $match, 'result', ) );
                    do {

                        if ( ::DISPATCH( ::DISPATCH( ::DISPATCH( $GLOBAL::Code_prefix_58__60__33__62_, 'APPLY', ::DISPATCH( $ast, 'isa', ::DISPATCH( $::Str, 'new', 'CompUnit' ) ) ), "true" ), "p5landish" ) ) {
                            {
                                ::DISPATCH(
                                    $GLOBAL::Code_die,
                                    'APPLY',
                                    ::DISPATCH(
                                        $GLOBAL::Code_infix_58__60__126__62_, 'APPLY',
                                        ::DISPATCH( $::Str, 'new', 'AST IS:(' ), ::DISPATCH( $GLOBAL::Code_infix_58__60__126__62_, 'APPLY', ::DISPATCH( $ast, 'result', ), ::DISPATCH( $::Str, 'new', ')' ) )
                                    )
                                    )
                            }
                        }
                        else { ::DISPATCH( $::Bit, "new", 0 ) }
                    };
                    $res;
                    {
                        my $visitor;
                        $visitor = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$visitor' } ) unless defined $visitor;
                        BEGIN { $visitor = ::DISPATCH( $::Scalar, 'new', { modified => $_MODIFIED, name => '$visitor' } ) }
                        for $visitor ( @{ $List_visitors->{_value}{_array} } ) {
                            {
                                ::DISPATCH_VAR( $res, 'STORE', ::DISPATCH( $ast, 'emit', $visitor ) )
                            }
                        }
                    };
                    ::DISPATCH( $GLOBAL::Code_print, 'APPLY', $res );
                    ::DISPATCH_VAR( $pos, 'STORE', ::DISPATCH( $GLOBAL::Code_infix_58__60__43__62_, 'APPLY', $pos, ::DISPATCH( $match, 'to', ) ) )
                }
            }
            }
    };
    1
}
