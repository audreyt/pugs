How to enter various non-ASCII characters in editors

Vim users see ":help digraph-table" and ":digraphs".

There are two ways for Unix/X11 users to enable the compose key:

Either see: 
http://www.gentoo.org/news/en/gwn/20041206-newsletter.xml#doc_chap8

Or run 'xev' to figure out the keycode of whatever key you want to use as your 
compose key (bring the program into focus and type the key, then wade through
the garbage to find the keycode), then put:

    keycode 115 = Multi_key

(Substituting for 115 the keycode you found) Into your $HOME/.xmodmaprc, and
run:

    % xmodmap ~/.xmodmaprc

Note that the compose combinations here are an X11R6 standard, and do not
necessarily correspond to the compose combinations available when you use your
"compose" key.
    
    Unicode     ASCII                        key sequence
    char        fallback    Vim        Emacs       Unix Compose Key combination

    «           <<          ^k < <     C-x 8 <     Compose < <
    »           >>          ^k > >     C-x 8 >     Compose > >
    ¥           Y           ^k Y e     C-x 8 Y     Compose Y =

Set.pm operators (included for reference):
    ≠           !=
    ∩           *
    ∪           +
    ∖           -
    ⊂           <
    ⊃           >
    ⊆           <=
    ⊇           >=
    ⊄      !( $a < $b ) 
    ⊅      !( $a > $b )
    ⊈     !( $a <= $b )
    ⊉     !( $a >= $b )
    ⊊           <
    ⊋           >
    ∋/∍   $a.includes($b)
    ∈/∊   $b.includes($a)
    ∌    !$a.includes($b)
    ∉    !$b.includes($a)


Other unicode characters used as operators in Perl 6 programs should
be added here, so long as the /intent/ of the Unicode code point is an
operator.  That is, this shouldn't be a "that glyph looks the most
like this concept" thing.  If it's not their intended use, don't use
them :).

So, these *might* be considered not too awful;

    ×           *
    ¬           !
    ∕           /
    ≡          =:=
    ≔           :=
  ⩴ or ≝       ::=
  ≈ or ≊        ~~
    …          ...
    √          sqrt()
    ∧           &&
    ∨           ||
    ∣           mod  (? bit of a stretch, perhaps)
   ⌈$x⌉        ceil($x)
   ⌊$x⌋        floor($x)


However I think it is a BAD idea that the following unicode characters
be abused; however ❝cute❞ it might be…

    ╳           *
    ∗           *
    ⊗           *
✱✲✳✴✵✶✷✸✹ etc   *
   ⟨ ⟩         < >
   ⟪ ⟫         « »        (er, I mean << >> ;-) )
    →           ->
    ‼          !(!($a))   (ie, cast to boolean)
   ⁇ ∷        ?? ::
    ∥         || or //
    ¹           **1       (as these glyphs are just "superscript 1" etc)
    ²           **2
    ³           **3
    ☂         eval{ }
    ☝         warn
    ⋯          ...
    ☣          ...
    ☠          !!!
    ☢          ???
   ✁          HERE-doc
   ✃
    ☮         exit(0);

