
Objective:  Create a regex engine written in p6.

Approach:

Start with the "working" p5 yet_another_regex_engine/Regexp_ModuleA.pm
and its t/.  Using the fact that the current elf_f emits p5
which is compatible with normal handwritten p5, incrementally migrate
Regexp_ModuleA.pm into p6, _while keeping it working_.

Once there a p6 version is working, but still emitting p5 and thus
only suitable for p5 backends, then create a version which emits p6.

Milestones:

() Dev environment and regression testing set up.
() P6 version passes t/.
() P6 version emitting P6 passes t/.

PLAN

() Makefile - a hyrid p6/p5 build; t/ regression test.
() Node definitions in p6.
() Migrate analysis methods to p6, one method at a time.
() Migrate emitter methods to p6.
() Setup for second translation phase.
() Migrate emitted code from p5 to p6.

then
() Depending on emitted p6 performance, keep or set aside p5 version.
() Adapt one of the versions to elf and STD.
() Sync with current regex spec.
() Implement ratchet.
() Flesh out and improve.

ISSUES

() Not sure whether to migrate the p5 grammar or not.  STD.pm doesn't
currently have one.


NOTES

/EmitRegexYare.pm is a leftover from a previous attempt in this direction.
Bits of it may be of use.


BASELINE

$ prove t/re_tests.t
t/re_tests....FAILED tests 234, 322, 380, 419, 422, 495-496, 533-536, 598, 806-823, 828, 830-831, 860-861, 866
	Failed 36/961 tests, 96.25% okay
Failed Test  Stat Wstat Total Fail  List of Failed
-------------------------------------------------------------------------------
t/re_tests.t              961   36  234 322 380 419 422 495-496 533-536 598
                                    806-823 828 830-831 860-861 866
Failed 1/1 test scripts. 36/961 subtests failed.
Files=1, Tests=961, 20 wallclock secs (19.05 cusr +  0.26 csys = 19.31 CPU)

$ prove t/rx.t
t/rx....FAILED tests 22, 60-62, 85, 223, 226, 239, 246, 248, 250, 258-259, 264, 329, 365-366, 383, 392, 394, 397, 433-435, 439, 444-445, 502, 508, 513, 515-536
	Failed 52/536 tests, 90.30% okay
Failed Test Stat Wstat Total Fail  List of Failed
-------------------------------------------------------------------------------
t/rx.t                   536   52  22 60-62 85 223 226 239 246 248 250 258-259
                                   264 329 365-366 383 392 394 397 433-435 439
                                   444-445 502 508 513 515-536
Failed 1/1 test scripts. 52/536 subtests failed.
Files=1, Tests=536, 17 wallclock secs (17.30 cusr +  0.35 csys = 17.65 CPU)



NOTES

Comments from EmitRegexYare.pm.
# Backtracking api changes from a Filter::Simple to a s/// method.
# Engine core becomes a prelude.
# Emitters become p6, emitting p5 source.
# IR analysis becomes p6.
# The regexp and regex parsers are temporarily retained, as some of the action logic will need to end up in IRx1_FromAST or elsewhere.
# And the unicode rules will need to be metaprogrammed in p6.
# Discarded:
#  Match - no need for painful 'use overload' games.
#  Functional regex representations - we're bootstrapping on STD.
#  Api and Filter packages - emitter has understanding and control of the code.
#  Interactive shell and command line - though may again need something like it for testing.
