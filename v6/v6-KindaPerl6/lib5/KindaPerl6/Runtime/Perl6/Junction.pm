{

    package Junction;

    # Do not edit this file - Perl 5 generated by KindaPerl6
    use v5;
    use strict;
    no strict 'vars';
    use KindaPerl6::Runtime::Perl5::Runtime;
    my $_MODIFIED;
    BEGIN { $_MODIFIED = {} }

    BEGIN {
        $_ =
          ::DISPATCH( $::Scalar, "new",
            { modified => $_MODIFIED, name => "$_" } );
    }
    do {
        if (
            ::DISPATCH(
                ::DISPATCH(
                    ::DISPATCH(
                        $GLOBAL::Code_VAR_defined, 'APPLY', $::Junction
                    ),
                    "true"
                ),
                "p5landish"
            )
          )
        {
        }
        else {
            do {
                ::MODIFIED($::Junction);
                $::Junction = ::DISPATCH(
                    ::DISPATCH(
                        $::Class, 'new',
                        ::DISPATCH( $::Str, 'new', 'Junction' )
                    ),
                    'PROTOTYPE',
                );
              }
        }
    };
    ::DISPATCH(
        ::DISPATCH( $::Junction, 'HOW', ),
        'add_attribute',
        ::DISPATCH( $::Str, 'new', 'type' )
    );
    ::DISPATCH(
        ::DISPATCH( $::Junction, 'HOW', ),
        'add_attribute',
        ::DISPATCH( $::Str, 'new', 'things' )
    );
    ::DISPATCH(
        ::DISPATCH( $::Junction, 'HOW', ),
        'add_method',
        ::DISPATCH( $::Str, 'new', 'str' ),
        ::DISPATCH(
            $::Method,
            'new',
            sub {
                my $Hash_sep =
                  ::DISPATCH( $::Hash, 'new',
                    { modified => $_MODIFIED, name => '$Hash_sep' } );
                my $List__ =
                  ::DISPATCH( $::Array, 'new',
                    { modified => $_MODIFIED, name => '$List__' } );
                my $self;
                $self =
                  ::DISPATCH( $::Scalar, 'new',
                    { modified => $_MODIFIED, name => '$self' } )
                  unless defined $self;

                BEGIN {
                    $self =
                      ::DISPATCH( $::Scalar, 'new',
                        { modified => $_MODIFIED, name => '$self' } );
                }
                $self = shift;
                my $CAPTURE;
                $CAPTURE =
                  ::DISPATCH( $::Scalar, 'new',
                    { modified => $_MODIFIED, name => '$CAPTURE' } )
                  unless defined $CAPTURE;

                BEGIN {
                    $CAPTURE =
                      ::DISPATCH( $::Scalar, 'new',
                        { modified => $_MODIFIED, name => '$CAPTURE' } );
                }
                ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                do {
                    ::MODIFIED($List__);
                    $List__ = ::DISPATCH( $CAPTURE, 'array', );
                };
                ::DISPATCH_VAR(
                    $Hash_sep,
                    'STORE',
                    ::DISPATCH(
                        $::Hash, "new",
                        {
                            _hash => {
                                ::DISPATCH( $::Str, 'new', 'any' )->{_value} =>
                                  ::DISPATCH( $::Str, 'new', ' | ' ),
                                ::DISPATCH( $::Str, 'new', 'none' )->{_value} =>
                                  ::DISPATCH( $::Str, 'new', ' ! ' ),
                                ::DISPATCH( $::Str, 'new', 'all' )->{_value} =>
                                  ::DISPATCH( $::Str, 'new', ' & ' ),
                                ::DISPATCH( $::Str, 'new', 'one' )->{_value} =>
                                  ::DISPATCH( $::Str, 'new', ' ^ ' ),
                            }
                        }
                    )
                );
                ::DISPATCH(
                    $GLOBAL::Code_infix_58__60__126__62_,
                    'APPLY',
                    ::DISPATCH( $::Str, 'new', '( ' ),
                    ::DISPATCH(
                        $GLOBAL::Code_infix_58__60__126__62_,
                        'APPLY',
                        ::DISPATCH(
                            ::DISPATCH(
                                $GLOBAL::Code_prefix_58__60__64__62_, 'APPLY',
                                ::DISPATCH( $self, "things" )
                            ),
                            'join',
                            ::DISPATCH(
                                $Hash_sep, 'LOOKUP',
                                ::DISPATCH( $self, "type" )
                            )
                        ),
                        ::DISPATCH( $::Str, 'new', ' )' )
                    )
                );
            }
        )
    );
    1
}

