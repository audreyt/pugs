This started as a little exercise for asavige to
learn Haskell.

I started by writing a simple RPN (Reverse Polish Notation)
evaluator in a "natural"/"clear" (non-golf;-) style in Perl 5.
Then converted it to both Perl 6 and Haskell.

Being a TDD Fascist, I naturally wrote a unit test for the
little evaluator function in each of the languages.

Since then, starting with the addition of the piln
sub-directory, this directory has morphed (in a positive way)
as a place to showcase and compare how the same algorithm
and its unit tests are expressed in different languages
(a bit like http://www.99-bottles-of-beer.net/).

Some references:

http://www.perlmonks.org/?node_id=520826
(the p5/p6/haskell code was discussed/analysed there)

http://perlgolf.sourceforge.net/TPR/0/5a/
(in particular, the test cases in the test program)

http://en.wikipedia.org/wiki/Haskell_programming_language
(example of simple Haskell RPN there)

http://www.cse.unsw.edu.au/~dons/code/h4sh/
(in particular, his drop in replacement for HUnit)

On CPAN: Math::RPN, Parse::RPN, Affix::Infix2Postfix
(any others, please let me know).

Cheers,
asavige aka mad golfer (30 Dec 2005)
