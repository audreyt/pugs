CompUnit
"\x23".'line 2 emitted_p5
package Main;
use Data::Dumper;
'.join(";\n",@{$n<statements>})

Val_Int
$n<text>

Apply
if($n<code> =~ /^infix:(.+)$/) {
  my $op = $1;
  my($l,$r)=@{$n<arguments>};
  if($op eq '~'){ "($l . $r)" }
  elsif($op eq ','){ "$l, $r" }
  else { "($l $op $r)" }
}
elsif($n<code> =~ /^circumfix:(.+)/) {
  my $op = $1;
  my($arg)=@{$n<arguments>};
  if(undef) {
  } else {
    $op =~ s/ /$arg/;
    $op  
  }
}
else {
  $n<code>.'('.join(",",@{$n<arguments>}).')'
}

Decl
$n<decl>.' '.$n<var>.($n<default> ? ' = '.$n<default> : '')

Use
""

Val_Buf
local $Data::Dumper::Terse = 1;
my $s = Data::Dumper::Dumper($n<buf>); chomp($s);
$s;

Var
$n<sigil>.$n<name>

If
('if('.$n<test>.")\n".$n<body>."\n"
.join("",map{'elsif('.$_->[0].")\n".$_->[1]."\n"} @{$n<elsif>})
.($n<else> ?  "else\n".$n<else>->[0] : ""))

Block
'{'.join(";\n",@{$n<statements>}).'}'
