---
extra:
  footer:
    - body: |-
        This summary was prepared using
        [Mail::Summary::Tools](http://search.cpan.org/dist/Mail-Summary-Tools/),
        now available on CPAN.
        
        If you appreciate Perl, consider [contributing to the Perl
        Foundation](http://donate.perlfoundation.org) to help support the
        development of Perl.
        
        Yuval Kogman assisted with this summary.
        
        Thank you to everyone who has pointed out mistakes and offered
        suggestions for improving this series.  Comments on this summary can be
        sent to Ann Barcomb, <kudra@domaintje.com>.
      title: Acknowlegements
    - body: |-
        This summary can be found in the following places:
        
        * [use.perl.org](http://use.perl.org/)
        * [The Pugs blog](http://pugs.blogs.com/)
        * [The perl6-announce mailing
          list](http://lists.cpan.org/showlist.cgi?name=perl6-announce)
        * [ONLamp](http://www.oreillynet.com/onlamp/blog/)
      title: Distribution
  header:
    - body: |-
        This summary has been posted early because I will be going to
        OSCON Europe on Sunday.  Next week's summary will include any
        threads which were not included.
      title: This week on the Perl 6 mailing lists
  see_also:
    - name: Perl Foundation activities
      uri: http://blog.perlfoundation.org
    - name: Perl 6 Development
      uri: http://dev.perl.org/perl6
    - name: Planet Perl Six
      uri: http://planetsix.perl.org/perl6
lists:
  - name: perl6-language
    threads:
      - date_from: 1157241441
        date_to: 1157453148
        hidden: ~
        message_id: edd5nt$990$1@sea.gmane.org
        messages:
          - edd8vl$fhi$1@sea.gmane.org
          - 200609050729.36818.philipp.marek@bmlv.gv.at
          - 006701c6d0d8$6c1581e0$0b01a8c0@isolution.nl
          - 20060904224552.J43587@bowser.eecs.harvard.edu
          - 200609050801.32133.philipp.marek@bmlv.gv.at
          - 20060911143009.GA18402@wall.org
          - eddcem$mnq$1@sea.gmane.org
          - 7ca3f0160609021900x57bbb5e4x2aad58e05db982f8@mail.gmail.com
          - edeeba$ulk$1@sea.gmane.org
          - 200609040624.12307.philipp.marek@bmlv.gv.at
          - b9d3c5250609040721m1bc96aa3v1dcdf413c79d4e19@mail.gmail.com
          - 200609050729.36818.philipp.marek@bmlv.gv.at
          - 006701c6d0d8$6c1581e0$0b01a8c0@isolution.nl
          - 20060904224552.J43587@bowser.eecs.harvard.edu
          - 200609050801.32133.philipp.marek@bmlv.gv.at
          - 20060911143009.GA18402@wall.org
          - 200609040624.12307.philipp.marek@bmlv.gv.at
          - b9d3c5250609040721m1bc96aa3v1dcdf413c79d4e19@mail.gmail.com
          - 200609050729.36818.philipp.marek@bmlv.gv.at
          - 006701c6d0d8$6c1581e0$0b01a8c0@isolution.nl
          - 20060904224552.J43587@bowser.eecs.harvard.edu
          - 200609050801.32133.philipp.marek@bmlv.gv.at
          - 20060911143009.GA18402@wall.org
          - 7ca3f0160609021900x57bbb5e4x2aad58e05db982f8@mail.gmail.com
          - edeeba$ulk$1@sea.gmane.org
          - 200609040624.12307.philipp.marek@bmlv.gv.at
          - b9d3c5250609040721m1bc96aa3v1dcdf413c79d4e19@mail.gmail.com
          - 200609050729.36818.philipp.marek@bmlv.gv.at
          - 006701c6d0d8$6c1581e0$0b01a8c0@isolution.nl
          - 20060904224552.J43587@bowser.eecs.harvard.edu
          - 200609050801.32133.philipp.marek@bmlv.gv.at
          - 20060911143009.GA18402@wall.org
        posters:
          - email: mark@summersault.com
            name: Mark Stosberg
          - email: philipp.marek@bmlv.gv.at
            name: Ph. Marek
          - email: rvtol@isolution.nl
            name: Ruud H.G. van Tol
          - email: trey@eecs.harvard.edu
            name: Trey Harris
          - email: larry@wall.org
            name: Larry Wall
          - email: lrpalmer@gmail.com
            name: Luke Palmer
          - email: audreyt.org@gmail.com
            name: Audrey Tang
        subject: multi method dispatching of optional arguments
        summary: |-
          Last week,
          Mark Stosberg wanted the specifications to address what should happen
          in MMD when optional arguments are present (S12).  He patched
          `mmd-draft.txt` and sent the text to the newsgroup.  Luke Palmer
          offered a suggestion.
          
          Ph. Marek wondered if there will be MMD based on the value of parameters,
          as in Haskell.  Audrey Tang confirmed this and pointed to S06.  Trey
          Harris updated it with a reference to S12.  Ruud H.G. van Tol also offered
          an example of syntax.
          
          This week, Larry Wall clarified further, noting that every scalar value
          is a one-element subset of its type.
      - date_from: 1157936007
        date_to: 1158020037
        hidden: ~
        message_id: ee2c1g$nqa$1@sea.gmane.org
        messages:
          - ee4sgu$jf7$1@sea.gmane.org
          - ee4u3d$nbu$1@sea.gmane.org
        posters:
          - email: mark@summersault.com
            name: Mark Stosberg
        subject: Inf appears to be unspec'ed
        summary: |-
          Mark Stosberg was unable to find the formal definitions for `Inf`, `not`
          and `true`.  Later he found them, and was able to add smart links.
      - date_from: 1157947134
        date_to: 1157997103
        hidden: ~
        message_id: C1B4826E-33B7-4B9D-86C6-C966CF24C8C2@audreyt.org
        messages:
          - 20060911175131.GB23978@wall.org
        posters:
          - email: audreyt@audreyt.org
            name: Audrey Tang
          - email: larry@wall.org
            name: Larry Wall
        subject: Reduced assignment operator?
        summary: |-
          Audrey Tang noted that S03 was inconsistent about the treatment of assignment
          operators in the reduction operator. Audrey further commented that she doesn't
          see a problem with supporting assignment reductions as a syntactic exception.
          Larry Wall replied that it was worth supporting.
      - date_from: 1157974519
        date_to: 1158016349
        hidden: ~
        message_id: 20060911113508.851.qmail@web33703.mail.mud.yahoo.com
        messages:
          - 20060911140941.GD19089@localhost.localdomain
        posters:
          - email: lukastic@yahoo.com
            name: Steve Lukas
          - email: rick@bort.ca
            name: Rick Delaney
          - email: cmasak@gmail.com
            name: Carl Mäsak
          - email: juerd@convolution.nl
            name: Juerd
        subject: Outlaw to declare a lexical twice in the same scope
        summary: |-
          Steve Lukas quoted S04: "If you declare a lexical twice in the same
          scope, it is the same lexical."  He felt that declaring the same lexical
          should give an error, because when he does this, he's made a mistake.
          Rick Delaney disagreed; for development or debugging he will often add
          a second declaration line to temporarily override the first.
          Juerd agreed with Steve.  He appreciates that `my $foo` always gives
          a new variable, so he does not need to know anything about the surrounding
          code.  Carl Mäsak also wanted the compiler to catch second declarations.
      - date_from: 1157031938
        date_to: 1157998470
        hidden: ~
        message_id: f60fe000608310645n7103d278i51c279d959bbed4e@mail.gmail.com
        messages:
          - 20060831141614.GG21072@c4.convolution.nl
          - f60fe000608310729v6c4704f5h23347a4aa668a8e1@mail.gmail.com
          - 20060831151226.GH21072@c4.convolution.nl
          - 20060831230658.S43587@bowser.eecs.harvard.edu
          - 20060901081551.GN21072@c4.convolution.nl
          - 20060901011935.P43587@bowser.eecs.harvard.edu
          - 44FC764A.4000808@barco.com
          - 20060911181200.GD23978@wall.org
          - 20060911181415.GE23978@wall.org
          - 7ca3f0160608311448r401da919ra5477f227818433e@mail.gmail.com
          - 1d9a3f400608311452v3fb9af0evf2d018b0c717758@mail.gmail.com
          - dc69626e0608311513l3963c73dk8a08fe361210d7f@mail.gmail.com
          - 20060901080303.GL21072@c4.convolution.nl
          - ef30550b0608311535j1d0bc82ena3164866baf03902@mail.gmail.com
          - 20060901080501.GM21072@c4.convolution.nl
          - 20060901080014.GK21072@c4.convolution.nl
          - b9d3c5250609010410h3141fdbfqf05cabb43778ecac@mail.gmail.com
          - 20060902130421.GQ21072@c4.convolution.nl
          - ca610f250608310748xdba742ep15f82c270b769c9f@mail.gmail.com
        posters:
          - email: markjreed@mail.com
            name: Mark J. Reed
          - email: juerd@convolution.nl
            name: Juerd
          - email: trey@eecs.harvard.edu
            name: Trey Harris
          - email: Thomas.Sandlass@barco.com
            name: TSa
          - email: larry@wall.org
            name: Larry Wall
          - email: lrpalmer@gmail.com
            name: Luke Palmer
          - email: jerry.gay@gmail.com
            name: jerry gay
          - email: michael.snoyman@ucla.edu
            name: Michael Snoyman
          - email: dataweaver@gmail.com
            name: Jonathan Lang
          - email: audreyt.org@gmail.com
            name: Audrey Tang
          - email: sagelt@gmail.com
            name: Sage La Torra
        subject: Naming the method form of s///
        summary: |-
          Earlier,
          Mark J. Reed noted that according to S05, the string method equivalent of     
          `s///` is `subst`.  He felt it might be easily confused with `substr`
          and suggested `replace`.
          
          A long discussion on how the method would actually work followed.
          
          Recently, Larry Wall noted that he should clarify the role of `=`
          with regard to preceding declarators.  They control how often the
          expression is evaluated.
      - date_from: 1157990430
        date_to: 1158344222
        hidden: ~
        message_id: 20060911155951.78358.qmail@web56215.mail.re3.yahoo.com
        messages:
          - 20060911161819.GA21762@wall.org
          - 'a06230901c12b41535c7e@[172.27.1.7]'
          - 20060911173310.GA23978@wall.org
          - 20060911180329.GC23978@wall.org
        posters:
          - email: dbrunton@yahoo.com
            name: David Brunton
          - email: larry@wall.org
            name: Larry Wall
          - email: david.green@telus.net
            name: David Green
          - email: sam@vilain.net
            name: Sam Vilain
          - email: duff@pobox.com
            name: Jonathan Scott Duff
          - email: ajs@ajs.com
            name: Aaron Sherman
        subject: META vs meta
        summary: |-
          David Brunton noted that S12 specifies `$obj.META`, but in Pugs it is
          implemented as `$obj.meta`.  He wanted to know if he could change `meta`
          to `META`.  Larry Wall replied that he was considering renaming the
          method to use interrogative pronouns.  David Green commented on Larry's
          proposed names, and Larry responded.  
          
          Sam Vilain wondered if upper
          case was needed.  Jonathan Scott Duff thought that it fit in with
          Perl's culture.  Aaron Sherman had some other suggestions for avoiding
          namespace pollution.
          
          David Brunton wanted to know if there was some reason that the meta
          methods could not be part of a default function package.  Aaron
          Sherman gave two reasons why this was not desirable.
      - date_from: 1158056798
        date_to: 1158104819
        hidden: ~
        message_id: 20060912102017.GB28644@sike.forum2.org
        messages:
          - b9d3c5250609120346q29d42120y98976173a2482788@mail.gmail.com
          - 20060912105923.GC28644@sike.forum2.org
          - 20060912142622.GA24270@wall.org
        posters:
          - email: gaal@forum2.org
            name: Gaal Yahas
          - email: audreyt.org@gmail.com
            name: Audrey Tang
          - email: larry@wall.org
            name: Larry Wall
          - email: mark@summersault.com
            name: Mark Stosberg
        subject: single named param
        summary: |-
          Gaal Yahas wondered if `:(:$x)` was a single named parameter called $x
          or a default invocant and a single required positional named $x.
          Audrey Tang replied that a default invocant would not make sense
          because there is nothing to default to.   Gaal then wondered what
          invocant is constructed for `method foo ($just_a_named_param)`.  Larry
          Wall replied, and Mark Stosberg also commented.  Audrey answered too.
      - date_from: 1158072681
        date_to: 1158093398
        hidden: ~
        message_id: 20060912145114.EF7DDCBA4D@x12.develooper.com
        messages:
          - 20060912161747.6716.qmail@lists.develooper.com
          - 20060912164853.GA28384@wall.org
          - 20060912203627.13277.qmail@lists.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
          - email: rvtol+news@isolution.nl
            name: Dr.Ruud
          - email: larry@wall.org
            name: Larry Wall
        subject: '[svn:perl6-synopsis] r11965 - doc/trunk/design/syn'
        summary: |-
          Larry Wall made a commit to S03, which led Ruud H.G. van Tol
          to ask if `[=] $x, @y` was equivalent to 
          `$x = @y[0] = @y[1] = @y[2] ... @y[-2] = y[-1]`.  Larry replied
          that they were.  Ruud asked for additional clarification.
      - date_from: 1157307176
        date_to: 1158164320
        hidden: ~
        message_id: 20060903181114.GV27085@sike.forum2.org
        messages:
          - 01A0F56E-F672-4283-9CA9-07AB072D0161@audreyt.org
        posters:
          - email: gaal@forum2.org
            name: Gaal Yahas
          - email: audreyt@audreyt.org
            name: Audrey Tang
        subject: Unpacking tree node parameters
        summary: |-
          Earlier,
          Gaal Yahas asked for some clarification on the intent in S06's "Unpacking     
          tree node parameters" so that he could introduce the optional use of the  
          colon more gradually.
          
          This week,
          Audrey Tang replied with answers to Gaal's questions.
      - date_from: 1158084430
        date_to: 1158138776
        hidden: ~
        message_id: 20060912180701.EEAF7CBA4D@x12.develooper.com
        messages:
          - 4507CB89.4020807@puremagic.com
          - 'p06230900c12d5346e6e1@[192.168.1.101]'
        posters:
          - email: larry@cvs.perl.org
            name: larry
          - email: miro@puremagic.com
            name: Miroslav Silovic
          - email: darren@DarrenDuncan.net
            name: Darren Duncan
        subject: '[svn:perl6-synopsis] r11969 - doc/trunk/design/syn'
        summary: |-
          Several threads grew from Larry Wall's commits on the `X` operator.
          
          Darren Duncan expressed his appreciation for it.
          Miroslav Silovic asked if it would be possible
          to extend `next` to pass arguments to the 'nexted' iterator.  
          
          In thread <msgid:20060912182004.CF999CBA4D@x12.develooper.com>,
          Daniel Hulme requested a variant which does the diagonal order.
          
          <msgid:20060913040934.AE1F8CBA4D@x12.develooper.com> led to
          additional comments.  Carl Mäsak wanted to know why `X-X` is
          needed if `X` already concatenates strings.  Daniel Hulme
          thought it was an incomplete change which should have read
          `XX`.  Carl agreed, but thought `X,X` would be nicer.
      - date_from: 1158085213
        date_to: 1158087800
        hidden: merged with above
        message_id: 20060912182004.CF999CBA4D@x12.develooper.com
        messages:
          - 20060912200302.2bf14ee7@mekanori.mon.istic.org
        posters:
          - email: larry@cvs.perl.org
            name: larry
          - email: masoch@istic.org
            name: Daniel Hulme
        subject: '[svn:perl6-synopsis] r11971 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1158114973
        date_to: 1158114973
        hidden: commit
        message_id: 20060913023603.7850ACBA4D@x12.develooper.com
        posters:
          - email: audreyt@cvs.perl.org
            name: audreyt
        subject: '[svn:perl6-synopsis] r11974 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1158120582
        date_to: 1158141761
        hidden: merged with another comment on X
        message_id: 20060913040934.AE1F8CBA4D@x12.develooper.com
        messages:
          - 16d769b70609122226g143542d0h770aea83c6824dbe@mail.gmail.com
          - 20060913102145.167e31d8@mekanori.mon.istic.org
          - 16d769b70609130302j2461cb8co12d699a8c7ee30@mail.gmail.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
          - email: cmasak@gmail.com
            name: Carl Mäsak
          - email: masoch@istic.org
            name: Daniel Hulme
        subject: '[svn:perl6-synopsis] r11975 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1158156244
        date_to: 1158156244
        hidden: commit
        message_id: 20060913140352.1F99DCBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r11976 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1158170747
        date_to: 1158184890
        hidden: commit
        message_id: 20060913180535.419A4CBA4D@x12.develooper.com
        messages:
          - 'p06230901c12e2eb168f4@[192.168.1.101]'
        posters:
          - email: larry@cvs.perl.org
            name: larry
          - email: darren@DarrenDuncan.net
            name: Darren Duncan
        subject: '[svn:perl6-synopsis] r11977 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1158186035
        date_to: 1158186035
        hidden: commit
        message_id: 20060913222027.A6E2DCBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r11978 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1158194208
        date_to: 1158194208
        hidden: commit
        message_id: 20060914003639.9CC14CBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r11979 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1158233806
        date_to: 1158233806
        hidden: ~
        message_id: 45093EBF.2080006@ajs.com
        posters:
          - email: ajs@ajs.com
            name: Aaron Sherman
        subject: assigning to named parameters
        summary: |-
          Aaron Sherman wondered if it would be possible to treat named parameters
          as lvalues, so that `foo(:a<1>, :b<2>)` could become
          `foo(:a=1, :b=2)`.
      - date_from: 1158251323
        date_to: 1158251323
        hidden: commit
        message_id: 20060914162834.4E287CBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r11980 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1158252021
        date_to: 1158252021
        hidden: commit
        message_id: 20060914164014.83560CBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r11981 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1158253421
        date_to: 1158253421
        hidden: commit
        message_id: 20060914170333.CC254CBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r11982 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1158279744
        date_to: 1158279744
        hidden: commit
        message_id: 20060915002215.3DF88CBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r11983 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1158280174
        date_to: 1158280174
        hidden: commit
        message_id: 20060915002927.1449ECBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r11984 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1158280301
        date_to: 1158280301
        hidden: commit
        message_id: 20060915003134.A03B9CBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r11985 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1158280385
        date_to: 1158280385
        hidden: commit
        message_id: 20060915003259.40991CBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r11986 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1158334755
        date_to: 1158334755
        hidden: commit
        message_id: 20060915153859.304F3CBA4E@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r12006 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1158348518
        date_to: 1158361060
        hidden: ~
        message_id: 450AFED6.5050107@ajs.com
        messages:
          - 20060915204745.GY16337@c4.convolution.nl
          - 20060915210349.GA25798@wall.org
          - 20060915212818.GA16337@c4.convolution.nl
          - 20060915215047.GA29220@pobox.com
          - 20060915225727.GC16337@c4.convolution.nl
          - 20060915215543.GB29220@pobox.com
          - 'p06230900c130d80c1c39@[192.168.1.101]'
          - 20060915232653.GA29465@wall.org
          - 'p06230900c13103fe68f1@[192.168.1.101]'
        posters:
          - email: ajs@ajs.com
            name: Aaron Sherman
          - email: juerd@convolution.nl
            name: Juerd
          - email: larry@wall.org
            name: Larry Wall
          - email: duff@pobox.com
            name: Jonathan Scott Duff
          - email: darren@DarrenDuncan.net
            name: Darren Duncan
        subject: -X file test operators
        summary: |-
          Aaron Sherman raised ambiguity issues between identifiers with dashes in their
          names, like the file test operators, and unary minus (-4). Juerd replied with
          proposals for phasing out `-e` and friends in favour of some more
          flexible/modern approaches. Larry Wall cleared up the syntax for calling
          prefix operators as methods, and other funny method names.
          
          Acording to S05, due to the longest token rule `-e` will be parsed as the prefix
          op `-e`, and not as prefix unary minus and call to `e`. However, this is only
          the case if the prefix operator `-e` is actually defined.
          
          A discussion on identifiers with funny characters in them also started under
          this thread.
        thread_uri: http://thread.gmane.org/gmane.comp.lang.perl.perl6.language/8108/focus=8108
    title: Language
  - name: perl6-internals
    threads:
      - date_from: 1157603446
        date_to: 1157732463
        hidden: new post is just "thanks applied" which I already covered last week
        message_id: rt-3.5.HEAD-31258-1157732455-133.40292-14-0@perl.org
        messages:
          - rt-3.5.HEAD-31259-1157603437-173.40292-72-0@perl.org
          - f5f3b0cb0609110444u7cddeb4ek1a96987d9bab9797@mail.gmail.com
          - f5f3b0cb0609071305q40d6a57cl96025236bc874d03@mail.gmail.com
          - f5f3b0cb0609080912q14422825se5be847f2976bfea@mail.gmail.com
        posters:
          - email: bugs-parrot-track@netlabs.develooper.com
            name: Will Coleda via RT
          - email: parrotbug-followup@parrotcode.org
            name: Will Coleda
          - email: mestre.smash@gmail.com
            name: Nuno Carvalho
        rt_ticket: 'perl #40292'
        subject: '[perl #40292] [TODO] Add JSON tests '
        summary: ''
      - date_from: 1157711932
        date_to: 1157836448
        hidden: There is no post from the 10th on gmane or google; got this last week
        message_id: 200609081238.39612.lt@toetsch.at
        messages:
          - 200609080946.54886.chromatic@wgz.org
          - 450323CA.9090100@tewk.com
          - 200609092313.55199.lt@toetsch.at
        posters:
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: chromatic@wgz.org
            name: chromatic
          - email: tewk@tewk.com
            name: Kevin Tew
        subject: socket related constants
        summary: ''
      - date_from: 1157844642
        date_to: 1157844642
        hidden: ~
        message_id: AB382297-8847-444D-8D64-90CB6BB3EB95@coleda.com
        posters:
          - email: will@coleda.com
            name: Will Coleda
        subject: JSON compiler
        summary: |-
          Will Coleda announced that he had  added a JSON compiler with help 
          from Jerry Gay and Nuno Carvalho.
      - date_from: 1157931974
        date_to: 1157931974
        hidden: ~
        message_id: 200609110146.00366.lt@toetsch.at
        posters:
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: '[svn ci] apps/p3'
        summary: |-
          Leopold Toetsch announced that he'd created a Parrot-based slide
          presentation program.  He requested improvements and suggestions.
      - date_from: 1157934279
        date_to: 1157934279
        hidden: ~
        message_id: rt-3.5.HEAD-31263-1157934271-190.40316-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: fonseka @ gmail . com
        rt_ticket: 'perl #40316'
        subject: '[perl #40316] [NEW] opcodes not tested script '
        summary: |-
          Fonseka created ticket <rt://perl/40316> to include a patch for a
          script which outputs the opcodes not covered by tests.  Currently all
          but 7% of the opcodes are used in real tests.
          
          The thread continued in 
          <msgid:79a6fb1e0609121339r2243275cldf6b14adbea13e8a@mail.gmail.com>,
          after the code was committed as r14594.  Leopold Toetsch commented on
          how disassemble was largely untested, and Fonseka replied.
      - date_from: 1157980619
        date_to: 1157980619
        hidden: summary
        message_id: 20060911131501.2878.qmail@x1.develooper.com
        posters:
          - email: perlbug-summary@perl.org
            name: Parrot Bug Summary
        subject: Parrot Bug Summary
        summary: ''
      - date_from: 1157988754
        date_to: 1158180046
        hidden: ~
        message_id: rt-3.5.HEAD-31259-1157988746-1775.40319-72-0@perl.org
        messages:
          - 20060911192016.GC10150@host.pmichaud.com
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Nuno Carvalho
          - email: pmichaud@pobox.com
            name: Patrick R. Michaud
        rt_ticket: 'perl #40319'
        subject: '[perl #40319] [PATCH] PGE test file written in PIR revisited '
        summary: |-
          In ticket <rt://perl/40319>, Nuno Carvalho reported that he
          had cleaned `t/compilers/pge/06-grammar.t` and included a
          patch.  Patrick R. Michaud noted that test 10 was marked 'todo'
          but passed, and wanted to know why it was marked 'todo'.  Patrick
          applied it as r14606 and r14607.
      - date_from: 1158003415
        date_to: 1158003415
        hidden: ~
        message_id: 4505BAC2.4030807@alfarrabio.di.uminho.pt
        posters:
          - email: albie@alfarrabio.di.uminho.pt
            name: Alberto Simões
        subject: The Interp structure
        summary: |-
          Alberto Simões
          has been trying to improve `compilers/imcc` to make it reentrant
          by removing globals and creating an object with the variables which
          is relevant to the parser.  He noted that an Interp structure is
          being passed, but believes this does not duplicate the functionality
          he is creating, and asked for a confirmation.
      - date_from: 1156533399
        date_to: 1156536249
        hidden: Allison's post adds nothing new
        message_id: 20060825191554.GB4047@tytlal.topaz.cx
        messages:
          - 9CD51F16-8F0A-4642-9600-AE689766C8B3@coleda.com
          - 20060825200325.GC4047@tytlal.topaz.cx
          - 1d9a3f400608251249y39fc0c97hce7c37e58eaefb07@mail.gmail.com
          - 4506FE8F.6060203@perl.org
        posters:
          - email: chip@pobox.com
            name: Chip Salzenberg
          - email: will@coleda.com
            name: Will Coleda
          - email: jerry.gay@gmail.com
            name: jerry gay
          - email: allison@perl.org
            name: Allison Randal
        subject: String.to_int() vs. opcode
        summary: ''
      - date_from: 1157934279
        date_to: 1158093558
        hidden: reply to  rt-3.5.HEAD-31263-1157934271-190.40316-72-0@perl.org
        message_id: 79a6fb1e0609121339r2243275cldf6b14adbea13e8a@mail.gmail.com
        messages:
          - rt-3.5.HEAD-31263-1157934271-190.40316-72-0@perl.org
          - rt-3.5.HEAD-31257-1158088237-267.40316-15-0@perl.org
        posters:
          - email: fonseka@gmail.com
            name: fonseka
          - email: parrotbug-followup@parrotcode.org
            name: fonseka @ gmail . com
        subject: 'Re: [perl #40316] [NEW] opcodes not tested script'
        summary: ''
      - date_from: 1158078474
        date_to: 1158080516
        hidden: ~
        message_id: 4506DFFD.8000206@rblasch.org
        messages:
          - 3FD0A7AE-51E9-4633-9148-4B54E881B5A2@coleda.com
          - 4506E7E7.7030507@rblasch.org
        posters:
          - email: mailing-lists@rblasch.org
            name: Ron Blaschke
          - email: will@coleda.com
            name: Will Coleda
        subject: 'Libraries, dynpmc and Visual C++'
        summary: |-
          Ron Blaschke reported a fatal error when linking `gdbmhash.dll` on
          Windows XP with Visual C++.  Will Coleda applied the patch as r14586 
          and asked for someone using GCC on Win32 to confirm that the code still
          worked.
      - date_from: 1158169373
        date_to: 1158218415
        hidden: ~
        message_id: 200609131042.15334.chromatic@wgz.org
        messages:
          - 200609140919.49689.lt@toetsch.at
          - 0FA76BBA-3B2B-4BDB-AE58-99734D0441FB@hexten.net
        posters:
          - email: chromatic@wgz.org
            name: chromatic
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: andy@hexten.net
            name: Andy Armstrong
        subject: Accelerating Method Dispatch
        summary: |-
          chromatic posted a link to thoughts on method dispatch by 
          [Piers Cawley](http://www.bofh.org.uk/articles/2006/09/13/what-we-have-here-is-an-opportunity-to-accelerate)
          and [Avi Bryant](http://smallthought.com/avi/?p=16).  He wondered if it
          was similar to PIC.  Andy Armstrong replied that the articles describe
          branch prediction for method dispatch, which he felt was different from
          PIC.  Leopold Toetsch thought there were some similarities, and that
          further optimization was possible.
      - date_from: 1158195298
        date_to: 1158311891
        hidden: ~
        message_id: 1a83bc10609131754o52a763e5va3b2c4f7c28a48e1@mail.gmail.com
        messages:
          - 200609151117.57783.lt@toetsch.at
        posters:
          - email: karl.forner@gmail.com
            name: Karl Forner
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: '[TODO] fill Parrot_register_move() with code : new implementation'
        summary: |-
          Karl Forner included a patch to revise `Parrot_register_move()`
          to address some bugs and improve speed.  The algorithm was explained
          in detail.  It was applied as r14621.  Leopold Toetsch commented on
          the implementation.
      - date_from: 1158277369
        date_to: 1158310429
        hidden: ~
        message_id: 1a83bc10609141642l1cb1b240n212e680f2951dc4b@mail.gmail.com
        messages:
          - 200609151053.37858.lt@toetsch.at
        posters:
          - email: karl.forner@gmail.com
            name: Karl Forner
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: HOWTO give options to parrot in tests
        summary: |-
          Karl Forner is working on <rt://perl/40064>.  He is wondering how
          he can run the script with options, and wanted to know if `TEST_PROG_ARGS`
          would be an appropriate choice.  Leopold Toetsch suggested subclassing
          Parrot::Test.
      - date_from: 1158302147
        date_to: 1158302147
        hidden: ~
        message_id: 45099B29.7020407@alfarrabio.di.uminho.pt
        posters:
          - email: albie@alfarrabio.di.uminho.pt
            name: Alberto Simões
        subject: Global Variables Hunting
        summary: |-
          Alberto Simões
          requested that anyone who found a global variable under `IMCC/PIR`
          parser add a 'HITME!' comment near it and alert him.
      - date_from: 1158302148
        date_to: 1158302148
        hidden: ~
        message_id: 4509B18E.4000602@alfarrabio.di.uminho.pt
        posters:
          - email: albie@alfarrabio.di.uminho.pt
            name: Alberto Simões
        subject: cur_namespace under imcc.y
        summary: |-
          Alberto Simões
          wanted to know if `cur_namespace` in `imcc.y` had the same meaning
          as the one in `imc.h`.  He wanted to merge them.
      - date_from: 1158345043
        date_to: 1158345043
        hidden: ~
        message_id: 200609152030.31593.lt@toetsch.at
        posters:
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: Version PMC
        summary: |-
          Leopold Toetsch noted that GMP 4.1.1 segfaulted during multiplication.
          He corrected the problem by compiling and installing a new GMP, but
          he would like to create a diagnostic to warn about the bad GMP
          version.
    title: Parrot Porters
  - name: perl6-users
    threads:
      - date_from: 1157827008
        date_to: 1158185556
        hidden: ~
        message_id: 'p06230900c128b8a02d9b@[192.168.1.101]'
        messages:
          - 20060909191532.12771.qmail@lists.develooper.com
          - 20060910142358.F43587@bowser.eecs.harvard.edu
          - 'p06230900c128dec41e00@[192.168.1.101]'
        posters:
          - email: darren@DarrenDuncan.net
            name: Darren Duncan
          - email: mark@summersault.com
            name: Mark Stosberg
          - email: trey@eecs.harvard.edu
            name: Trey Harris
          - email: mail@gedankenkonstrukt.de
            name: Thomas Wittek
          - email: schwigon@webit.de
            name: Steffen Schwigon
          - email: amir.aharoni@gmail.com
            name: Amir E. Aharoni
          - email: david@cantrell.org.uk
            name: David Cantrell
          - email: fawaka@gmail.com
            name: Leon Timmermans
          - email: doughera@lafayette.edu
            name: Andy Dougherty
          - email: aankhen@gmail.com
            name: Aankhen
          - email: juerd@convolution.nl
            name: Juerd
          - email: michael.snoyman@ucla.edu
            name: Michael Snoyman
          - email: merlyn@stonehenge.com
            name: merlyn
        subject: the CGI.pm in Perl 6
        summary: |-
          Darren Duncan made the suggestion that CGI.pm be improved for Perl 6
          rather than simply ported.  He listed a few ways in which it could
          be improved.  Mark Stosberg replied and mentioned some of the points
          he considered most important.  These suggestions in particular received further
          discussion: removing HTML generation methods, renaming the module,
          and incorporating session management.
          
          Trey Harris agreed with Mark's sentiment
          about excluding HTML methods from CGI.pm, but felt this could lead to
          limited Perl 6 adoption.  Thomas Wittek suggested `use perl5:CGI`
          for legacy support and allowing CGI.pm to develop.  Amir E. Aharoni 
          was also in favor of the backwards-compatibility module, and an improved 
          default.  David Cantrell wondered if anyone was actually using HTML-generation.
          In Andy Dougherty's opinion, there are probably many people using
          it that way, because it features heavily in the documentation.
          Leon Timmermans admitted to using them a few times, and wanted
          a modern equivalent, but in a separate module.  There were a number
          of other comments.  The general gist seemed to be that HTML-generation
          functionality is used and should still be available, but optional.
          
          The discussion of HTML methods led to Steffen Schwigon's observation
          that CGI.pm could use a name change to make it appear more modern.
          Darren Duncan and Juerd also disliked the current name.  David Cantrell
          and Darren discussed whether 'CGI' implies an implementation or a standard
          interface.
          
          In <msgid:dc69626e0609111331o1d33dc87n5b26c918256c5bc@mail.gmail.com>,
          Michael Snoyman suggested making session management easier, and
          perhaps integrating it.  Yuval Kogman requested that session handling 
          be left to a plugin, and offered to share what he had learned from 
          redesigning the Catalyst session handling.
      - date_from: 1157924852
        date_to: 1157924852
        hidden: 'duplicate of p06230900c128b8a02d9b@[192.168.1.101]'
        message_id: 20060910144650.O43587@bowser.eecs.harvard.edu
        posters:
          - email: trey@lopsa.org
            name: Trey Harris
        subject: 'Re: the CGI.pm in Perl 6'
        summary: ''
      - date_from: 1157950356
        date_to: 1158164449
        hidden: ~
        message_id: 4504EB8B.9070603@rusrating.ru
        messages:
          - 20060910224232.A43587@bowser.eecs.harvard.edu
        posters:
          - email: richard@rusrating.ru
            name: Richard Hainsworth
          - email: trey@lopsa.org
            name: Trey Harris
          - email: audreyt@audreyt.org
            name: Audrey Tang
        subject: Trying to use Perl5 modules
        summary: |-
          Richard Hainsworth has been trying to discover how to use Perl 5 modules
          in Perl 6.  He included some code which worked in Perl 5,
          and asked how he could use them in Pugs.  Trey Harris replied that
          imports currently don't work, and showed a workaround.  Audrey Tang
          answered that imports were implemented a few weeks ago, but implicit
          imports aren't supported yet.
          
          Richard also wanted to know where `.can` is documented.
      - date_from: 1157829345
        date_to: 1158185556
        hidden: 'duplicate of p06230900c128b8a02d9b@[192.168.1.101]'
        message_id: 20060909191532.12771.qmail@lists.develooper.com
        messages:
          - 20060910142358.F43587@bowser.eecs.harvard.edu
          - 20060911201333.19368.qmail@lists.develooper.com
          - 874pvdldn5.fsf@teufelkommraus.webit.de
          - 20060912132152.12099.qmail@lists.develooper.com
          - 97f280ea0609120718u4eba6fa0p3a4fd21ad98e7aa5@mail.gmail.com
          - 'p06230900c128dec41e00@[192.168.1.101]'
        posters:
          - email: mark@summersault.com
            name: Mark Stosberg
          - email: trey@eecs.harvard.edu
            name: Trey Harris
          - email: mail@gedankenkonstrukt.de
            name: Thomas Wittek
          - email: schwigon@webit.de
            name: Steffen Schwigon
          - email: amir.aharoni@gmail.com
            name: Amir E. Aharoni
          - email: darren@DarrenDuncan.net
            name: Darren Duncan
          - email: david@cantrell.org.uk
            name: David Cantrell
          - email: fawaka@gmail.com
            name: Leon Timmermans
          - email: doughera@lafayette.edu
            name: Andy Dougherty
        subject: 'Re: the CGI.pm in Perl 6'
        summary: ''
      - date_from: 1158017648
        date_to: 1158055250
        hidden: 'reply to p06230900c128b8a02d9b@[192.168.1.101]'
        message_id: dc69626e0609111331o1d33dc87n5b26c918256c5bc@mail.gmail.com
        messages:
          - 20060912100032.GD13956@woobling.org
        posters:
          - email: michael.snoyman@ucla.edu
            name: Michael Snoyman
          - email: nothingmuch@woobling.org
            name: Yuval Kogman
        subject: 'CGI Session management (was Re: the CGI.pm in Perl 6)'
        summary: ''
      - date_from: 1158041012
        date_to: 1158041012
        hidden: ~
        message_id: 006d01c6d631$272f2320$1115e244@ConradLap
        posters:
          - email: conrad.schneiker@gmail.com
            name: Conrad Schneiker
        subject: Google "Welcome to the home page for Perl 6" (Perl 6 Wiki)
        summary: |-
          Conrad Schneiker noticed that Google had indexed the
          [Perl 6 Wiki](http://rakudo.org/perl6) but that it hasn't yet
          reached the top search results.
      - date_from: 1157829345
        date_to: 1158185556
        hidden: 'yet another duplicate of p06230900c128b8a02d9b@[192.168.1.101]'
        message_id: 20060910142358.F43587@bowser.eecs.harvard.edu
        messages:
          - 20060911201333.19368.qmail@lists.develooper.com
          - 874pvdldn5.fsf@teufelkommraus.webit.de
          - 20060912132152.12099.qmail@lists.develooper.com
          - 'p06230900c12cde1d7114@[192.168.1.101]'
          - 20060913160052.GK1952@bytemark.barnyard.co.uk
          - 'p06230902c12e30eaee25@[192.168.1.101]'
          - 97f280ea0609120718u4eba6fa0p3a4fd21ad98e7aa5@mail.gmail.com
          - 20060913151550.GG1952@bytemark.barnyard.co.uk
          - Pine.LNX.4.62.0609131140060.17562@fractal.phys.lafayette.edu
          - a51e610c0609131521x8904c64r7977ca2442209f38@mail.gmail.com
          - ae697d050609141700r45003586h8e38289a9ca10183@mail.gmail.com
          - 20060915021812.GT16337@c4.convolution.nl
          - 'p06230900c12fa515c3fa@[192.168.1.101]'
          - dc69626e0609150727p575da8a0n8d440f3c82172bbf@mail.gmail.com
          - 20060909191532.12771.qmail@lists.develooper.com
          - 20060911201333.19368.qmail@lists.develooper.com
          - 874pvdldn5.fsf@teufelkommraus.webit.de
          - 20060912132152.12099.qmail@lists.develooper.com
          - 'p06230900c12cde1d7114@[192.168.1.101]'
          - 20060913160052.GK1952@bytemark.barnyard.co.uk
          - 'p06230902c12e30eaee25@[192.168.1.101]'
          - 97f280ea0609120718u4eba6fa0p3a4fd21ad98e7aa5@mail.gmail.com
          - 20060913151550.GG1952@bytemark.barnyard.co.uk
          - Pine.LNX.4.62.0609131140060.17562@fractal.phys.lafayette.edu
          - a51e610c0609131521x8904c64r7977ca2442209f38@mail.gmail.com
          - ae697d050609141700r45003586h8e38289a9ca10183@mail.gmail.com
          - 20060915021812.GT16337@c4.convolution.nl
          - 'p06230900c12fa515c3fa@[192.168.1.101]'
          - dc69626e0609150727p575da8a0n8d440f3c82172bbf@mail.gmail.com
          - 'p06230900c128dec41e00@[192.168.1.101]'
        posters:
          - email: trey@eecs.harvard.edu
            name: Trey Harris
          - email: mail@gedankenkonstrukt.de
            name: Thomas Wittek
          - email: schwigon@webit.de
            name: Steffen Schwigon
          - email: darren@DarrenDuncan.net
            name: Darren Duncan
          - email: david@cantrell.org.uk
            name: David Cantrell
          - email: amir.aharoni@gmail.com
            name: Amir E. Aharoni
          - email: doughera@lafayette.edu
            name: Andy Dougherty
          - email: fawaka@gmail.com
            name: Leon Timmermans
          - email: aankhen@gmail.com
            name: Aankhen
          - email: juerd@convolution.nl
            name: Juerd
          - email: michael.snoyman@ucla.edu
            name: Michael Snoyman
          - email: mark@summersault.com
            name: Mark Stosberg
          - email: merlyn@stonehenge.com
            name: merlyn
        subject: 'Re: the CGI.pm in Perl 6'
        summary: ''
    title: Users
  - name: perl6-compiler
    threads:
      - date_from: 1158220274
        date_to: 1158222642
        hidden: ~
        message_id: af9e4d220609140051v6fd4027dx965a0625ce0bc1b4@mail.gmail.com
        messages:
          - 16d769b70609140130y60fba8e5o2ce89893b5233dd7@mail.gmail.com
        posters:
          - email: zhobson@gmail.com
            name: Zack Hobson
          - email: cmasak@gmail.com
            name: Carl Mäsak
        subject: typo in HTTP::Server::Simple
        summary: |-
          Zack Hobson found a problem with the port number reported in startup
          by HTTP::Server::Simple in Pugs if the default port is used, and included
          a patch, which Carl Mäsak
          applied.
    title: Compiler
title: Weekly Perl 6 mailing list summary
