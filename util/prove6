#!/usr/bin/env perl

# This is a test harness for pugs and v6-alpha
# XXX TODO: add support for the --js option

use strict;
use warnings;
use Getopt::Long;
use Test::Harness;

my ($pugs, $pir, $perl5, $help);

GetOptions(
    haskell     => \$pugs,
    pugs        => \$pugs,

    pir         => \$pir,
    parrot      => \$pir,
    
    perl5       => \$perl5,
    perl        => \$perl5,
    'v6-alpha'  => \$perl5,
    
    help        => \$help,
);

if ($help) {
    print <<'_EOC_';
prove6 - Pugs Test Suit Harness

Usage:
    prove6 --pugs  t/some-dir/*.t
    prove6 --perl5 t/*/*.t
    prove6 --pir   t/some-dir/some-test.t

Options:
    --pugs       Harness with the Haskell Pugs (default on)
    --haskell    ditto

    --pir        Harness with Pugs' PIR backend
    --parrot     ditto
    
    --perl5      Harness with v6.pm (the Perl 5 implementation)
    --perl       ditto
    --v6-alpha   ditto

_EOC_
    exit(0);
}

my $sum = do { no warnings; $pugs + $perl5 + $pir };
if ($sum > 1) { die "error: you can't specify multiple implementations/backends.\n"; }
if ($sum == 0) { $pugs = 1 } # default to pugs

my @tfiles = sort map glob, @ARGV;

$ENV{PERL6LIB} = 'blib6/lib';
my $sep = ($^O eq 'MSWin32')? ';' : ':';
#warn $sep;

if ($perl5) {
    warn "  info: Harness with v6.pm.\n";
    #warn "  warning: make sure you have run 'make install'.\n";
    $ENV{PERL5LIB} = "blib6/pugs/perl5/lib${sep}blib6/pugs/perl5/arch";
} elsif ($pugs) {
    warn "  info: Harness with pugs (Haskell backend).\n";
    $ENV{HARNESS_PERL} = './pugs';
} elsif ($pir) {
    warn "  info: Harness with pugs (PIR packend).\n";
    $ENV{PERL5LIB} = 'blib/lib${sep}blib/arch';
    $ENV{HARNESS_PERL_SWITCHES} = '-B PIR';
    $ENV{HARNESS_PERL} = 'blib/script/pugs';
}

runtests(@tfiles);
