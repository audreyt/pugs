This is a quite rough attempt to create a project task dependency graph
for Perl 6 development.

== How-to ==

Requires graphviz.
$ dot -Tpng   a_dependency_graph.dot > a_dependency_graph.png
$ dot -Tcmapx a_dependency_graph.dot > a_dependency_graph.map
$ perl -MCGI=:standard -e \
  'print start_html,img {src=>shift,usemap=>"#G",border=>0},<STDIN>,end_html' \
  a_dependency_graph.png < a_dependency_graph.map > a_dependency_graph.html

== Meaning ==

a -> b means a is needed by b.
Usually in the sense of coroutines, rather than milestones.
Dashed arrows emphasize cases where there is more than one way to do it.
Some nodes have "**" postfixes because they occur in more than one
place in the graph (to avoid layout horrors).

== Comments ==

Perhaps add "Is pugs Prelude ready to have more primitives moved to
it?" as an upstream of "Move Hs primitives to Prelude"? -- putter 2007-01-20

Need feedback from audreyt. -- putter 2007-01-20

Much is missing. The graph is currently really bad at showing the
rich connections between project components.  For example, every
implementation has a prelude, and there is prelude material explicitly
and implicitly in the spec, and there are many things one could do to
advance them, with various constraints and different approaches, and
almost none of this is in the graph.  And wouldn't fit if you tried.
So other graphs are needed too, and they are all just one component of
figuring out what we should be doing, and making those insights accessible.
    -- putter 2007-01-20

