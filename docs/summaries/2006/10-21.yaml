---
extra:
  footer:
    - body: |-
        This summary was prepared using
        [Mail::Summary::Tools](http://search.cpan.org/dist/Mail-Summary-Tools/),
        available on CPAN.
        
        If you appreciate Perl, consider [contributing to the Perl
        Foundation](http://donate.perlfoundation.org) to help support the
        development of Perl.
        
        Thank you to everyone who has pointed out mistakes and offered
        suggestions for improving this series.  Comments on this summary can be
        sent to Ann Barcomb, <kudra@domaintje.com>.
      title: Acknowlegements
    - body: |-
        This summary can be found in the following places:
        
        * [use.perl.org](http://use.perl.org/)
        * [The Pugs blog](http://pugs.blogs.com/)
        * [The perl6-announce mailing
          list](http://lists.cpan.org/showlist.cgi?name=perl6-announce)
        * [ONLamp](http://www.oreillynet.com/onlamp/blog/)
      title: Distribution
  header:
    - body: |-
        "The | notation is mentioned in S012:1029, by the way.  Obviously you
        still haven't quite memorized all the synopses.  :-)"
        
        -- Larry Wall, in 'class interface of roles'
      title: This week on the Perl 6 mailing lists
    - body: |-
        Last week I mistakenly wrote that Juerd suggested using `#` for
        comments in `qw//` and `qqw//`, when in fact he suggested integrating
        it with `qqw//` and not `qw//`, because `qqw//` has generic
        quoting options.
      title: Corrections
  see_also:
    - name: Perl Foundation activities
      uri: http://blog.perlfoundation.org
    - name: Perl 6 Development
      uri: http://dev.perl.org/perl6
    - name: Planet Perl Six
      uri: http://planetsix.perlfoundation.org/
lists:
  - name: perl6-language
    threads:
      - date_from: 1158681108
        date_to: 1161264853
        hidden: ~
        message_id: 45101204.30301@barco.com
        messages:
          - 452E1EBF.7040600@barco.com
          - ef30550b0610120910s5e6a8ae3mf2d9ee874b84bdf8@mail.gmail.com
          - 452F3ECA.1080005@barco.com
          - ef30550b0610170736h29d6b712x41c58db9dd1ca410@mail.gmail.com
          - 453503B0.1060003@barco.com
          - 4535025C.1080200@barco.com
          - ef30550b0610171622x77995f22xbb4a0f7c42736831@mail.gmail.com
          - 453628B5.6070001@barco.com
          - ef30550b0610180756t6beee2ecq22c65e223167095d@mail.gmail.com
          - ef30550b0610170650s55338f5fvada1cac5126023ef@mail.gmail.com
          - 4534E557.6040608@barco.com
          - 452CB3F5.4010009@barco.com
          - ef30550b0610111031v778a66bhd603a5766b74218e@mail.gmail.com
          - 452E1EBF.7040600@barco.com
          - ef30550b0610120910s5e6a8ae3mf2d9ee874b84bdf8@mail.gmail.com
          - 452F3ECA.1080005@barco.com
          - ef30550b0610170736h29d6b712x41c58db9dd1ca410@mail.gmail.com
          - 453503B0.1060003@barco.com
          - 4535025C.1080200@barco.com
          - ef30550b0610171622x77995f22xbb4a0f7c42736831@mail.gmail.com
          - 453628B5.6070001@barco.com
          - ef30550b0610180756t6beee2ecq22c65e223167095d@mail.gmail.com
          - ef30550b0610170650s55338f5fvada1cac5126023ef@mail.gmail.com
          - 4534E557.6040608@barco.com
          - 45267117.4080506@barco.com
          - f5fa0f60610070705p7d564947l4a7bc7843bc263b4@mail.gmail.com
          - 452A2359.90205@barco.com
          - 452A42FC.5080506@barco.com
          - 452C4B31.7060906@bereft.net
          - ef30550b0610102014i42f914edq82f666035c9cf8a3@mail.gmail.com
          - 452CB3F5.4010009@barco.com
          - ef30550b0610111031v778a66bhd603a5766b74218e@mail.gmail.com
          - 452E1EBF.7040600@barco.com
          - ef30550b0610120910s5e6a8ae3mf2d9ee874b84bdf8@mail.gmail.com
          - 452F3ECA.1080005@barco.com
          - ef30550b0610170736h29d6b712x41c58db9dd1ca410@mail.gmail.com
          - 453503B0.1060003@barco.com
          - 4535025C.1080200@barco.com
          - ef30550b0610171622x77995f22xbb4a0f7c42736831@mail.gmail.com
          - 453628B5.6070001@barco.com
          - ef30550b0610180756t6beee2ecq22c65e223167095d@mail.gmail.com
          - ef30550b0610170650s55338f5fvada1cac5126023ef@mail.gmail.com
          - 4534E557.6040608@barco.com
          - 451908EE.4050105@barco.com
          - 45209AEA.4060704@vilain.net
          - 4520D90B.8050004@bereft.net
          - 45252990.2030303@barco.com
          - ef30550b0610020823l38b20947o9669a4177dc405b3@mail.gmail.com
          - f5fa0f60610020719t3e388c29rb1a469517ee0dab4@mail.gmail.com
          - 45263FBE.2080404@barco.com
          - ef30550b0610060930l3ff9cfcbu9d1ad91bf0a6b4a6@mail.gmail.com
          - f5fa0f60610070652x2fdad1fic255c29218596d79@mail.gmail.com
          - ef30550b0610070804r7dd66ffala29b59fbfa5ffc81@mail.gmail.com
          - f2601a7f0610081814t5f4f57b0kbf566b6344497fd5@mail.gmail.com
          - 452A3E71.80902@barco.com
          - 452A647E.9000107@barco.com
          - ef30550b0610102039s43ff6b34g9ba70184e3215f2a@mail.gmail.com
          - 452CCACA.4000906@barco.com
          - 452A5913.6080806@barco.com
          - ef30550b0610020858h65f3a281q9fc1c956f885f4f@mail.gmail.com
          - f5fa0f60610021950r109c0cd4tfd14c6a910bc8d8a@mail.gmail.com
          - 45267117.4080506@barco.com
          - f5fa0f60610070705p7d564947l4a7bc7843bc263b4@mail.gmail.com
          - 452A2359.90205@barco.com
          - 452A42FC.5080506@barco.com
          - 452C4B31.7060906@bereft.net
          - ef30550b0610102014i42f914edq82f666035c9cf8a3@mail.gmail.com
          - 452CB3F5.4010009@barco.com
          - ef30550b0610111031v778a66bhd603a5766b74218e@mail.gmail.com
          - 452E1EBF.7040600@barco.com
          - ef30550b0610120910s5e6a8ae3mf2d9ee874b84bdf8@mail.gmail.com
          - 452F3ECA.1080005@barco.com
          - ef30550b0610170736h29d6b712x41c58db9dd1ca410@mail.gmail.com
          - 453503B0.1060003@barco.com
          - 4535025C.1080200@barco.com
          - ef30550b0610171622x77995f22xbb4a0f7c42736831@mail.gmail.com
          - 453628B5.6070001@barco.com
          - ef30550b0610180756t6beee2ecq22c65e223167095d@mail.gmail.com
          - ef30550b0610170650s55338f5fvada1cac5126023ef@mail.gmail.com
          - 4534E557.6040608@barco.com
          - 200610021918.43451.chromatic@wgz.org
          - 452F3ECA.1080005@barco.com
          - ef30550b0610170736h29d6b712x41c58db9dd1ca410@mail.gmail.com
          - 453503B0.1060003@barco.com
          - 4535025C.1080200@barco.com
          - ef30550b0610171622x77995f22xbb4a0f7c42736831@mail.gmail.com
          - 453628B5.6070001@barco.com
          - ef30550b0610180756t6beee2ecq22c65e223167095d@mail.gmail.com
          - ef30550b0610170650s55338f5fvada1cac5126023ef@mail.gmail.com
          - 4534E557.6040608@barco.com
          - 4520D90B.8050004@bereft.net
          - 45252990.2030303@barco.com
          - ef30550b0610020823l38b20947o9669a4177dc405b3@mail.gmail.com
          - f5fa0f60610020719t3e388c29rb1a469517ee0dab4@mail.gmail.com
          - 45263FBE.2080404@barco.com
          - ef30550b0610060930l3ff9cfcbu9d1ad91bf0a6b4a6@mail.gmail.com
          - f5fa0f60610070652x2fdad1fic255c29218596d79@mail.gmail.com
          - ef30550b0610070804r7dd66ffala29b59fbfa5ffc81@mail.gmail.com
          - f2601a7f0610081814t5f4f57b0kbf566b6344497fd5@mail.gmail.com
          - 452A3E71.80902@barco.com
          - 452A647E.9000107@barco.com
          - ef30550b0610102039s43ff6b34g9ba70184e3215f2a@mail.gmail.com
          - 452CCACA.4000906@barco.com
          - 452A5913.6080806@barco.com
          - ef30550b0610020858h65f3a281q9fc1c956f885f4f@mail.gmail.com
          - f5fa0f60610021950r109c0cd4tfd14c6a910bc8d8a@mail.gmail.com
          - 45267117.4080506@barco.com
          - f5fa0f60610070705p7d564947l4a7bc7843bc263b4@mail.gmail.com
          - 452A2359.90205@barco.com
          - 452A42FC.5080506@barco.com
          - 452C4B31.7060906@bereft.net
          - ef30550b0610102014i42f914edq82f666035c9cf8a3@mail.gmail.com
          - 452CB3F5.4010009@barco.com
          - ef30550b0610111031v778a66bhd603a5766b74218e@mail.gmail.com
          - 452E1EBF.7040600@barco.com
          - ef30550b0610120910s5e6a8ae3mf2d9ee874b84bdf8@mail.gmail.com
          - 452F3ECA.1080005@barco.com
          - ef30550b0610170736h29d6b712x41c58db9dd1ca410@mail.gmail.com
          - 453503B0.1060003@barco.com
          - 4535025C.1080200@barco.com
          - ef30550b0610171622x77995f22xbb4a0f7c42736831@mail.gmail.com
          - 453628B5.6070001@barco.com
          - ef30550b0610180756t6beee2ecq22c65e223167095d@mail.gmail.com
          - ef30550b0610170650s55338f5fvada1cac5126023ef@mail.gmail.com
          - 4534E557.6040608@barco.com
          - 200610021918.43451.chromatic@wgz.org
          - ef30550b0610102014i42f914edq82f666035c9cf8a3@mail.gmail.com
          - 452CB3F5.4010009@barco.com
          - ef30550b0610111031v778a66bhd603a5766b74218e@mail.gmail.com
          - 452E1EBF.7040600@barco.com
          - ef30550b0610120910s5e6a8ae3mf2d9ee874b84bdf8@mail.gmail.com
          - 452F3ECA.1080005@barco.com
          - ef30550b0610170736h29d6b712x41c58db9dd1ca410@mail.gmail.com
          - 453503B0.1060003@barco.com
          - 4535025C.1080200@barco.com
          - ef30550b0610171622x77995f22xbb4a0f7c42736831@mail.gmail.com
          - 453628B5.6070001@barco.com
          - ef30550b0610180756t6beee2ecq22c65e223167095d@mail.gmail.com
          - ef30550b0610170650s55338f5fvada1cac5126023ef@mail.gmail.com
          - 4534E557.6040608@barco.com
          - f5fa0f60610020719t3e388c29rb1a469517ee0dab4@mail.gmail.com
          - 45263FBE.2080404@barco.com
          - ef30550b0610060930l3ff9cfcbu9d1ad91bf0a6b4a6@mail.gmail.com
          - f5fa0f60610070652x2fdad1fic255c29218596d79@mail.gmail.com
          - ef30550b0610070804r7dd66ffala29b59fbfa5ffc81@mail.gmail.com
          - f2601a7f0610081814t5f4f57b0kbf566b6344497fd5@mail.gmail.com
          - 452A3E71.80902@barco.com
          - 452A647E.9000107@barco.com
          - ef30550b0610102039s43ff6b34g9ba70184e3215f2a@mail.gmail.com
          - 452CCACA.4000906@barco.com
          - 452A5913.6080806@barco.com
          - ef30550b0610020858h65f3a281q9fc1c956f885f4f@mail.gmail.com
          - f5fa0f60610021950r109c0cd4tfd14c6a910bc8d8a@mail.gmail.com
          - 45267117.4080506@barco.com
          - f5fa0f60610070705p7d564947l4a7bc7843bc263b4@mail.gmail.com
          - 452A2359.90205@barco.com
          - 452A42FC.5080506@barco.com
          - 452C4B31.7060906@bereft.net
          - ef30550b0610102014i42f914edq82f666035c9cf8a3@mail.gmail.com
          - 452CB3F5.4010009@barco.com
          - ef30550b0610111031v778a66bhd603a5766b74218e@mail.gmail.com
          - 452E1EBF.7040600@barco.com
          - ef30550b0610120910s5e6a8ae3mf2d9ee874b84bdf8@mail.gmail.com
          - 452F3ECA.1080005@barco.com
          - ef30550b0610170736h29d6b712x41c58db9dd1ca410@mail.gmail.com
          - 453503B0.1060003@barco.com
          - 4535025C.1080200@barco.com
          - ef30550b0610171622x77995f22xbb4a0f7c42736831@mail.gmail.com
          - 453628B5.6070001@barco.com
          - ef30550b0610180756t6beee2ecq22c65e223167095d@mail.gmail.com
          - ef30550b0610170650s55338f5fvada1cac5126023ef@mail.gmail.com
          - 4534E557.6040608@barco.com
          - 200610021918.43451.chromatic@wgz.org
          - ef30550b0610020858h65f3a281q9fc1c956f885f4f@mail.gmail.com
          - f5fa0f60610021950r109c0cd4tfd14c6a910bc8d8a@mail.gmail.com
          - 45267117.4080506@barco.com
          - f5fa0f60610070705p7d564947l4a7bc7843bc263b4@mail.gmail.com
          - 452A2359.90205@barco.com
          - 452A42FC.5080506@barco.com
          - 452C4B31.7060906@bereft.net
          - ef30550b0610102014i42f914edq82f666035c9cf8a3@mail.gmail.com
          - 452CB3F5.4010009@barco.com
          - ef30550b0610111031v778a66bhd603a5766b74218e@mail.gmail.com
          - 452E1EBF.7040600@barco.com
          - ef30550b0610120910s5e6a8ae3mf2d9ee874b84bdf8@mail.gmail.com
          - 452F3ECA.1080005@barco.com
          - ef30550b0610170736h29d6b712x41c58db9dd1ca410@mail.gmail.com
          - 453503B0.1060003@barco.com
          - 4535025C.1080200@barco.com
          - ef30550b0610171622x77995f22xbb4a0f7c42736831@mail.gmail.com
          - 453628B5.6070001@barco.com
          - ef30550b0610180756t6beee2ecq22c65e223167095d@mail.gmail.com
          - ef30550b0610170650s55338f5fvada1cac5126023ef@mail.gmail.com
          - 4534E557.6040608@barco.com
          - 200610021918.43451.chromatic@wgz.org
        posters:
          - email: Thomas.Sandlass@barco.com
            name: TSa
          - email: dataweaver@gmail.com
            name: Jonathan Lang
          - email: stevan.little@gmail.com
            name: Stevan Little
          - email: list@bereft.net
            name: Brad Bowman
          - email: sam@vilain.net
            name: Sam Vilain
          - email: ubermatt@gmail.com
            name: Matt Fowles
          - email: chromatic@wgz.org
            name: chromatic
          - email: larry@wall.org
            name: Larry Wall
          - email: rvtol@isolution.nl
            name: Ruud H.G. van Tol
          - email: rvtol+news@isolution.nl
            name: Dr.Ruud
        subject: class interface of roles
        summary: |-
          This long-running thread continued.  Previous highlights included discussion
          on how a role can require a target class to implement a method or do another
          role, and whether there is a use for forbidding the implementation of 
          methods.
          
          This week, Jonathan Lang and TSa discussed various ways of controlling 
          dispatch rules, and agreed upon some terminology to assist the 
          discussion.
          
          Meanwhile, Jonathan and TSa talked about the distinction between mixins
          and roles.  Larry Wall offered some clarification, which led to a discussion
          on the `|` notation.  This eventually morphed in to a thread about  
          the syntax for unordered composition.
      - date_from: 1159805392
        date_to: 1160076904
        hidden: ~
        message_id: ef30550b0610020909t14d70a19rc98b70eb3d5ace58@mail.gmail.com
        messages:
          - 200610041243.05028.chromatic@wgz.org
          - 20061004194806.GC11398@bestpractical.com
          - 200610041304.45457.chromatic@wgz.org
          - 20061004200635.GD11398@bestpractical.com
          - ef30550b0610051234l4397802dxc066b983c26e6599@mail.gmail.com
          - 4521E24A.7060800@ajs.com
          - 1d9a3f400610022139o6b38b294l3b11c8a9e82cc8b7@mail.gmail.com
          - 7ca3f0160610021657u7756476j32e752a9df4cbcc1@mail.gmail.com
          - 20061002172551.31827.qmail@lists.develooper.com
          - ef30550b0610021232i3cc8b3d3p3409a3f5637f3428@mail.gmail.com
          - 20061002202632.12351.qmail@lists.develooper.com
          - ef30550b0610021401l3c9315dr223f7358f48db1f5@mail.gmail.com
          - 20061002230759.GA23437@wall.org
          - 20061002224026.23100.qmail@lists.develooper.com
          - 200610021940.41939.chromatic@wgz.org
          - 452298A4.200@ajs.com
          - 200610040050.16712.chromatic@wgz.org
          - 20061004021016.G46238@bowser.eecs.harvard.edu
          - 20061004120609.GJ11711@stripey.com
          - 20061008150758.D46238@bowser.eecs.harvard.edu
          - 20061016210446.GB7744@stripey.com
          - 20061004080510.GA11398@bestpractical.com
          - 200610041201.22638.chromatic@wgz.org
          - 20061004190958.GB11398@bestpractical.com
          - 200610041243.05028.chromatic@wgz.org
          - 20061004194806.GC11398@bestpractical.com
          - 200610041304.45457.chromatic@wgz.org
          - 20061004200635.GD11398@bestpractical.com
          - ef30550b0610051234l4397802dxc066b983c26e6599@mail.gmail.com
          - 20061004131306.Q46238@bowser.eecs.harvard.edu
          - 200610041409.21099.chromatic@wgz.org
          - 45243586.20801@ajs.com
          - 1d9a3f400610020926w73a70ae7u2e4fc18cdef76e66@mail.gmail.com
          - BEC20AAC-17F1-4B88-B293-EFD8329528F0@boulder.swri.edu
          - 20061002170157.GB11711@stripey.com
          - 20061002172551.31827.qmail@lists.develooper.com
          - ef30550b0610021232i3cc8b3d3p3409a3f5637f3428@mail.gmail.com
          - 20061002202632.12351.qmail@lists.develooper.com
          - ef30550b0610021401l3c9315dr223f7358f48db1f5@mail.gmail.com
          - 20061002230759.GA23437@wall.org
          - 20061002224026.23100.qmail@lists.develooper.com
          - 200610021940.41939.chromatic@wgz.org
          - 452298A4.200@ajs.com
          - 200610040050.16712.chromatic@wgz.org
          - 20061004021016.G46238@bowser.eecs.harvard.edu
          - 20061004120609.GJ11711@stripey.com
          - 20061008150758.D46238@bowser.eecs.harvard.edu
          - 20061016210446.GB7744@stripey.com
          - 20061004080510.GA11398@bestpractical.com
          - 200610041201.22638.chromatic@wgz.org
          - 20061004190958.GB11398@bestpractical.com
          - 200610041243.05028.chromatic@wgz.org
          - 20061004194806.GC11398@bestpractical.com
          - 200610041304.45457.chromatic@wgz.org
          - 20061004200635.GD11398@bestpractical.com
          - ef30550b0610051234l4397802dxc066b983c26e6599@mail.gmail.com
          - 20061004131306.Q46238@bowser.eecs.harvard.edu
          - 200610041409.21099.chromatic@wgz.org
          - 45243586.20801@ajs.com
          - ef30550b0610020948k3f95e9bdi3c05fd7dbe1e23fa@mail.gmail.com
          - 8A6B76DA-FB2E-4042-9CBE-AD67D438D06D@hexten.net
          - 20061004190958.GB11398@bestpractical.com
          - 200610041243.05028.chromatic@wgz.org
          - 20061004194806.GC11398@bestpractical.com
          - 200610041304.45457.chromatic@wgz.org
          - 20061004200635.GD11398@bestpractical.com
          - ef30550b0610051234l4397802dxc066b983c26e6599@mail.gmail.com
          - 20061004131306.Q46238@bowser.eecs.harvard.edu
          - 200610041409.21099.chromatic@wgz.org
          - 45243586.20801@ajs.com
          - 200610040050.16712.chromatic@wgz.org
          - 20061004021016.G46238@bowser.eecs.harvard.edu
          - 20061004120609.GJ11711@stripey.com
          - 20061008150758.D46238@bowser.eecs.harvard.edu
          - 20061016210446.GB7744@stripey.com
          - 20061004080510.GA11398@bestpractical.com
          - 200610041201.22638.chromatic@wgz.org
          - 20061004190958.GB11398@bestpractical.com
          - 200610041243.05028.chromatic@wgz.org
          - 20061004194806.GC11398@bestpractical.com
          - 200610041304.45457.chromatic@wgz.org
          - 20061004200635.GD11398@bestpractical.com
          - ef30550b0610051234l4397802dxc066b983c26e6599@mail.gmail.com
          - 20061004131306.Q46238@bowser.eecs.harvard.edu
          - 200610041409.21099.chromatic@wgz.org
          - 45243586.20801@ajs.com
          - 200610041201.22638.chromatic@wgz.org
          - 20061004190958.GB11398@bestpractical.com
          - 200610041243.05028.chromatic@wgz.org
          - 20061004194806.GC11398@bestpractical.com
          - 200610041304.45457.chromatic@wgz.org
          - 20061004200635.GD11398@bestpractical.com
          - ef30550b0610051234l4397802dxc066b983c26e6599@mail.gmail.com
          - 20061004131306.Q46238@bowser.eecs.harvard.edu
          - 200610041409.21099.chromatic@wgz.org
          - 45243586.20801@ajs.com
          - 200610021940.41939.chromatic@wgz.org
          - 452298A4.200@ajs.com
          - 200610040050.16712.chromatic@wgz.org
          - 20061004021016.G46238@bowser.eecs.harvard.edu
          - 20061004120609.GJ11711@stripey.com
          - 20061008150758.D46238@bowser.eecs.harvard.edu
          - 20061016210446.GB7744@stripey.com
          - 20061004080510.GA11398@bestpractical.com
          - 200610041201.22638.chromatic@wgz.org
          - 20061004190958.GB11398@bestpractical.com
          - 200610041243.05028.chromatic@wgz.org
          - 20061004194806.GC11398@bestpractical.com
          - 200610041304.45457.chromatic@wgz.org
          - 20061004200635.GD11398@bestpractical.com
          - ef30550b0610051234l4397802dxc066b983c26e6599@mail.gmail.com
          - 20061004131306.Q46238@bowser.eecs.harvard.edu
          - 200610041409.21099.chromatic@wgz.org
          - 45243586.20801@ajs.com
        posters:
          - email: dataweaver@gmail.com
            name: Jonathan Lang
          - email: chromatic@wgz.org
            name: chromatic
          - email: jesse@fsck.com
            name: jesse
          - email: ajs@ajs.com
            name: Aaron Sherman
          - email: jerry.gay@gmail.com
            name: jerry gay
          - email: lrpalmer@gmail.com
            name: Luke Palmer
          - email: dave@whipp.name
            name: Dave Whipp
          - email: larry@wall.org
            name: Larry Wall
          - email: trey@lopsa.org
            name: Trey Harris
          - email: Smylers@stripey.com
            name: Smylers
          - email: deforest@boulder.swri.edu
            name: Craig DeForest
          - email: andy@hexten.net
            name: Andy Armstrong
        subject: "\"Don't tell me what I can't do!\""
        summary: |-
          Two weeks ago, Jonathan Lang initiated a discussion on programming styles
          which allow a programmer to prevent another person from taking an otherwise
          legitimate action.  The discussion moved on to lexically scoped pragmas and
          policy meta models.
          
          This week Smylers wondered how it is possible for a module to require
          undeclared package variables, and asked Trey Harris for an example of 
          a module with undeclared symbolic references.
      - date_from: 1160282311
        date_to: 1161045953
        hidden: ~
        message_id: 452880B8.1000206@conway.org
        messages:
          - ef30550b0610081240h58b74b91y8fa9dfdc83bbcc82@mail.gmail.com
          - 452D44E0.1000909@conway.org
          - 20061008105411.545992b7@mekanori.mon.istic.org
          - b8b9a5110610131706s50e42295k293edbdbd0935a5d@mail.gmail.com
          - 4530D4A2.7040703@conway.org
          - 20061008195405.25198.qmail@lists.develooper.com
          - 452DCADD.8010106@conway.org
          - 20061012223818.GB10279@ppp-113.la.vclk.net
          - ef30550b0610121557s26ed9ba7g541b0126accf297a@mail.gmail.com
          - 452F6A23.1090908@conway.org
          - 20061013055352.GD10279@ppp-113.la.vclk.net
          - 452F60F8.7000109@conway.org
          - 20061016205143.GA7744@stripey.com
          - EBD2D80B-E208-48F4-BA84-3F3CC76F834E@brians.org
          - 453427B1.9050808@conway.org
        posters:
          - email: damian@conway.org
            name: Damian Conway
          - email: dataweaver@gmail.com
            name: Jonathan Lang
          - email: masoch@istic.org
            name: Daniel Hulme
          - email: brent@brentdax.com
            name: Brent 'Dax' Royal-Gordon
          - email: dave@whipp.name
            name: Dave Whipp
          - email: Tim.Bunce@pobox.com
            name: Tim Bunce
          - email: Smylers@stripey.com
            name: Smylers
          - email: dan@brians.org
            name: Danny Brian
        subject: 'Synopsis 26 - Documentation [alpha draft]'
        summary: |-
          Last week, Damian Conway released a draft for S26 on documentation.
          Some people expressed opinions on it.
          
          This week, Smylers stated that he thought the only standard XML entities
          are `&lt;`, `&gt;` and `&amp;`.  Defining further entities is allowed;
          for example, this is what HTML does.  Danny Brian responded by expanding
          the list of default entities to include `&apos;` and `&quot;`.  Damian
          Conway corrected the document accordingly.
      - date_from: 1160778911
        date_to: 1161182026
        hidden: ~
        message_id: ef30550b0610131535t3006357bid3e92f48a86824ea@mail.gmail.com
        messages:
          - 20061013155818.N46238@bowser.eecs.harvard.edu
          - ef30550b0610131656o7bb89003u6e382ac001acaedc@mail.gmail.com
          - 20061014003756.GA21131@wall.org
          - 453507C2.9050105@barco.com
          - 45350D85.6040401@barco.com
          - ef30550b0610171627q612b5432kc415ab626c7b6698@mail.gmail.com
          - 4535F536.2050801@barco.com
          - ef30550b0610180655y1feb3e3dg2a360d84bb2c9a81@mail.gmail.com
          - 20061018141130.GH64697@plum.flirble.org
          - ef30550b0610180733x40b8cd0ah5a8dfa5f7a87d875@mail.gmail.com
          - ef30550b0610140756r36a65e9fm9c3d5571b704aae1@mail.gmail.com
          - 20061014152709.GA12334@wall.org
        posters:
          - email: dataweaver@gmail.com
            name: Jonathan Lang
          - email: trey@lopsa.org
            name: Trey Harris
          - email: larry@wall.org
            name: Larry Wall
          - email: Thomas.Sandlass@barco.com
            name: TSa
          - email: nick@ccl4.org
            name: Nicholas Clark
        subject: 'Edge case: incongruent roles'
        summary: |-
          Jonathan Lang initiated a discussion on collisions which might occur from
          creating a class which inherits from two classes with unrelated concepts
          which happen to share a method name.  Trey Harris thought that the combination
          of multiple inheritance, multiple dispatch, traits and DBC offered a more
          sophisticated way to resolve conflicts than dispatch by name.  Jonathan agreed
          that was how it should work, but was not convinced it worked that way in
          practice.  Larry Wall suggested that S12 might resolve the issue, but
          Jonathan explained that it did not cover the case he was trying to
          express.  Larry elaborated on the documentation.
          
          Meanwhile, TSa launched a subthread containing an example with numbers.
          There was further discussion on numeric comparisons in this context.
          
          The thread spawned
          '<msgid:ef30550b0610191539v139be744jc78e0c603d18bea7@mail.gmail.com>'.
      - date_from: 1161040852
        date_to: 1161040852
        hidden: small commit
        message_id: 20061016232011.6CBCFCBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r13163 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1161044612
        date_to: 1161044612
        hidden: small commit
        message_id: 20061017002317.A463CCBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r13164 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1161045651
        date_to: 1161045651
        hidden: small commit
        message_id: 20061017004041.18266CBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r13165 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1161185947
        date_to: 1161205178
        hidden: child of ef30550b0610131535t3006357bid3e92f48a86824ea@mail.gmail.com
        message_id: 101820061538.17511.45364A8C000911AC0000446722070206539D0E0909070DD20ED2059D0E03@comcast.net
        messages:
          - ef30550b0610181359y6c1d38cped84792dc5e751f5@mail.gmail.com
        posters:
          - email: mark.a.biggar@comcast.net
            name: mark.a.biggar
          - email: dataweaver@gmail.com
            name: Jonathan Lang
        subject: 'Re: Edge case: incongruent roles'
        summary: ''
      - date_from: 1161205073
        date_to: 1161205073
        hidden: ~
        message_id: 20061018205742.8845ECBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r13210 - doc/trunk/design/syn'
        summary: |-
          Larry Wall made a commit to S05, noting that the new regex syntax
          defines word boundaries in terms of `\w`, not `\s`.
      - date_from: 1161208174
        date_to: 1161208174
        hidden: small commit
        message_id: 20061018214922.58A36CBA4D@x12.develooper.com
        posters:
          - email: larry@cvs.perl.org
            name: larry
        subject: '[svn:perl6-synopsis] r13211 - doc/trunk/design/syn'
        summary: ''
      - date_from: 1161213946
        date_to: 1161213946
        hidden: child of ef30550b0610131535t3006357bid3e92f48a86824ea@mail.gmail.com
        message_id: 101820062325.2472.4536B7CE00033288000009A822007589429D0E0909070DD20ED2059D0E03@comcast.net
        posters:
          - email: mark.a.biggar@comcast.net
            name: mark.a.biggar
        subject: 'Re: Edge case: incongruent roles'
        summary: ''
      - date_from: 1161297619
        date_to: 1161383326
        hidden: ~
        message_id: ef30550b0610191539v139be744jc78e0c603d18bea7@mail.gmail.com
        messages:
          - 45387BE5.5060704@barco.com
          - ef30550b0610200221r251631deja436074ceb99ce88@mail.gmail.com
          - 4538BA8D.2000703@barco.com
          - 4538D3BD.8010707@barco.com
          - ef30550b0610200910k268251bmc0a5e386d3cd47cc@mail.gmail.com
          - 20061020190753.GA19030@wall.org
          - ef30550b0610201528w2ea51c49nc44af1ab801aa09e@mail.gmail.com
          - ef30550b0610200857l677a6021w3c13156d21cd73e5@mail.gmail.com
          - 4538E70E.3000306@barco.com
        posters:
          - email: dataweaver@gmail.com
            name: Jonathan Lang
          - email: Thomas.Sandlass@barco.com
            name: TSa
          - email: larry@wall.org
            name: Larry Wall
        subject: set operations for roles
        summary: |-
          Jonathan Lang replied to a comment in the thread
          '<msgid:ef30550b0610131535t3006357bid3e92f48a86824ea@mail.gmail.com>'.
          The discussion involved the syntax for ordered and unordered composition.
          He proposed some syntax.  TSa and Jonathan discussed possibilities, and
          Larry Wall added his thoughts.
      - date_from: 1161307686
        date_to: 1161334402
        hidden: ~
        message_id: ef30550b0610191827h3a360d88yd7a97b4e7faf4d31@mail.gmail.com
        messages:
          - 20061020085308.GK25805@c4.convolution.nl
        posters:
          - email: dataweaver@gmail.com
            name: Jonathan Lang
          - email: juerd@convolution.nl
            name: Juerd
        subject: Interrogative statements
        summary: |-
          Jonathan Lang suggested that `$expression?;` should have the same
          meaning as `$_ = $expression`.  He wondered if Perl 6 makes this possible,
          or if the parser would need to be modified.  Juerd replied that it
          was possible if you modified the Perl 6 grammar.
      - date_from: 1161346558
        date_to: 1161346558
        hidden: ~
        message_id: b42609c60610200515t1c872c57q6cde4a32dd2eba64@mail.gmail.com
        posters:
          - email: relipuj@gmail.com
            name: Relipuj
        subject: 'Threads, magic?'
        summary: |-
          Relipuj wondered how threaded data collection could be accomplished
          in Perl 6, citing an example of how it is done in Python.
    title: Language
  - name: perl6-internals
    threads:
      - date_from: 1152677694
        date_to: 1161198147
        hidden: ~
        message_id: AFCEF217-8E1F-4431-9115-36B17012F4DC@audreyt.org
        messages:
          - 20060712174608.A4180@toetsch.at
          - 44B53097.4000405@perl.org
          - 20060725044627.GB16324@host.pmichaud.com
          - 44D25CF3.6040504@perl.org
          - rt-3.5.HEAD-4977-1161116923-1741.39926-15-0@perl.org
          - 45364629.1030300@tewk.com
          - 20060725044627.GB16324@host.pmichaud.com
          - 44D25CF3.6040504@perl.org
          - rt-3.5.HEAD-4977-1161116923-1741.39926-15-0@perl.org
          - 45364629.1030300@tewk.com
        posters:
          - email: audreyt@audreyt.org
            name: Audrey Tang
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: allison@perl.org
            name: Allison Randal
          - email: pmichaud@pobox.com
            name: Patrick R. Michaud
          - email: parrotbug-followup@parrotcode.org
            name: Patrick R. Michaud via RT
          - email: tewk@tewk.com
            name: Kevin Tew
        subject: '[TODO] :init attribute'
        summary: |-
          In the thread 'Implement .loadlib pragma in IMCC', dating to July, Patrick
          R. Michaud summarized the issue of `:init` pragmas for subs as discussed
          in a recent #parrotsketch meeting.  Ticket <rt://perl/39926> relates to
          the task.  In addition to giving a status report on `:init`, Patrick
          invited people to contribute tests and code to help create `:init`.
          
          Meanwhile, Leopold Toetsch replied to Kevin Tew's patch attempt in
          '<msgid:453628AC.90008@tewk.com>', commenting on the use of
          the flag `PBC_POSTCOMP`, which he described as an  unfortunate choice.
          He made some alternate proposals.  Kevin thanked Leopold, and asked for 
          a summary of how flags are used, which Leopold provided.
      - date_from: 1159836873
        date_to: 1161108027
        hidden: ~
        message_id: 17697.46270.424770.357505@rgrjr.dyndns.org
        messages:
          - 5.1.0.14.2.20061010083913.0289ca28@pop.besancon.parkeon.com
          - 17708.11253.9417.454611@rgrjr.dyndns.org
          - 17712.18846.821057.722561@rgrjr.dyndns.org
          - 200610141322.07788.lt@toetsch.at
          - 17713.8934.88458.93163@rgrjr.dyndns.org
          - 200610142234.33163.lt@toetsch.at
          - 17713.21682.732659.21638@rgrjr.dyndns.org
          - 200610142347.13221.lt@toetsch.at
          - 17713.23998.162329.567268@rgrjr.dyndns.org
          - 5.1.0.14.2.20061016211658.0268ac38@pop.besancon.parkeon.com
          - 200610172000.04879.lt@toetsch.at
          - 5.1.0.14.2.20061016211658.0268ac38@pop.besancon.parkeon.com
          - 200610172000.04879.lt@toetsch.at
          - 200610142340.48617.lt@toetsch.at
          - 5.1.0.14.2.20061004084513.0287d900@pop.besancon.parkeon.com
          - 17704.12205.432688.399087@rgrjr.dyndns.org
          - 5.1.0.14.2.20061010083913.0289ca28@pop.besancon.parkeon.com
          - 17708.11253.9417.454611@rgrjr.dyndns.org
          - 17712.18846.821057.722561@rgrjr.dyndns.org
          - 200610141322.07788.lt@toetsch.at
          - 17713.8934.88458.93163@rgrjr.dyndns.org
          - 200610142234.33163.lt@toetsch.at
          - 17713.21682.732659.21638@rgrjr.dyndns.org
          - 200610142347.13221.lt@toetsch.at
          - 17713.23998.162329.567268@rgrjr.dyndns.org
          - 5.1.0.14.2.20061016211658.0268ac38@pop.besancon.parkeon.com
          - 200610172000.04879.lt@toetsch.at
          - 5.1.0.14.2.20061016211658.0268ac38@pop.besancon.parkeon.com
          - 200610172000.04879.lt@toetsch.at
          - 200610142340.48617.lt@toetsch.at
          - 17705.35016.239252.375823@rgrjr.dyndns.org
          - 200610141322.07788.lt@toetsch.at
          - 17713.8934.88458.93163@rgrjr.dyndns.org
          - 200610142234.33163.lt@toetsch.at
          - 17713.21682.732659.21638@rgrjr.dyndns.org
          - 200610142347.13221.lt@toetsch.at
          - 17713.23998.162329.567268@rgrjr.dyndns.org
          - 5.1.0.14.2.20061016211658.0268ac38@pop.besancon.parkeon.com
          - 200610172000.04879.lt@toetsch.at
          - 5.1.0.14.2.20061016211658.0268ac38@pop.besancon.parkeon.com
          - 200610172000.04879.lt@toetsch.at
          - 200610142234.33163.lt@toetsch.at
          - 17713.21682.732659.21638@rgrjr.dyndns.org
          - 200610142347.13221.lt@toetsch.at
          - 17713.23998.162329.567268@rgrjr.dyndns.org
          - 5.1.0.14.2.20061010083913.0289ca28@pop.besancon.parkeon.com
          - 17708.11253.9417.454611@rgrjr.dyndns.org
          - 17712.18846.821057.722561@rgrjr.dyndns.org
          - 200610141322.07788.lt@toetsch.at
          - 17713.8934.88458.93163@rgrjr.dyndns.org
          - 200610142234.33163.lt@toetsch.at
          - 17713.21682.732659.21638@rgrjr.dyndns.org
          - 200610142347.13221.lt@toetsch.at
          - 17713.23998.162329.567268@rgrjr.dyndns.org
          - 5.1.0.14.2.20061016211658.0268ac38@pop.besancon.parkeon.com
          - 200610172000.04879.lt@toetsch.at
          - 5.1.0.14.2.20061016211658.0268ac38@pop.besancon.parkeon.com
          - 200610172000.04879.lt@toetsch.at
          - 200610142340.48617.lt@toetsch.at
          - 17708.11253.9417.454611@rgrjr.dyndns.org
          - 17712.18846.821057.722561@rgrjr.dyndns.org
          - 200610141322.07788.lt@toetsch.at
          - 17713.8934.88458.93163@rgrjr.dyndns.org
          - 200610142234.33163.lt@toetsch.at
          - 17713.21682.732659.21638@rgrjr.dyndns.org
          - 200610142347.13221.lt@toetsch.at
          - 17713.23998.162329.567268@rgrjr.dyndns.org
          - 5.1.0.14.2.20061016211658.0268ac38@pop.besancon.parkeon.com
          - 200610172000.04879.lt@toetsch.at
          - 5.1.0.14.2.20061016211658.0268ac38@pop.besancon.parkeon.com
          - 200610172000.04879.lt@toetsch.at
          - 200610142340.48617.lt@toetsch.at
          - 17706.63418.496483.204099@rgrjr.dyndns.org
        posters:
          - email: rogers-perl6@rgrjr.dyndns.org
            name: Bob Rogers
          - email: francois.perrad@gadz.org
            name: François PERRAD
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: Parrot::Coroutine
        summary: |-
          The discussion which began as a notification from Bob Rogers on continuations
          continued with the thread concerning problems with coroutines.  Last week,
          Leopold Toetsch requested a description from Bob on his proposal for
          rewriting coroutines.
          
          This week,
          François Perrad
          reported that as of r14936, he has removed the LuaThread PMC so that
          it does not depend upon coroutines.
          
          Leopold issued a reminder about making namespaces useful.
      - date_from: 1160556124
        date_to: 1160990485
        hidden: ~
        message_id: rt-3.5.HEAD-31251-1160556113-660.40509-72-0@perl.org
        messages:
          - 8e8ee0d40610160221h2e43e35cy164323fc4d17ffa@mail.gmail.com
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Paul Cochrane
        rt_ticket: 'perl #40509'
        subject: '[perl #40509] [NEW] Line endings test '
        summary: |-
          In ticket <rt://perl/40509>, Paul Cochrane reported that this patch
          is superceeded by one attached to ticket <rt://perl/40544>.
      - date_from: 1160851491
        date_to: 1160862488
        hidden: ~
        message_id: 200610141144.14313.chromatic@wgz.org
        messages:
          - 200610142322.40232.lt@toetsch.at
          - 200610141447.53893.chromatic@wgz.org
        posters:
          - email: chromatic@wgz.org
            name: chromatic
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: 'sprintf() Checkins #14922-14924 Break Linux/PPC Tests'
        summary: |-
          chromatic reported a series of failing tests.  Leopold Toetsch reported
          that it was fixed in r14926.  The problem involved formatting a long
          long with `'%ld'`, which does not work on all systems.  He suggested
          some solutions in case the current `'%lld'` breaks other compilers.
      - date_from: 1160865502
        date_to: 1160898488
        hidden: ~
        message_id: 200610150038.08709.lt@toetsch.at
        messages:
          - 20061015095041.BB78.BQW10602@nifty.com
          - 20061015165052.77AD.BQW10602@nifty.com
        posters:
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: bqw10602@nifty.com
            name: SADAHIRO Tomoyuki
        subject: sprintf 64 test
        summary: |-
          Leopold Toetsch noted that he is getting different results from Perl 5
          and libc when using printf/sprintf.  He wondered if it was a problem 
          with his test.  Sadahiro Tomoyuki replied with some information about
          the specification, and another test case where Perl 5 gives unexpected
          results.  A patch to correct the situation was applied as r29025.
      - date_from: 1160989254
        date_to: 1161020315
        hidden: ~
        message_id: 200610160948.40026.chromatic@wgz.org
        messages:
          - 1d9a3f400610161005n64497a8an656fe1775b34980d@mail.gmail.com
          - 1d9a3f400610161013m6e8dfd5frb003fffd7eaa2f37@mail.gmail.com
          - f60fe000610161038k37cf0896l6f00b01853722f9c@mail.gmail.com
          - 200610161933.12105.lt@toetsch.at
          - f60fe000610161008xa1067e9k8c3248a706ca5ef4@mail.gmail.com
          - rt-3.5.HEAD-4977-1160989228-402.40543-72-0@perl.org
          - 1d9a3f400610161005n64497a8an656fe1775b34980d@mail.gmail.com
          - 1d9a3f400610161013m6e8dfd5frb003fffd7eaa2f37@mail.gmail.com
          - f60fe000610161038k37cf0896l6f00b01853722f9c@mail.gmail.com
          - 200610161933.12105.lt@toetsch.at
          - f60fe000610161008xa1067e9k8c3248a706ca5ef4@mail.gmail.com
          - 8e8ee0d40610160311q24778e1cj3aa1275cb50a64ff@mail.gmail.com
          - 8e8ee0d40610170626h46b657e2g4268f5aad20778fa@mail.gmail.com
          - rt-3.5.HEAD-4978-1161116736-980.40543-15-0@perl.org
          - 2D586575-1C00-44D7-8190-DE9913F1412F@coleda.com
          - 8e8ee0d40610180234w6b58b2cbpb382957f20ba8825@mail.gmail.com
        posters:
          - email: chromatic@wgz.org
            name: chromatic
          - email: jerry.gay@gmail.com
            name: jerry gay
          - email: markjreed@mail.com
            name: Mark J. Reed
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: parrotbug-followup@parrotcode.org
            name: Paul Cochrane
          - email: will@coleda.com
            name: Will Coleda
        subject: 'Re: [perl #40543] [NEW] Test for space after curly braces'
        summary: |-
          Paul Cochrane created ticket <rt://perl/40543> to deliver a patch to
          test for extra whitespace after a curly brace at the end of the line.
          chromatic wondered why this should only apply to curly braces and not
          extra whitespace at the end of any line, and Jerry Gay agreed.  Jerry
          included vim settings to assist in finding trailing whitespace.  Other
          people also expressed their dislike of excessive whitespace.
          
          Jerry asked that the test be rewritten to involve just one test, instead
          of around 700.  He also wanted it expanded to cover Perl files, and listed
          some other candidates for the check.  Will Coleda disagreed, because 
          perlcritic tests address this for Perl files.
      - date_from: 1160990003
        date_to: 1161001499
        hidden: summary
        message_id: rt-3.5.HEAD-4978-1160989994-1770.40544-72-0@perl.org
        messages:
          - 8e8ee0d40610160513k5a9ea06fq84d1a870666c290d@mail.gmail.com
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Paul Cochrane
        rt_ticket: 'perl #40544'
        subject: '[perl #40544] [NEW] Test for DOS line endings in Parrot text files '
        summary: |-
          In ticket <rt://perl/40544>, Paul Cochrane offered a patch to check
          for DOS line endings in the Parrot distribution.
      - date_from: 1160992992
        date_to: 1160992992
        hidden: ~
        message_id: rt-3.5.HEAD-4971-1160992976-281.40545-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Paul Cochrane
        rt_ticket: 'perl #40545'
        subject: '[perl #40545] [PATCH] Addition of tests to Parrot::Distribution tests '
        summary: |-
          Paul Cochrane supplied a patch in ticket <rt://perl/40545>.  The patch
          adds tests for yacc, lex and pmc files, and also fixes a test which was
          giving a false positive.
      - date_from: 1161004581
        date_to: 1161004581
        hidden: summary
        message_id: 20061016131501.23194.qmail@x1.develooper.com
        posters:
          - email: perlbug-summary@perl.org
            name: Parrot Bug Summary
        subject: Parrot Bug Summary
        summary: ''
      - date_from: 1161006754
        date_to: 1161006754
        hidden: summary
        message_id: 8e8ee0d40610160652w769d165h9ff3cf37a0047a70@mail.gmail.com
        posters:
          - email: paultcochrane@gmail.com
            name: Paul Cochrane
        subject: 'Re: [perl #40361] [PATCH] #40278 [CAGE] perl coding standards coda. (cont.)'
        summary: |-
          Paul Cochrane submitted a patch to change the semantics for checking
          for codas to solve `__END__` and `__DATA__` issues.  
          He asked for comments on the proposal.
      - date_from: 1161013013
        date_to: 1161013013
        hidden: small commit
        message_id: 20061016153643.D1867CBA4D@x12.develooper.com
        posters:
          - email: particle@cvs.perl.org
            name: particle
        subject: '[svn:parrot-pdd] r14930 - trunk/docs/pdds'
        summary: ''
      - date_from: 1161023936
        date_to: 1161023936
        hidden: ~
        message_id: 4533D19D.50900@tewk.com
        posters:
          - email: tewk@tewk.com
            name: Kevin Tew
        subject: configure bug
        summary: Kevin Tew reported a problem with generating makefiles in step `gen::makefiles`.
      - date_from: 1161107661
        date_to: 1161111798
        hidden: ~
        message_id: 45352792.9060800@tewk.com
        messages:
          - 1d9a3f400610171202x4dc7a499me0960813582604d7@mail.gmail.com
          - rt-3.5.HEAD-4971-1161107651-155.40559-72-0@perl.org
        posters:
          - email: tewk@tewk.com
            name: Kevin Tew
          - email: jerry.gay@gmail.com
            name: jerry gay
        subject: 'Re: [perl #40559] AutoReply: $FindBin::Bin has a trailing / in scripts on Perl 5.8.3'
        summary: |-
          Kevin Tew submitted a patch in ticket <rt://perl/40559>.  This patch
          solves a problem which was preventing `gen::makefiles` from running.
          Jerry Gay advised committing the patch.
      - date_from: 1161117260
        date_to: 1161121269
        hidden: ~
        message_id: 45353E33.1080501@tewk.com
        messages:
          - 200610172331.12086.lt@toetsch.at
          - 45354DC9.3020202@magma.ca
          - 45354816.8070208@tewk.com
          - 453548CA.6060803@tewk.com
          - 200610172341.07069.lt@toetsch.at
          - 19468B3A-1F93-4B8E-915B-543A035F3859@petdance.com
          - 200610172344.38450.lt@toetsch.at
          - f60fe000610171358v2fdab4ffs2caa6e27c511088c@mail.gmail.com
          - 5383970B-2723-445B-B6ED-77AD0BFC2663@petdance.com
          - 45354816.8070208@tewk.com
          - 453548CA.6060803@tewk.com
          - 200610172341.07069.lt@toetsch.at
          - 19468B3A-1F93-4B8E-915B-543A035F3859@petdance.com
          - 200610172344.38450.lt@toetsch.at
          - 1d9a3f400610171409vaa02012sfdbdd533ec28975@mail.gmail.com
          - 200610171410.08584.chromatic@wgz.org
        posters:
          - email: tewk@tewk.com
            name: Kevin Tew
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: shawnhcorey@magma.ca
            name: Mr. Shawn H. Corey
          - email: andy@petdance.com
            name: Andy Lester
          - email: markjreed@mail.com
            name: Mark J. Reed
          - email: jerry.gay@gmail.com
            name: jerry gay
          - email: chromatic@wgz.org
            name: chromatic
        subject: Coding Standard Questions
        summary: |-
          Kevin Tew listed a few things he encountered in Parrot internals which
          he did not like but which are not against the current coding standards.
          He wondered if they are acceptable style.  One of the issues had been
          addressed in PDD07.  There was some discussion on the other points.
          Andy Lester begged for an end to the discussion, asking everyone to
          follow whatever is in the PDD.  Kevin noted earlier that he was not
          trying to start a war, but to get a ruling on issues which are not
          currently in the specifications.
      - date_from: 1161128150
        date_to: 1161276366
        hidden: ~
        message_id: 1a83bc10610171635y56fdcb29n63d1f0013b3ed9b8@mail.gmail.com
        messages:
          - 200610182052.48217.lt@toetsch.at
          - 1a83bc10610190944t2c25f229yd780ce908f95af3e@mail.gmail.com
        posters:
          - email: karl.forner@gmail.com
            name: Karl Forner
          - email: lt@toetsch.at
            name: Leopold Toetsch
        subject: '[QUESTION] PMC Pre-allocation'
        summary: |-
          Karl Forner asked if there was a way to specify the minimum allocation
          size for PMCs.  Leopold Toetsch replied that the issue had come up a
          number of times.  He explained the history behind it, and offered 
          suggestions for resolving the legacy confusion.
      - date_from: 1161129288
        date_to: 1161129288
        hidden: ~
        message_id: 1a83bc10610171654s380a4387xbe3078574c0893fe@mail.gmail.com
        posters:
          - email: karl.forner@gmail.com
            name: Karl Forner
        subject: PMCs exact allocated size
        summary: |-
          Karl Forner noted that it would be useful to know the exact amount of
          memory a PMC is using.
      - date_from: 1161167345
        date_to: 1161167345
        hidden: ~
        message_id: rt-3.5.HEAD-4971-1161167328-60.40560-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Paul Cochrane
        rt_ticket: 'perl #40560'
        subject: '[perl #40560] [PATCH] minor languages/regex/lib/Regex/Grammar.y fix '
        summary: |-
          In ticket <rt://perl/40560>, Paul Cochrane provided a patch to make
          `regex/lib/Regex/Grammar.y` pass `t/codingstd/cppcomments.t`.
      - date_from: 1161178930
        date_to: 1161178930
        hidden: merged with AFCEF217-8E1F-4431-9115-36B17012F4DC@audreyt.org
        message_id: 453628AC.90008@tewk.com
        posters:
          - email: tewk@tewk.com
            name: Kevin Tew
        subject: sub :init implementation
        summary: ''
      - date_from: 1161186055
        date_to: 1161186055
        hidden: ~
        message_id: rt-3.5.HEAD-4971-1161186038-1509.40562-72-0@perl.org
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Jerry Gay
        rt_ticket: 'perl #40562'
        subject: "[perl #40562] [TODO] add 'list policies' option to t/op/perlcritic.t "
        summary: |-
          Jerry Gay created ticket <rt://perl/40562> to suggest adding a 
          command-line option to perlcritic tests which would display a list
          of policies.
      - date_from: 1159477546
        date_to: 1160080050
        hidden: ~
        message_id: 451C3913.7050008@perl.org
        messages:
          - 73ddeb6c0609291854n10b665c2sc46082688d45595f@mail.gmail.com
          - 45256A9D.8030908@perl.org
          - 200609281530.40032.chromatic@wgz.org
          - 17720.50352.234139.558750@localhost.localdomain
          - 4523C179.7070706@ajs.com
          - 200610041028.49956.chromatic@wgz.org
          - 17692.17389.968384.475867@localhost.localdomain
          - 200609281530.40032.chromatic@wgz.org
          - 17720.50352.234139.558750@localhost.localdomain
          - 4523C179.7070706@ajs.com
          - 200610041028.49956.chromatic@wgz.org
        posters:
          - email: allison@perl.org
            name: Allison Randal
          - email: a.r.ferreira@gmail.com
            name: Adriano Ferreira
          - email: chromatic@wgz.org
            name: chromatic
          - email: triska@gmx.at
            name: Markus Triska
          - email: ajs@ajs.com
            name: Aaron Sherman
        subject: requirements gathering on mini transformation language
        summary: |-
          Earlier, Allison Randal asked for a volunteer to write up the requirements
          for a mini transformation language to use the compiler tools.
          
          This week, Markus Triska linked to a section of
          [Stefan Karl's master's 
          thesis](http://stud4.tuwien.ac.at/~e0225855/kral_optimizer.pdf)
          on the implementation a rule-based peep-hole optimizer which Markus
          felt might relate to the current discussion.
      - date_from: 1161206872
        date_to: 1161322274
        hidden: ~
        message_id: rt-3.5.HEAD-4979-1161206861-1473.40564-72-0@perl.org
        messages:
          - 2BECE689-DFA8-4F80-B945-20ABCC181732@chrisdolan.net
        posters:
          - email: parrotbug-followup@parrotcode.org
            name: Jerry Gay
          - email: chris@chrisdolan.net
            name: Chris Dolan
        rt_ticket: 'perl #40564'
        subject: '[perl #40564] [TODO] fix perlcritic Subroutines::RequireFinalReturn policy '
        summary: |-
          In ticket <rt://perl/40564>, Jerry Gay requested that the perlcritic
          policy be changed to ignore subroutines which exit or die when checking
          for explicit return statements.  Chris Dolan replied that it was fixed
          in Perl::Critic r737, which will be included in the next release of
          Perl::Critic.
      - date_from: 1161209949
        date_to: 1161222524
        hidden: ~
        message_id: 1a83bc10610181518h2c2b06el9696de093ebbd3f8@mail.gmail.com
        messages:
          - 4536D966.8020904@tewk.com
        posters:
          - email: karl.forner@gmail.com
            name: Karl Forner
          - email: tewk@tewk.com
            name: Kevin Tew
        subject: "[PATCH] today's build failed because of a missing 'use'"
        summary: |-
          Karl Forner reported that his Parrot build failed due to a missing
          `use File::Spec`.  He included a patch, which Kevin Tew applied.
      - date_from: 1161292791
        date_to: 1161450639
        hidden: ~
        message_id: 20061019211914.GB22290@host.pmichaud.com
        messages:
          - 200610211910.21615.lt@toetsch.at
          - 198c87380610191901m25201dfre6bcc85bc862dc2e@mail.gmail.com
          - 45387FF0.70309@perl.org
          - 20061020024607.GA24165@host.pmichaud.com
          - 198c87380610192020r49dd85edi95e76c4d9f94c0ec@mail.gmail.com
          - 20061020044025.GA27958@host.pmichaud.com
          - 4538867E.9050803@perl.org
          - 198c87380610200730u5e1d3550od5bbf86a492a2c59@mail.gmail.com
          - 20061020171131.46901.qmail@spout.spiders.net
        posters:
          - email: pmichaud@pobox.com
            name: Patrick R. Michaud
          - email: lt@toetsch.at
            name: Leopold Toetsch
          - email: mddiep@gmail.com
            name: Matt Diephouse
          - email: allison@perl.org
            name: Allison Randal
          - email: will@coleda.com
            name: Will Coleda
        subject: 'classnames and HLL namespaces -- help!'
        summary: |-
          Patrick R. Michaud wrote of his confusion on how to deal with classname
          conflicts when multiple HLL namespaces are involved, now that PDD21 has
          changed.  Matt Diephouse, Allison Randal, Leopold Toetsch and
          Will Coleda joined the thread.  The conclusion seemed to be that
          namespace pollution still needs to be resolved and the object model
          is due for discussion as well.
      - date_from: 1161299541
        date_to: 1161299541
        hidden: ~
        message_id: 1a83bc10610191611k2b9db683tc8e6501436c33507@mail.gmail.com
        posters:
          - email: karl.forner@gmail.com
            name: Karl Forner
        subject: '[HOWTO] add a C file to get archived in libparrot.a'
        summary: |-
          Karl Forner asked what he needed to do to have his .o file added in
          `libparrot.a`.
    title: Parrot Porters
  - name: perl6-users
    threads:
      - date_from: 1161090708
        date_to: 1161090708
        hidden: ~
        message_id: EB386642-7679-4F61-8FB5-993671DD0512@audreyt.org
        posters:
          - email: audreyt@audreyt.org
            name: Audrey Tang
        subject: '[ANNOUNCE] Pugs 6.2.13 released!'
        summary: |-
          Audrey Tang announced the release of Pugs 6.2.13.  Her message detailed
          the many changes which have been made in the last four months.
      - date_from: 1161342254
        date_to: 1161346420
        hidden: ~
        message_id: 4538ACF0.60400@rusrating.ru
        messages:
          - 873b9j43pz.fsf@teufelkommraus.webit.de
        posters:
          - email: richard@rusrating.ru
            name: Richard Hainsworth
          - email: schwigon@webit.de
            name: Steffen Schwigon
        subject: Embedded perl5 modules
        summary: |-
          Richard Hainsworth has been trying to test GUI Perl 5 modules in Pugs
          6.13.  He showed an example of how he modified his code, and the error
          it returned.  Steffen Schwigon had a suggestion on how to correct the
          Perl 6 code.
    title: Users
  - name: perl6-compiler
    threads:
      - date_from: 1161016109
        date_to: 1161023136
        hidden: ~
        message_id: m2hcy4tedd.fsf@cs.ucsd.edu
        messages:
          - 20061016182302.GH562@sike.forum2.org
        posters:
          - email: sorourke@cs.ucsd.edu
            name: Sean O'Rourke
          - email: gaal@forum2.org
            name: Gaal Yahas
        subject: '[patch] no strict for -e scripts'
        summary: |-
          Sean O'Rourke submitted a patch to remove `strict 'vars'` for -e scripts.
          Gaal Yahas reported that they will continue transitioning to the new
          AST, which will allow lexical pragmas.
    title: Compiler
title: Weekly Perl 6 mailing list summary
