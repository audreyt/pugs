=head1 NAME

PIL2JS - Compiler from PIL to JavaScript

=head1 DESCRIPTION

C<pil2js.pl> is a Perl 5 program taking PIL (as given by C<pugs -CPIL>) and
outputting JavaScript.

Run C<pil2js.pl --help> to get usage information.

=head1 FILE HIERARCHY

  .
  |-- pil2js.pl           Frontend for the PIL:: modules
  |-- lib
  |   |-- PIL
  |   |   |-- Parser.pm   PIL::Parser (parses PIL)
  |   |   `-- Nodes.pm    Module which provides appropriate ->as_js methods
  |   |                   for the objects returned by PIL::Parser
  |   |-- Prelude
  |   |   `-- JS.pm       JavaScript Prelude, written in Perl 6

=head1 WHAT'S WORKING YET?

=over

=item *

Variables (scalars and arrays)

=item *

Subroutine and (slightly simplified) method declaration (with support for C<is
rw>, C<is copy>, and default values for optional arguments),

=item *

Subroutine and method invocation

=item *

Basic operators (C<< &infix:<==> >>, C<< &infix:<eq> >>, C<< &prefix:<+> >>,
...)

=item *

Basic builtins (C<say>, C<defined>, C<if>, C<loop>, C<while>, C<until>)

=item *

Global C<JS> namespace to use JavaScript's classes (e.g.
C<$*JS::document.write>, C<JS::alert "Pugs rocks">)

=back

=head1 DESIGN

Because JavaScript passes primitive values (strings, numbers, etc.) by value, I
had to create a proxying object, as Perl requires support for C<is rw> and C<is
copy>. C<new PIL2JS.Box(value)> returns an object supporting the methods
C<.GET()> (returns C<value>), C<.STORE(new_value)> (set to new value),
C<.clone()>, and C<.toNative()> (return value as native object).

Additionally, there's C<PIL2JS.Box.ReadOnly>, which proxies a C<PIL2JS.Box>,
but C<die()>s upon C<.STORE()>.

C<new PIL2JS.Box.Constant(value)> is sugar for C<new PIL2JS.Box.ReadOnly(new
PIL2JS.Box(value))>.

=head2 Assignment

Assignment is, thanks to the container type C<PIL2JS.Box>, simple:
C<dest.STORE(source.GET())>

=head2 Binding

Binding is even simpler: C<dest = source>

=head1 TODO

=over

=item *

Make C<use js:Foo> load C<Foo> from L<JSAN|http://www.openjsan.org/>?

=item *

Primitives

=back

=head1 AUTHOR

Ingo Blechschmidt C<<iblech@web.de>>

=head1 LICENSE

This program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself. See L<perlgpl> and L<perlartistic> for details.

=cut
