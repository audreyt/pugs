=pod

=encoding utf8

=head1 NAME

Rosetta::SeeAlso -
External resources that you really ought to look at

=head1 DESCRIPTION

This document is a central location within the L<Rosetta> distribution
where any important recommendations of or links to external resources go.
This includes both resources that helped me when I made Rosetta, as well as
Resources that are or could be related to Rosetta.

=head1 INFORMATION SOURCES

During my work on this project, I found the following resources to be
particularly useful:

=over

=item L<http://www.thethirdmanifesto.com/>

This is the Hugh Darwen's and Christopher J. Date's home on the web for
"The Third Manifesto" (TTM), their formal proposal for a solid foundation
for data and database management systems (DBMSs); like Edgar F. Codd's
original papers, TTM can be seen as an abstract blueprint for the design of
a DBMS and the language interface to such a DBMS.  It consists in essence
of a rigorous set of principles, stated in the form of a series of
prescriptions and proscriptions, that the authors require adherence to on
the part of a hypothetical database programming language that they call D.

The proposal would avoid 'Object-Relational Impedance Mismatch' between
object-oriented programming languages and RDBMSs by fully supporting all
the capabilities of the relational model.  The main objective of The Third
Manifesto, besides being theoretically sound and avoiding arbitrary
restrictions and pragmatic debasement of the relational model, is to make a
simple, restricted and precise definition of the role of object orientation
in database management systems emphasising the few valid ideas from object
modeling that are orthogonal to relational modeling.

Rosetta has officially incorporated this blueprint into its own design, and
implements its principles without compromise, and so its API is a concrete
language that qualifies as a D.  The TTM web site contains various useful
documents and links on the subject, some being specified further below.

=item B<Database in Depth: Relational Theory for Practitioners>

Christopher J. Date - "Database in Depth: Relational Theory for
Practitioners, 1st edition, Oreilly, 2005 (ISBN: 0-596-10012-4)"; see
L<http://www.oreilly.com/catalog/databaseid/>.

This is the first printed book that I read fully, which is related to The
Third Manifesto, and it was my main introduction.  It explains in an easy
to follow matter just what the relational data model really is, a solid and
provable logical system, and partially contrasts with SQL's distorted view
of it.  While being easy to follow, the book is written towards people that
are already database professionals, and doesn't go into the basics that we
should already know.

=item B<Databases, Types, and The Relational Model: The Third Manifesto>

Christopher J. Date, Hugh Darwen - "Databases, Types, and The Relational
Model: The Third Manifesto, 3rd edition, Addison-Wesley, 2006 (ISBN:
0-321-39942-0)"; see
L<http://www.aw-bc.com/catalog/academic/product/0,1144,0321399420,00.html>.

This is the thicker, college level textbook about The Third Manifesto, and
it is the most central of the authors' publications, able to stand alone
and present nearly everything important.  It includes an informal overview
of both the relational model and a theory of types, a reference section
with the Manifesto proper and a grammar for a teaching language based on
its principles called Tutorial D, a larger section which explains and
rationalizes the parts of the Manifesto, and sections that do likewise for
type inheritence what the earlier sections do with the Manifesto proper.

Note that the web site for The Third Manifesto, mentioned above, has
reproduced several chapters and appendicies from this book.  Chapter 4
(L<http://web.onetel.com/~hughdarwen/TheThirdManifesto/CHAP04.pdf>) is the
15-page heart of the book and has the actual TTM definition, upon which the
rest of the book expands on, rationalizes, and gives examples of.  Chapter
5 (L<http://web.onetel.com/~hughdarwen/TheThirdManifesto/CHAP05.pdf>) gives
the the complete grammar of "Tutorial D", which is a computationally
complete programming language with fully integrated database functionality,
whose principal purpose is to serve as a teaching vehicle.

=item L<http://www.acm.org/classics/nov95/toc.html>

Edgar F. Codd - "A Relational Model of Data for Large Shared Data Banks"

Reprinted from I<Communications of the ACM>, Vol. 13, No. 6, June 1970, pp.
377-387. Copyright © 1970, Association for Computing Machinery, Inc.

This is the second famous 1969/1970 publication that first presented a
relational model of data to the world, which is the basis for the modern
database industry.

=item L<http://www.wiscorp.com/SQLStandards.html>

This web page of Whitemarsh Information Systems Corporation, run by one of
the people on the SQL standard drafting community, has copies of the
official SQL:2003 and SQL:1999 specification documents, and other related
helpful documents about SQL, in PDF format.  For example, "an almost
indistinguishable delta on the actual SQL 2003 database standard" is at
L<http://www.wiscorp.com/sql/sql_2003_standard.zip> (warning, large file).

=item L<http://www.unicode.org/standard/standard.html>

Unicode Standard official documentation.

=item L<http://en.wikipedia.org/wiki/Relational_model>

The Wikipedia article on the relational data model, and related topics.

=item L<http://en.wikipedia.org/wiki/Tuple_calculus>

The Wikipedia article on Tuple calculus, a basis of the relational model.

=back

Also, the vendor documentation for various relational and/or SQL databases
such as MySQL and SQLite were regularly consulted, and various other sites.

=head1 SOME FULLY TTM/D RELATED DBMS PROJECTS

Besides the Rosetta DBMS framework, other projects exist which attempt to
implement The Third Manifesto fully and without compromise (that lack
anti-TTM features), though their current implementations may be incomplete
and/or in development.  None of these use 'SQL' as their native language.

=head2 Free and Open Source Software

These software projects are released under a free and open source license,
as Rosetta is, so you have the freedom to use the software for any purpose,
to examine the project source code, change it, and redistribute it:

=over

=item B<Rel> - L<http://dbappbuilder.sourceforge.net/Rel.html>

Rel is a relational database server, written by Dave Voorhis
(d.voorhis@derby.ac.uk), that implements Date and Darwen's "Tutorial D"
language mainly "by the book".  It is written in Java (version 1.5) and is
operating-system independent.  It is licensed under the GNU GPL.

=item B<Duro> - L<http://duro.sourceforge.net/>

Duro is a relational database library, written by René Hartmann
(rhartmann@users.sourceforge.net).  It is written in C (with a Tcl
interface), is implemented on top of the Berkeley DB database library, and
runs on all POSIX/Unix-like and 32-bit Windows operating systems.  It is
licensed under the GNU GPL.

=back

=head2 Shared Source Software

These software projects are released with access to the project source code
but lack permissions on use, modification, or redistribution that are
essential to qualify as free and open source software; some are available
at zero cost:

=over

=item B<FlipDB> - L<http://www.flipdb.com/>

FlipDB is a relational database management system written by Paul Mansour
(paul@carlislegroup.com).  Pending a full implementation of the relational
algebra, FlipDB uses a simple but powerful query technique that simulates
relation-valued attributes and obviates the need for outer join (or any
explicit join).  The author is using Date's and Darwen's work as a guide,
and his intention is to not violate any of the principles set forth in TTM,
if not to implement all of Tutorial D.  It is written in Dyalog APL, in a
functional style with no loops or control structures, and runs only on
32-bit Windows operating systems.  It is available under a shared source
agreement for personal use and study.

=back

=head2 Closed Source Software

These software projects are released without access to the project source
code or permission to change them, though some are available at zero cost:

=over

=item B<Opus> - L<http://ca.geocities.com/dcauz@rogers.com/opus/>

Opus is a command-line relational database development system, written by
David Cauz (dcauz@rogers.com) and Paul Church, that implements its own
"Opus" language (that has the syntactic style of C).  It is written in C
and only runs on Windows.

=back

=head2 Academic Design Projects

These project designs were made for academic purposes and don't include
implementations:

=over

=item B<Db ("D flat")> -
L<http://web.onetel.com/~hughdarwen/TheThirdManifesto/REAL.pdf>

This is a final year project by UMIST student Peter Nicol.

=back

=head1 SOME PARTIALLY TTM/D RELATED DBMS PROJECTS

Some DBMS exist which desire to support TTM principles but still justify
themselves to provide features that are anti-TTM.  They may or may not use
a SQL dialect as their command language.

=head2 Free and Open Source Software

=over

=item B<Genezzo> - L<http://www.genezzo.com/>

Genezzo is a micro kernel style enterprise-strength SQL database server,
written mainly by Jeffrey Cohen (jcohen@cpan.org), currently under
construction.  It is written in a hybrid of C and Perl 5, and runs on any
operating system.  It is licensed under the GNU GPL.

I<Note: Genezzo sans its SQL interface is currently a front-line candidate
for implementing a production / industrial strength Rosetta Engine.>

=back

=head2 Closed Source Software

=over

=item B<Dataphor> - L<http://www.alphora.com/>

Dataphor is a TTM-inspired commercial database application development tool
set, owned by Alphora (a division of Softwise, Inc.), that implements its
own "D4" language.  While TTM conformant in many other respects, Alphora
found it necessary to support SQL-style nulls.  It is written to the .Net
platform and only runs on Windows.  It is implemented using a federated
server that employs various other database engines for storage.

=item B<Teradata> - L<http://www.teradata.com/>

Teradata is a commercial DBMS that, as far as the developers know, is the
only SQL-DBMS that supports and/or defaults to set semantics.  They also
support, but don't encourage the use of, a mode that supports bag
semantics.  Bindings for many programming languages exist, including for
Perl 5.

=back

=head1 SOME SQL-BASED DBMS PROJECTS

Many DBMS exist which do not expressly support TTM principles and/or
actively embrace anti-TTM features.  Many of those use a SQL dialect as
their primary or only interface; a relative few are listed here.

=head2 Free and Open Source Software

=over

=item B<SQLite> - L<http://www.sqlite.org/>

SQLite is a small library that implements a fully transactional file-based
SQL database engine, written mainly by D. Richard Hipp (Hwaci - Applied
Software Research).  It is written in C (with creator-bundled Tcl bindings)
and runs on any operating system, being particularly suited for embedded
devices.  It is committed to the public domain and can be used in any other
license of program.  Bindings for many programming languages exist,
including for Perl 5.

=item B<PostgreSQL> - L<http://www.postgresql.org/>

PostgreSQL is a powerful SQL database server, owned by the PostgreSQL
Global Development Group.  It is written in C and runs on any operating
system.  It is licensed under a BSD-like license, specifically the license
of the University of California.  Bindings for many programming languages
exist, including for Perl 5.

=item B<MySQL> - L<http://www.mysql.com/>

MySQL is a multi-engine SQL database server, owned by MySQL AB.  It is
written in C and runs on any operating system.  It is dual-licensed under
the GNU GPL (at no cost) and under a proprietary license (for a fee).
Bindings for many programming languages exist, including for Perl 5.

=item B<Firebird> - L<http://www.firebirdsql.org/>

Firebird is a mature SQL database server, forked from the open sources of
InterBase by Inprise/Borland; portions are owned by Inprise/Borland and
members of the Firbird Foundation.  It is written in C++ (newer version)
and runs on any operating system.  Portions are licensed under various
Mozilla-Public-like licenses, specifically the Interbase Public License and
the Initial Developer's Public License.  Bindings for many programming
languages exist, including for Perl 5.

=back

=head2 Closed Source Software

=over

=item B<Oracle> - L<http://www.oracle.com/database/>

=item B<Sybase> - L<http://www.sybase.com/>

=item B<SQL Server> - L<http://www.microsoft.com/sql/>

=item B<Informix> - L<http://www.ibm.com/software/data/informix/>

=item B<DB2> - L<http://www.ibm.com/software/data/db2/>

=item B<OpenBase> - L<http://www.openbase.com/>

=item B<FrontBase> - L<http://www.frontbase.com/>

=back

=head1 SOME OTHER DBMS PROJECTS

Many DBMS exist that are neither TTM/D-based nor primarily SQL based; a
relative few are listed here.

=head2 Free and Open Source Software

=over

=item B<Berkeley DB> - L<http://www.sleepycat.com/>

=back

=head2 Closed Source Software

=over

=item B<FileMaker Pro> - L<http://www.filemaker.com/>

=item B<Valentina> - L<http://www.paradigmasoft.com/>

=back

=head1 LIST OF PUBLIC ROSETTA ENGINES

I<This documentation is pending.>

L<Rosetta::Engine::Example>.

=head1 PUBLIC SOLUTIONS BUILT OVER ROSETTA

I<This documentation is pending.>

These Perl 5 applications and frameworks are at the front of the line to
get Rosetta bindings: L<Catalyst>, L<Maypole>, L<Bricolage>, L<RT>.

=head1 DBMS-RELATED PERL MODULES

I<This documentation is pending.>

These other Perl 6 packages also work in the problem domain of managing
data or data definitions or connections to databases:

L<Set::Relation>, L<Set>.

These other Perl 5 packages also work in the problem domain of managing
data or data definitions or connections to databases:

L<DBI>, L<Tangram>, L<DBIx::Class>, L<HDB>, L<Class::DBI>, L<Pixie>,
L<Alzabo>, L<DBIx::SQLEngine>, L<Rose::DB>, L<SPOPS>, L<Set::Object>,
L<Set::Scalar>, L<Object::Relation>, L<Oryx>, L<DBM::Deep>,
L<DBIx::SearchBuilder>, L<DBIx::RecordSet>, L<DBIx::Abstract>,
L<DBIx::AnyDBD>, L<DBIx::Browse>, L<DBIx::DBH>, L<MKDoc::SQL>,
L<Data::Transactional>, L<DBIx::ModelUpdate>, L<DBIx::ProcedureCall>,
L<DB::Ent>, L<DBIx::Romani>, L<DBIx::DBSchema>, L<DBIx::Namespace>,
L<TripleStore>, L<Data::Table>, L<ORM>, L<OOPS>, L<Object::Transaction>,
L<Relations>, L<DBIx::SimplePerl>, L<DBIx::YAWM>, L<Class::Entity>,
L<SQL::Statement>, L<SQL::Parser>, L<SQL::Translator>, L<SQL::YASP>,
L<SQL::Generator>, L<SQL::Schema>, L<SQL::Abstract>, L<SQL::Snippet>,
L<SQL::Catalog>.

=head1 AUTHOR

Darren R. Duncan (C<perl@DarrenDuncan.net>)

=head1 LICENCE AND COPYRIGHT

This file is part of the Rosetta DBMS framework.

Rosetta is Copyright (c) 2002-2007, Darren R. Duncan.

See the LICENCE AND COPYRIGHT of L<Rosetta> for details.

=head1 ACKNOWLEDGEMENTS

The ACKNOWLEDGEMENTS in L<Rosetta> apply to this file too.

=cut
