{-# OPTIONS_GHC -fglasgow-exts -O0 #-}

{-|
    Prelude generator.
-}

{-
I'd do this in Perl, but presumably show escapes nasty things I didn't
think about.

Unfortunately, this doesn't put literal newlines in the output. There's a
bug in any(The Haskell Report, sec. 2.6; GHC; my understanding) regarding
strings with gaps, when beteween the gaps there is an empty line. Fixes
welcome :-)

-}

module Main where

main :: IO ()

main = do
    putStr "\
\{-# OPTIONS -fglasgow-exts #-}\n\
\ \n\
\{-\n\
\    *** NOTE ***\n\
\    DO NOT EDIT THIS FILE.\n\
\    This module is generated by src/gen_prelude.\n\
\-}\n\
\ \n\
\{-|\n\
\    Pugs Prelude\n\
\ \n\
\-}\n\
\ \n\
\ \n\
\module Pugs.Prelude (\n\
\    preludeStr\n\
\) where\n\
\ \n\
\preludeStr :: String\n\
\preludeStr = "
    getContents >>= putStr . show
