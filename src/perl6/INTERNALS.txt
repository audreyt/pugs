This is the current list of internal methods and functions that
must be implemented by a Perl 6 backend in order for the Prelude 
to work correctly.

Perl6::Internals::compile_pir($code)
Perl6::Internals::exit $status;
Perl6::Internals::sleep $seconds;
Perl6::Internals::caller($kind, $skip, $label);
Perl6::Internals::compile_file_to_yml($path);

Perl6::Internals::install_pragma_value($?CLASS, 0)
Perl6::Internals::current_pragma_value($?CLASS) 

Perl6::Internals::eval_perl6($code)
Perl6::Internals::eval_haskell($code)
Perl6::Internals::eval_parrot($code)
Perl6::Internals::eval_perl5($code)
Perl6::Internals::eval_yaml($code)

Perl6::Internals::exec($prog, Bool, @args)
Perl6::Internals::hSeek(self, $position, $whence)
Perl6::Internals::hSetBinaryMode($fh, Bool)
Perl6::Internals::localtime(Bool::False, $sec, $pico)
Perl6::Internals::openFile($filename, $mode)
Perl6::Internals::require($module)
Perl6::Internals::require_use_helper(Bool,$module)
Perl6::Internals::runInteractiveCommand($command)
Perl6::Internals::sprintf($conversion,int($arg)) #There is a p6 version of this
Perl6::Internals::use($module)

