# For releases, we used to TODO all failing tests.
# Because this wasn't that easy at times, we have now a more central approach:
# Test.pm reads this file and checks, if there are some tests to forcetodo.
# 
# Example: To forcetodo tests 13-15 and 42 of t/foo/bar.t, uncomment the
# following line (note: use C</> as path delimiter -- win32 C<\> is converted
# to C</>):
#   t/foo/bar.t 13 14 15 42
# 
# (Side note: Lines matching /^#/ are comments. Be careful to only use " " as
# delimiter, not tabs or multiple spaces or whatever.)

## t/builtins

t/builtins/math/trig.t 2 3 4 5 6 7 8 12 13 14 15 16 17 18 19 20

t/builtins/strings/length.t 3 4 7 10 13
t/builtins/strings/uc.t 8

t/builtins/sleep.t 1
t/builtins/time.t 4
t/builtins/true.t 8
t/builtins/undef.t 20 21 26 28 29 30 31 32 33 34 35 36 37 40

## t/statements
t/statements/if.t 8
t/statements/loop.t 8
t/statements/return.t 5
t/statements/for.t 3 4 7 8 13 14 17 18 20 22
t/statements/given.t 1 4 14 15 23 24 25 26 33 34

## t/data_types
t/data_types/anon_block.t 14 15
t/data_types/hash.t 25 26
t/data_types/hash_ref.t 19 20 21 22 25 26 27 29 30 31 32

## t/operators
t/operators/arith.t 135 136 148 162 167
t/operators/assign.t 44 45 46 47
t/operators/inc.t 18 19
t/operators/short_circuit.t 16 17 23

## t/pugsbugs
t/pugsbugs/listquote.t 1
t/pugsbugs/map_constant_list.t 1
t/pugsbugs/parsing_if.t 1
t/pugsbugs/parsing_my.t 1
t/pugsbugs/segfault_nan_calculation.t 1

## t/subroutines
t/subroutines/currying.t 6 7
t/subroutines/multi_sub.t 1 2 3 4 6 7 8
t/subroutines/sub_ref.t 5 10 15 26 27
t/subroutines/sub_return_values.t 51

## t/unspecced
t/unspecced/cont.t 

## t/var
t/var/default_scalar.t 2 4
