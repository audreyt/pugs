{

    package KindaPerl6::Grammar;

    # Do not edit this file - Perl 5 generated by KindaPerl6
    use v5;
    use strict;
    no strict "vars";
    use constant KP6_DISABLE_INSECURE_CODE => 0;
    use KindaPerl6::Runtime::Perl5::Runtime;
    my $_MODIFIED;
    BEGIN { $_MODIFIED = {} }

    BEGIN {
        $_ =
          ::DISPATCH( $::Scalar, "new",
            { modified => $_MODIFIED, name => "$_" } );
    }
    do {
        do {
            if (
                ::DISPATCH(
                    ::DISPATCH(
                        ::DISPATCH(
                            $GLOBAL::Code_VAR_defined, 'APPLY',
                            $::KindaPerl6::Grammar
                        ),
                        "true"
                    ),
                    "p5landish"
                )
              )
            {
            }
            else {
                do {
                    do {
                        ::MODIFIED($::KindaPerl6::Grammar);
                        $::KindaPerl6::Grammar = ::DISPATCH(
                            ::DISPATCH(
                                $::Class, 'new',
                                ::DISPATCH(
                                    $::Str, 'new', 'KindaPerl6::Grammar'
                                )
                            ),
                            'PROTOTYPE',
                        );
                      }
                  }
            }
        };
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'space' ),
            ::DISPATCH(
                $::Code, 'new',
                {
                    code => sub {
                        my $MATCH;
                        $MATCH =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$MATCH' } )
                          unless defined $MATCH;

                        BEGIN {
                            $MATCH =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$MATCH' } );
                        }
                        my $List__ =
                          ::DISPATCH( $::ArrayContainer, 'new',
                            { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$str' } )
                          unless defined $str;

                        BEGIN {
                            $str =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$str' } );
                        }
                        my $pos;
                        $pos =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$pos' } )
                          unless defined $pos;

                        BEGIN {
                            $pos =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$pos' } );
                        }
                        $self = shift;
                        my $CAPTURE;
                        $CAPTURE =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$CAPTURE' } )
                          unless defined $CAPTURE;

                        BEGIN {
                            $CAPTURE = ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$CAPTURE' }
                            );
                        }
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        do {
                            ::MODIFIED($List__);
                            $List__ = ::DISPATCH( $CAPTURE, 'array', );
                        };
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( exists $Hash__->{_value}{_hash}{'str'} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str =
                                      ::DISPATCH( $Hash__, 'LOOKUP',
                                        ::DISPATCH( $::Str, 'new', 'str' ) );
                                  }
                            }
                            elsif (
                                exists $List__->{_value}{_array}[$_param_index]
                              )
                            {
                                $str =
                                  $List__->{_value}{_array}[ $_param_index++ ];
                            }
                            if ( exists $Hash__->{_value}{_hash}{'pos'} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos =
                                      ::DISPATCH( $Hash__, 'LOOKUP',
                                        ::DISPATCH( $::Str, 'new', 'pos' ) );
                                  }
                            }
                            elsif (
                                exists $List__->{_value}{_array}[$_param_index]
                              )
                            {
                                $pos =
                                  $List__->{_value}{_array}[ $_param_index++ ];
                            }
                        }
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Hash_ENV,
                                            'LOOKUP',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                'KP6_TOKEN_DEBUGGER'
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    ::DISPATCH(
                                        $GLOBAL::Code_say,
                                        'APPLY',
                                        ::DISPATCH(
                                            $GLOBAL::Code_infix_58__60__126__62_,
                                            'APPLY',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                '>>> token space at '
                                            ),
                                            ::DISPATCH(
                                                $GLOBAL::Code_infix_58__60__126__62_,
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    $GLOBAL::Code_infix_58__60__126__62_,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $::Str, 'new',
                                                        ' of ('
                                                    ),
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__126__62_,
                                                        'APPLY', $str,
                                                        ::DISPATCH(
                                                            $::Str, 'new',
                                                            ')'
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    );
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Code_prefix_58__60__33__62_,
                                            'APPLY',
                                            ::DISPATCH(
                                                $GLOBAL::Code_defined, 'APPLY',
                                                $str
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE',
                            ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ),
                            'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),
                            'STORE', $pos );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'to', ),
                            'STORE',
                            ::DISPATCH(
                                $GLOBAL::Code_infix_58__60__43__62_,
                                'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 )
                            )
                        );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            ::DISPATCH( $::Int, 'new', 1 )
                        );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $m2;
                                    $m2 = ::DISPATCH(
                                        $::Scalar,
                                        'new',
                                        {
                                            modified => $_MODIFIED,
                                            name     => '$m2'
                                        }
                                    ) unless defined $m2;

                                    BEGIN {
                                        $m2 = ::DISPATCH(
                                            $::Scalar,
                                            'new',
                                            {
                                                modified => $_MODIFIED,
                                                name     => '$m2'
                                            }
                                        );
                                    }
                                    ::DISPATCH_VAR(
                                        $m2, 'STORE',
                                        ::DISPATCH(
                                            $GLOBAL::Code_match_p5rx,
                                            'APPLY',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                '[[:space:]]'
                                            ),
                                            $str,
                                            ::DISPATCH(
                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                'APPLY',
                                                $pos,
                                                ::DISPATCH( $::Int, 'new', 0 )
                                            )
                                        )
                                    );
                                    do {
                                        if (
                                            ::DISPATCH(
                                                ::DISPATCH( $m2, "true" ),
                                                "p5landish"
                                            )
                                          )
                                        {
                                            do {
                                                ::DISPATCH_VAR(
                                                    ::DISPATCH( $MATCH, 'to', ),
                                                    'STORE',
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                        'APPLY',
                                                        ::DISPATCH(
                                                            $m2, 'to',
                                                        ),
                                                        ::DISPATCH(
                                                            $::Int, 'new',
                                                            0
                                                        )
                                                    )
                                                );
                                                ::DISPATCH( $::Int, 'new', 1 );
                                              }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( $::Int, 'new', 0 );
                                              }
                                        }
                                      }
                                  }
                              }
                        );
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Hash_ENV,
                                            'LOOKUP',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                'KP6_TOKEN_DEBUGGER'
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    do {
                                        if (
                                            ::DISPATCH(
                                                ::DISPATCH(
                                                    ::DISPATCH( $MATCH, 'bool',
                                                    ),
                                                    "true"
                                                ),
                                                "p5landish"
                                            )
                                          )
                                        {
                                            do {
                                                ::DISPATCH(
                                                    $GLOBAL::Code_say,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__126__62_,
                                                        'APPLY',
                                                        ::DISPATCH(
                                                            $::Str,
                                                            'new',
'<<< token space returned true to ('
                                                        ),
                                                        ::DISPATCH(
                                                            $GLOBAL::Code_infix_58__60__126__62_,
                                                            'APPLY',
                                                            ::DISPATCH(
                                                                $MATCH, 'to',
                                                            ),
                                                            ::DISPATCH(
                                                                $::Str, 'new',
                                                                ')'
                                                            )
                                                        )
                                                    )
                                                );
                                              }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH(
                                                    $GLOBAL::Code_say,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $::Str,
                                                        'new',
'<<< token space returned false '
                                                    )
                                                );
                                              }
                                        }
                                      }
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {
                            invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::Array, "new",
                                {
                                    _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {
                                                sigil       => '$',
                                                twigil      => '',
                                                name        => 'str',
                                                value       => $::Undef,
                                                has_default => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_named_only => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_optional => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_slurpy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_multidimensional =>
                                                  ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                  ),
                                                is_rw => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_copy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {
                                                sigil       => '$',
                                                twigil      => '',
                                                name        => 'pos',
                                                value       => $::Undef,
                                                has_default => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_named_only => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_optional => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_slurpy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_multidimensional =>
                                                  ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                  ),
                                                is_rw => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_copy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'word' ),
            ::DISPATCH(
                $::Code, 'new',
                {
                    code => sub {
                        my $MATCH;
                        $MATCH =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$MATCH' } )
                          unless defined $MATCH;

                        BEGIN {
                            $MATCH =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$MATCH' } );
                        }
                        my $List__ =
                          ::DISPATCH( $::ArrayContainer, 'new',
                            { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$str' } )
                          unless defined $str;

                        BEGIN {
                            $str =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$str' } );
                        }
                        my $pos;
                        $pos =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$pos' } )
                          unless defined $pos;

                        BEGIN {
                            $pos =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$pos' } );
                        }
                        $self = shift;
                        my $CAPTURE;
                        $CAPTURE =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$CAPTURE' } )
                          unless defined $CAPTURE;

                        BEGIN {
                            $CAPTURE = ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$CAPTURE' }
                            );
                        }
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        do {
                            ::MODIFIED($List__);
                            $List__ = ::DISPATCH( $CAPTURE, 'array', );
                        };
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( exists $Hash__->{_value}{_hash}{'str'} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str =
                                      ::DISPATCH( $Hash__, 'LOOKUP',
                                        ::DISPATCH( $::Str, 'new', 'str' ) );
                                  }
                            }
                            elsif (
                                exists $List__->{_value}{_array}[$_param_index]
                              )
                            {
                                $str =
                                  $List__->{_value}{_array}[ $_param_index++ ];
                            }
                            if ( exists $Hash__->{_value}{_hash}{'pos'} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos =
                                      ::DISPATCH( $Hash__, 'LOOKUP',
                                        ::DISPATCH( $::Str, 'new', 'pos' ) );
                                  }
                            }
                            elsif (
                                exists $List__->{_value}{_array}[$_param_index]
                              )
                            {
                                $pos =
                                  $List__->{_value}{_array}[ $_param_index++ ];
                            }
                        }
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Hash_ENV,
                                            'LOOKUP',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                'KP6_TOKEN_DEBUGGER'
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    ::DISPATCH(
                                        $GLOBAL::Code_say,
                                        'APPLY',
                                        ::DISPATCH(
                                            $GLOBAL::Code_infix_58__60__126__62_,
                                            'APPLY',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                '>>> token word at '
                                            ),
                                            ::DISPATCH(
                                                $GLOBAL::Code_infix_58__60__126__62_,
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    $GLOBAL::Code_infix_58__60__126__62_,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $::Str, 'new',
                                                        ' of ('
                                                    ),
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__126__62_,
                                                        'APPLY', $str,
                                                        ::DISPATCH(
                                                            $::Str, 'new',
                                                            ')'
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    );
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Code_prefix_58__60__33__62_,
                                            'APPLY',
                                            ::DISPATCH(
                                                $GLOBAL::Code_defined, 'APPLY',
                                                $str
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE',
                            ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ),
                            'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),
                            'STORE', $pos );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'to', ),
                            'STORE',
                            ::DISPATCH(
                                $GLOBAL::Code_infix_58__60__43__62_,
                                'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 )
                            )
                        );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            ::DISPATCH( $::Int, 'new', 1 )
                        );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $m2;
                                    $m2 = ::DISPATCH(
                                        $::Scalar,
                                        'new',
                                        {
                                            modified => $_MODIFIED,
                                            name     => '$m2'
                                        }
                                    ) unless defined $m2;

                                    BEGIN {
                                        $m2 = ::DISPATCH(
                                            $::Scalar,
                                            'new',
                                            {
                                                modified => $_MODIFIED,
                                                name     => '$m2'
                                            }
                                        );
                                    }
                                    ::DISPATCH_VAR(
                                        $m2, 'STORE',
                                        ::DISPATCH(
                                            $GLOBAL::Code_match_p5rx,
                                            'APPLY',
                                            ::DISPATCH(
                                                $::Str, 'new', '[[:word:]]'
                                            ),
                                            $str,
                                            ::DISPATCH(
                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                'APPLY',
                                                $pos,
                                                ::DISPATCH( $::Int, 'new', 0 )
                                            )
                                        )
                                    );
                                    do {
                                        if (
                                            ::DISPATCH(
                                                ::DISPATCH( $m2, "true" ),
                                                "p5landish"
                                            )
                                          )
                                        {
                                            do {
                                                ::DISPATCH_VAR(
                                                    ::DISPATCH( $MATCH, 'to', ),
                                                    'STORE',
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                        'APPLY',
                                                        ::DISPATCH(
                                                            $m2, 'to',
                                                        ),
                                                        ::DISPATCH(
                                                            $::Int, 'new',
                                                            0
                                                        )
                                                    )
                                                );
                                                ::DISPATCH( $::Int, 'new', 1 );
                                              }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( $::Int, 'new', 0 );
                                              }
                                        }
                                      }
                                  }
                              }
                        );
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Hash_ENV,
                                            'LOOKUP',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                'KP6_TOKEN_DEBUGGER'
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    do {
                                        if (
                                            ::DISPATCH(
                                                ::DISPATCH(
                                                    ::DISPATCH( $MATCH, 'bool',
                                                    ),
                                                    "true"
                                                ),
                                                "p5landish"
                                            )
                                          )
                                        {
                                            do {
                                                ::DISPATCH(
                                                    $GLOBAL::Code_say,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__126__62_,
                                                        'APPLY',
                                                        ::DISPATCH(
                                                            $::Str,
                                                            'new',
'<<< token word returned true to ('
                                                        ),
                                                        ::DISPATCH(
                                                            $GLOBAL::Code_infix_58__60__126__62_,
                                                            'APPLY',
                                                            ::DISPATCH(
                                                                $MATCH, 'to',
                                                            ),
                                                            ::DISPATCH(
                                                                $::Str, 'new',
                                                                ')'
                                                            )
                                                        )
                                                    )
                                                );
                                              }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH(
                                                    $GLOBAL::Code_say,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $::Str,
                                                        'new',
'<<< token word returned false '
                                                    )
                                                );
                                              }
                                        }
                                      }
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {
                            invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::Array, "new",
                                {
                                    _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {
                                                sigil       => '$',
                                                twigil      => '',
                                                name        => 'str',
                                                value       => $::Undef,
                                                has_default => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_named_only => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_optional => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_slurpy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_multidimensional =>
                                                  ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                  ),
                                                is_rw => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_copy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {
                                                sigil       => '$',
                                                twigil      => '',
                                                name        => 'pos',
                                                value       => $::Undef,
                                                has_default => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_named_only => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_optional => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_slurpy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_multidimensional =>
                                                  ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                  ),
                                                is_rw => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_copy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'digit' ),
            ::DISPATCH(
                $::Code, 'new',
                {
                    code => sub {
                        my $MATCH;
                        $MATCH =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$MATCH' } )
                          unless defined $MATCH;

                        BEGIN {
                            $MATCH =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$MATCH' } );
                        }
                        my $List__ =
                          ::DISPATCH( $::ArrayContainer, 'new',
                            { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$str' } )
                          unless defined $str;

                        BEGIN {
                            $str =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$str' } );
                        }
                        my $pos;
                        $pos =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$pos' } )
                          unless defined $pos;

                        BEGIN {
                            $pos =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$pos' } );
                        }
                        $self = shift;
                        my $CAPTURE;
                        $CAPTURE =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$CAPTURE' } )
                          unless defined $CAPTURE;

                        BEGIN {
                            $CAPTURE = ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$CAPTURE' }
                            );
                        }
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        do {
                            ::MODIFIED($List__);
                            $List__ = ::DISPATCH( $CAPTURE, 'array', );
                        };
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( exists $Hash__->{_value}{_hash}{'str'} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str =
                                      ::DISPATCH( $Hash__, 'LOOKUP',
                                        ::DISPATCH( $::Str, 'new', 'str' ) );
                                  }
                            }
                            elsif (
                                exists $List__->{_value}{_array}[$_param_index]
                              )
                            {
                                $str =
                                  $List__->{_value}{_array}[ $_param_index++ ];
                            }
                            if ( exists $Hash__->{_value}{_hash}{'pos'} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos =
                                      ::DISPATCH( $Hash__, 'LOOKUP',
                                        ::DISPATCH( $::Str, 'new', 'pos' ) );
                                  }
                            }
                            elsif (
                                exists $List__->{_value}{_array}[$_param_index]
                              )
                            {
                                $pos =
                                  $List__->{_value}{_array}[ $_param_index++ ];
                            }
                        }
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Hash_ENV,
                                            'LOOKUP',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                'KP6_TOKEN_DEBUGGER'
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    ::DISPATCH(
                                        $GLOBAL::Code_say,
                                        'APPLY',
                                        ::DISPATCH(
                                            $GLOBAL::Code_infix_58__60__126__62_,
                                            'APPLY',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                '>>> token digit at '
                                            ),
                                            ::DISPATCH(
                                                $GLOBAL::Code_infix_58__60__126__62_,
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    $GLOBAL::Code_infix_58__60__126__62_,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $::Str, 'new',
                                                        ' of ('
                                                    ),
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__126__62_,
                                                        'APPLY', $str,
                                                        ::DISPATCH(
                                                            $::Str, 'new',
                                                            ')'
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    );
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Code_prefix_58__60__33__62_,
                                            'APPLY',
                                            ::DISPATCH(
                                                $GLOBAL::Code_defined, 'APPLY',
                                                $str
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE',
                            ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ),
                            'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),
                            'STORE', $pos );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'to', ),
                            'STORE',
                            ::DISPATCH(
                                $GLOBAL::Code_infix_58__60__43__62_,
                                'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 )
                            )
                        );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            ::DISPATCH( $::Int, 'new', 1 )
                        );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $m2;
                                    $m2 = ::DISPATCH(
                                        $::Scalar,
                                        'new',
                                        {
                                            modified => $_MODIFIED,
                                            name     => '$m2'
                                        }
                                    ) unless defined $m2;

                                    BEGIN {
                                        $m2 = ::DISPATCH(
                                            $::Scalar,
                                            'new',
                                            {
                                                modified => $_MODIFIED,
                                                name     => '$m2'
                                            }
                                        );
                                    }
                                    ::DISPATCH_VAR(
                                        $m2, 'STORE',
                                        ::DISPATCH(
                                            $GLOBAL::Code_match_p5rx,
                                            'APPLY',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                '[[:digit:]]'
                                            ),
                                            $str,
                                            ::DISPATCH(
                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                'APPLY',
                                                $pos,
                                                ::DISPATCH( $::Int, 'new', 0 )
                                            )
                                        )
                                    );
                                    do {
                                        if (
                                            ::DISPATCH(
                                                ::DISPATCH( $m2, "true" ),
                                                "p5landish"
                                            )
                                          )
                                        {
                                            do {
                                                ::DISPATCH_VAR(
                                                    ::DISPATCH( $MATCH, 'to', ),
                                                    'STORE',
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                        'APPLY',
                                                        ::DISPATCH(
                                                            $m2, 'to',
                                                        ),
                                                        ::DISPATCH(
                                                            $::Int, 'new',
                                                            0
                                                        )
                                                    )
                                                );
                                                ::DISPATCH( $::Int, 'new', 1 );
                                              }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( $::Int, 'new', 0 );
                                              }
                                        }
                                      }
                                  }
                              }
                        );
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Hash_ENV,
                                            'LOOKUP',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                'KP6_TOKEN_DEBUGGER'
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    do {
                                        if (
                                            ::DISPATCH(
                                                ::DISPATCH(
                                                    ::DISPATCH( $MATCH, 'bool',
                                                    ),
                                                    "true"
                                                ),
                                                "p5landish"
                                            )
                                          )
                                        {
                                            do {
                                                ::DISPATCH(
                                                    $GLOBAL::Code_say,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__126__62_,
                                                        'APPLY',
                                                        ::DISPATCH(
                                                            $::Str,
                                                            'new',
'<<< token digit returned true to ('
                                                        ),
                                                        ::DISPATCH(
                                                            $GLOBAL::Code_infix_58__60__126__62_,
                                                            'APPLY',
                                                            ::DISPATCH(
                                                                $MATCH, 'to',
                                                            ),
                                                            ::DISPATCH(
                                                                $::Str, 'new',
                                                                ')'
                                                            )
                                                        )
                                                    )
                                                );
                                              }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH(
                                                    $GLOBAL::Code_say,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $::Str,
                                                        'new',
'<<< token digit returned false '
                                                    )
                                                );
                                              }
                                        }
                                      }
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {
                            invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::Array, "new",
                                {
                                    _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {
                                                sigil       => '$',
                                                twigil      => '',
                                                name        => 'str',
                                                value       => $::Undef,
                                                has_default => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_named_only => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_optional => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_slurpy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_multidimensional =>
                                                  ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                  ),
                                                is_rw => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_copy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {
                                                sigil       => '$',
                                                twigil      => '',
                                                name        => 'pos',
                                                value       => $::Undef,
                                                has_default => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_named_only => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_optional => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_slurpy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_multidimensional =>
                                                  ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                  ),
                                                is_rw => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_copy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'backslash' ),
            ::DISPATCH(
                $::Code, 'new',
                {
                    code => sub {
                        my $MATCH;
                        $MATCH =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$MATCH' } )
                          unless defined $MATCH;

                        BEGIN {
                            $MATCH =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$MATCH' } );
                        }
                        my $List__ =
                          ::DISPATCH( $::ArrayContainer, 'new',
                            { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$str' } )
                          unless defined $str;

                        BEGIN {
                            $str =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$str' } );
                        }
                        my $pos;
                        $pos =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$pos' } )
                          unless defined $pos;

                        BEGIN {
                            $pos =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$pos' } );
                        }
                        $self = shift;
                        my $CAPTURE;
                        $CAPTURE =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$CAPTURE' } )
                          unless defined $CAPTURE;

                        BEGIN {
                            $CAPTURE = ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$CAPTURE' }
                            );
                        }
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        do {
                            ::MODIFIED($List__);
                            $List__ = ::DISPATCH( $CAPTURE, 'array', );
                        };
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( exists $Hash__->{_value}{_hash}{'str'} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str =
                                      ::DISPATCH( $Hash__, 'LOOKUP',
                                        ::DISPATCH( $::Str, 'new', 'str' ) );
                                  }
                            }
                            elsif (
                                exists $List__->{_value}{_array}[$_param_index]
                              )
                            {
                                $str =
                                  $List__->{_value}{_array}[ $_param_index++ ];
                            }
                            if ( exists $Hash__->{_value}{_hash}{'pos'} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos =
                                      ::DISPATCH( $Hash__, 'LOOKUP',
                                        ::DISPATCH( $::Str, 'new', 'pos' ) );
                                  }
                            }
                            elsif (
                                exists $List__->{_value}{_array}[$_param_index]
                              )
                            {
                                $pos =
                                  $List__->{_value}{_array}[ $_param_index++ ];
                            }
                        }
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Hash_ENV,
                                            'LOOKUP',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                'KP6_TOKEN_DEBUGGER'
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    ::DISPATCH(
                                        $GLOBAL::Code_say,
                                        'APPLY',
                                        ::DISPATCH(
                                            $GLOBAL::Code_infix_58__60__126__62_,
                                            'APPLY',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                '>>> token backslash at '
                                            ),
                                            ::DISPATCH(
                                                $GLOBAL::Code_infix_58__60__126__62_,
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    $GLOBAL::Code_infix_58__60__126__62_,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $::Str, 'new',
                                                        ' of ('
                                                    ),
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__126__62_,
                                                        'APPLY', $str,
                                                        ::DISPATCH(
                                                            $::Str, 'new',
                                                            ')'
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    );
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Code_prefix_58__60__33__62_,
                                            'APPLY',
                                            ::DISPATCH(
                                                $GLOBAL::Code_defined, 'APPLY',
                                                $str
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE',
                            ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ),
                            'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),
                            'STORE', $pos );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'to', ),
                            'STORE',
                            ::DISPATCH(
                                $GLOBAL::Code_infix_58__60__43__62_,
                                'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 )
                            )
                        );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            ::DISPATCH( $::Int, 'new', 1 )
                        );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $m2;
                                    $m2 = ::DISPATCH(
                                        $::Scalar,
                                        'new',
                                        {
                                            modified => $_MODIFIED,
                                            name     => '$m2'
                                        }
                                    ) unless defined $m2;

                                    BEGIN {
                                        $m2 = ::DISPATCH(
                                            $::Scalar,
                                            'new',
                                            {
                                                modified => $_MODIFIED,
                                                name     => '$m2'
                                            }
                                        );
                                    }
                                    ::DISPATCH_VAR(
                                        $m2, 'STORE',
                                        ::DISPATCH(
                                            $GLOBAL::Code_match_p5rx,
                                            'APPLY',
                                            ::DISPATCH(
                                                $::Str, 'new', chr(92)
                                            ),
                                            $str,
                                            ::DISPATCH(
                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                'APPLY',
                                                $pos,
                                                ::DISPATCH( $::Int, 'new', 0 )
                                            )
                                        )
                                    );
                                    do {
                                        if (
                                            ::DISPATCH(
                                                ::DISPATCH( $m2, "true" ),
                                                "p5landish"
                                            )
                                          )
                                        {
                                            do {
                                                ::DISPATCH_VAR(
                                                    ::DISPATCH( $MATCH, 'to', ),
                                                    'STORE',
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                        'APPLY',
                                                        ::DISPATCH(
                                                            $m2, 'to',
                                                        ),
                                                        ::DISPATCH(
                                                            $::Int, 'new',
                                                            0
                                                        )
                                                    )
                                                );
                                                ::DISPATCH( $::Int, 'new', 1 );
                                              }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( $::Int, 'new', 0 );
                                              }
                                        }
                                      }
                                  }
                              }
                        );
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Hash_ENV,
                                            'LOOKUP',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                'KP6_TOKEN_DEBUGGER'
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    do {
                                        if (
                                            ::DISPATCH(
                                                ::DISPATCH(
                                                    ::DISPATCH( $MATCH, 'bool',
                                                    ),
                                                    "true"
                                                ),
                                                "p5landish"
                                            )
                                          )
                                        {
                                            do {
                                                ::DISPATCH(
                                                    $GLOBAL::Code_say,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__126__62_,
                                                        'APPLY',
                                                        ::DISPATCH(
                                                            $::Str,
                                                            'new',
'<<< token backslash returned true to ('
                                                        ),
                                                        ::DISPATCH(
                                                            $GLOBAL::Code_infix_58__60__126__62_,
                                                            'APPLY',
                                                            ::DISPATCH(
                                                                $MATCH, 'to',
                                                            ),
                                                            ::DISPATCH(
                                                                $::Str, 'new',
                                                                ')'
                                                            )
                                                        )
                                                    )
                                                );
                                              }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH(
                                                    $GLOBAL::Code_say,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $::Str,
                                                        'new',
'<<< token backslash returned false '
                                                    )
                                                );
                                              }
                                        }
                                      }
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {
                            invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::Array, "new",
                                {
                                    _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {
                                                sigil       => '$',
                                                twigil      => '',
                                                name        => 'str',
                                                value       => $::Undef,
                                                has_default => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_named_only => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_optional => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_slurpy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_multidimensional =>
                                                  ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                  ),
                                                is_rw => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_copy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {
                                                sigil       => '$',
                                                twigil      => '',
                                                name        => 'pos',
                                                value       => $::Undef,
                                                has_default => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_named_only => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_optional => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_slurpy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_multidimensional =>
                                                  ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                  ),
                                                is_rw => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_copy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'newline' ),
            ::DISPATCH(
                $::Code, 'new',
                {
                    code => sub {
                        my $MATCH;
                        $MATCH =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$MATCH' } )
                          unless defined $MATCH;

                        BEGIN {
                            $MATCH =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$MATCH' } );
                        }
                        my $List__ =
                          ::DISPATCH( $::ArrayContainer, 'new',
                            { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$str' } )
                          unless defined $str;

                        BEGIN {
                            $str =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$str' } );
                        }
                        my $pos;
                        $pos =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$pos' } )
                          unless defined $pos;

                        BEGIN {
                            $pos =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$pos' } );
                        }
                        $self = shift;
                        my $CAPTURE;
                        $CAPTURE =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$CAPTURE' } )
                          unless defined $CAPTURE;

                        BEGIN {
                            $CAPTURE = ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$CAPTURE' }
                            );
                        }
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        do {
                            ::MODIFIED($List__);
                            $List__ = ::DISPATCH( $CAPTURE, 'array', );
                        };
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( exists $Hash__->{_value}{_hash}{'str'} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str =
                                      ::DISPATCH( $Hash__, 'LOOKUP',
                                        ::DISPATCH( $::Str, 'new', 'str' ) );
                                  }
                            }
                            elsif (
                                exists $List__->{_value}{_array}[$_param_index]
                              )
                            {
                                $str =
                                  $List__->{_value}{_array}[ $_param_index++ ];
                            }
                            if ( exists $Hash__->{_value}{_hash}{'pos'} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos =
                                      ::DISPATCH( $Hash__, 'LOOKUP',
                                        ::DISPATCH( $::Str, 'new', 'pos' ) );
                                  }
                            }
                            elsif (
                                exists $List__->{_value}{_array}[$_param_index]
                              )
                            {
                                $pos =
                                  $List__->{_value}{_array}[ $_param_index++ ];
                            }
                        }
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Hash_ENV,
                                            'LOOKUP',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                'KP6_TOKEN_DEBUGGER'
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    ::DISPATCH(
                                        $GLOBAL::Code_say,
                                        'APPLY',
                                        ::DISPATCH(
                                            $GLOBAL::Code_infix_58__60__126__62_,
                                            'APPLY',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                '>>> token newline at '
                                            ),
                                            ::DISPATCH(
                                                $GLOBAL::Code_infix_58__60__126__62_,
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    $GLOBAL::Code_infix_58__60__126__62_,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $::Str, 'new',
                                                        ' of ('
                                                    ),
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__126__62_,
                                                        'APPLY', $str,
                                                        ::DISPATCH(
                                                            $::Str, 'new',
                                                            ')'
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    );
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Code_prefix_58__60__33__62_,
                                            'APPLY',
                                            ::DISPATCH(
                                                $GLOBAL::Code_defined, 'APPLY',
                                                $str
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE',
                            ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ),
                            'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),
                            'STORE', $pos );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'to', ),
                            'STORE',
                            ::DISPATCH(
                                $GLOBAL::Code_infix_58__60__43__62_,
                                'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 )
                            )
                        );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            ::DISPATCH( $::Int, 'new', 1 )
                        );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $m2;
                                    $m2 = ::DISPATCH(
                                        $::Scalar,
                                        'new',
                                        {
                                            modified => $_MODIFIED,
                                            name     => '$m2'
                                        }
                                    ) unless defined $m2;

                                    BEGIN {
                                        $m2 = ::DISPATCH(
                                            $::Scalar,
                                            'new',
                                            {
                                                modified => $_MODIFIED,
                                                name     => '$m2'
                                            }
                                        );
                                    }
                                    ::DISPATCH_VAR(
                                        $m2, 'STORE',
                                        ::DISPATCH(
                                            $GLOBAL::Code_match_p5rx,
                                            'APPLY',
                                            ::DISPATCH(
                                                $GLOBAL::Code_infix_58__60__126__62_,
                                                'APPLY',
                                                ::DISPATCH(
                                                    $::Str, 'new', '(?m)('
                                                ),
                                                ::DISPATCH(
                                                    $GLOBAL::Code_infix_58__60__126__62_,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $::Str, 'new',
                                                        chr(10)
                                                    ),
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__126__62_,
                                                        'APPLY',
                                                        ::DISPATCH(
                                                            $::Str, 'new',
                                                            chr(13)
                                                        ),
                                                        ::DISPATCH(
                                                            $GLOBAL::Code_infix_58__60__126__62_,
                                                            'APPLY',
                                                            ::DISPATCH(
                                                                $::Str, 'new',
                                                                '?|'
                                                            ),
                                                            ::DISPATCH(
                                                                $GLOBAL::Code_infix_58__60__126__62_,
                                                                'APPLY',
                                                                ::DISPATCH(
                                                                    $::Str,
                                                                    'new',
                                                                    chr(13)
                                                                ),
                                                                ::DISPATCH(
                                                                    $GLOBAL::Code_infix_58__60__126__62_,
                                                                    'APPLY',
                                                                    ::DISPATCH(
                                                                        $::Str,
                                                                        'new',
                                                                        chr(10)
                                                                    ),
                                                                    ::DISPATCH(
                                                                        $::Str,
                                                                        'new',
                                                                        '?)'
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            ),
                                            $str,
                                            ::DISPATCH(
                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                'APPLY',
                                                $pos,
                                                ::DISPATCH( $::Int, 'new', 0 )
                                            )
                                        )
                                    );
                                    do {
                                        if (
                                            ::DISPATCH(
                                                ::DISPATCH( $m2, "true" ),
                                                "p5landish"
                                            )
                                          )
                                        {
                                            do {
                                                ::DISPATCH_VAR(
                                                    ::DISPATCH( $MATCH, 'to', ),
                                                    'STORE',
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                        'APPLY',
                                                        ::DISPATCH(
                                                            $m2, 'to',
                                                        ),
                                                        ::DISPATCH(
                                                            $::Int, 'new',
                                                            0
                                                        )
                                                    )
                                                );
                                                ::DISPATCH( $::Int, 'new', 1 );
                                              }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( $::Int, 'new', 0 );
                                              }
                                        }
                                      }
                                  }
                              }
                        );
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Hash_ENV,
                                            'LOOKUP',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                'KP6_TOKEN_DEBUGGER'
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    do {
                                        if (
                                            ::DISPATCH(
                                                ::DISPATCH(
                                                    ::DISPATCH( $MATCH, 'bool',
                                                    ),
                                                    "true"
                                                ),
                                                "p5landish"
                                            )
                                          )
                                        {
                                            do {
                                                ::DISPATCH(
                                                    $GLOBAL::Code_say,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__126__62_,
                                                        'APPLY',
                                                        ::DISPATCH(
                                                            $::Str,
                                                            'new',
'<<< token newline returned true to ('
                                                        ),
                                                        ::DISPATCH(
                                                            $GLOBAL::Code_infix_58__60__126__62_,
                                                            'APPLY',
                                                            ::DISPATCH(
                                                                $MATCH, 'to',
                                                            ),
                                                            ::DISPATCH(
                                                                $::Str, 'new',
                                                                ')'
                                                            )
                                                        )
                                                    )
                                                );
                                              }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH(
                                                    $GLOBAL::Code_say,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $::Str,
                                                        'new',
'<<< token newline returned false '
                                                    )
                                                );
                                              }
                                        }
                                      }
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {
                            invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::Array, "new",
                                {
                                    _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {
                                                sigil       => '$',
                                                twigil      => '',
                                                name        => 'str',
                                                value       => $::Undef,
                                                has_default => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_named_only => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_optional => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_slurpy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_multidimensional =>
                                                  ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                  ),
                                                is_rw => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_copy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {
                                                sigil       => '$',
                                                twigil      => '',
                                                name        => 'pos',
                                                value       => $::Undef,
                                                has_default => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_named_only => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_optional => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_slurpy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_multidimensional =>
                                                  ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                  ),
                                                is_rw => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_copy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
        ::DISPATCH(
            ::DISPATCH( $::KindaPerl6::Grammar, 'HOW', ),
            'add_method',
            ::DISPATCH( $::Str, 'new', 'not_newline' ),
            ::DISPATCH(
                $::Code, 'new',
                {
                    code => sub {
                        my $MATCH;
                        $MATCH =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$MATCH' } )
                          unless defined $MATCH;

                        BEGIN {
                            $MATCH =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$MATCH' } );
                        }
                        my $List__ =
                          ::DISPATCH( $::ArrayContainer, 'new',
                            { modified => $_MODIFIED, name => '$List__' } );
                        my $str;
                        $str =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$str' } )
                          unless defined $str;

                        BEGIN {
                            $str =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$str' } );
                        }
                        my $pos;
                        $pos =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$pos' } )
                          unless defined $pos;

                        BEGIN {
                            $pos =
                              ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$pos' } );
                        }
                        $self = shift;
                        my $CAPTURE;
                        $CAPTURE =
                          ::DISPATCH( $::Scalar, 'new',
                            { modified => $_MODIFIED, name => '$CAPTURE' } )
                          unless defined $CAPTURE;

                        BEGIN {
                            $CAPTURE = ::DISPATCH( $::Scalar, 'new',
                                { modified => $_MODIFIED, name => '$CAPTURE' }
                            );
                        }
                        ::DISPATCH_VAR( $CAPTURE, "STORE", ::CAPTURIZE( \@_ ) );
                        do {
                            ::MODIFIED($List__);
                            $List__ = ::DISPATCH( $CAPTURE, 'array', );
                        };
                        do {
                            ::MODIFIED($Hash__);
                            $Hash__ = ::DISPATCH( $CAPTURE, 'hash', );
                        };
                        {
                            my $_param_index = 0;
                            if ( exists $Hash__->{_value}{_hash}{'str'} ) {
                                do {
                                    ::MODIFIED($str);
                                    $str =
                                      ::DISPATCH( $Hash__, 'LOOKUP',
                                        ::DISPATCH( $::Str, 'new', 'str' ) );
                                  }
                            }
                            elsif (
                                exists $List__->{_value}{_array}[$_param_index]
                              )
                            {
                                $str =
                                  $List__->{_value}{_array}[ $_param_index++ ];
                            }
                            if ( exists $Hash__->{_value}{_hash}{'pos'} ) {
                                do {
                                    ::MODIFIED($pos);
                                    $pos =
                                      ::DISPATCH( $Hash__, 'LOOKUP',
                                        ::DISPATCH( $::Str, 'new', 'pos' ) );
                                  }
                            }
                            elsif (
                                exists $List__->{_value}{_array}[$_param_index]
                              )
                            {
                                $pos =
                                  $List__->{_value}{_array}[ $_param_index++ ];
                            }
                        }
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Hash_ENV,
                                            'LOOKUP',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                'KP6_TOKEN_DEBUGGER'
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    ::DISPATCH(
                                        $GLOBAL::Code_say,
                                        'APPLY',
                                        ::DISPATCH(
                                            $GLOBAL::Code_infix_58__60__126__62_,
                                            'APPLY',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                '>>> token not_newline at '
                                            ),
                                            ::DISPATCH(
                                                $GLOBAL::Code_infix_58__60__126__62_,
                                                'APPLY', $pos,
                                                ::DISPATCH(
                                                    $GLOBAL::Code_infix_58__60__126__62_,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $::Str, 'new',
                                                        ' of ('
                                                    ),
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__126__62_,
                                                        'APPLY', $str,
                                                        ::DISPATCH(
                                                            $::Str, 'new',
                                                            ')'
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    );
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Code_prefix_58__60__33__62_,
                                            'APPLY',
                                            ::DISPATCH(
                                                $GLOBAL::Code_defined, 'APPLY',
                                                $str
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    ::DISPATCH_VAR( $str, 'STORE', $_ );
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        $MATCH;
                        ::DISPATCH_VAR( $MATCH, 'STORE',
                            ::DISPATCH( $::Match, 'new', ) );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'match_str', ),
                            'STORE', $str );
                        ::DISPATCH_VAR( ::DISPATCH( $MATCH, 'from', ),
                            'STORE', $pos );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'to', ),
                            'STORE',
                            ::DISPATCH(
                                $GLOBAL::Code_infix_58__60__43__62_,
                                'APPLY', $pos, ::DISPATCH( $::Int, 'new', 0 )
                            )
                        );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            ::DISPATCH( $::Int, 'new', 1 )
                        );
                        ::DISPATCH_VAR(
                            ::DISPATCH( $MATCH, 'bool', ),
                            'STORE',
                            do {
                                do {
                                    my $m2;
                                    $m2 = ::DISPATCH(
                                        $::Scalar,
                                        'new',
                                        {
                                            modified => $_MODIFIED,
                                            name     => '$m2'
                                        }
                                    ) unless defined $m2;

                                    BEGIN {
                                        $m2 = ::DISPATCH(
                                            $::Scalar,
                                            'new',
                                            {
                                                modified => $_MODIFIED,
                                                name     => '$m2'
                                            }
                                        );
                                    }
                                    ::DISPATCH_VAR(
                                        $m2, 'STORE',
                                        ::DISPATCH(
                                            $GLOBAL::Code_match_p5rx,
                                            'APPLY',
                                            ::DISPATCH( $::Str, 'new', '.' ),
                                            $str,
                                            ::DISPATCH(
                                                $GLOBAL::Code_infix_58__60__43__62_,
                                                'APPLY',
                                                $pos,
                                                ::DISPATCH( $::Int, 'new', 0 )
                                            )
                                        )
                                    );
                                    do {
                                        if (
                                            ::DISPATCH(
                                                ::DISPATCH( $m2, "true" ),
                                                "p5landish"
                                            )
                                          )
                                        {
                                            do {
                                                ::DISPATCH_VAR(
                                                    ::DISPATCH( $MATCH, 'to', ),
                                                    'STORE',
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__43__62_,
                                                        'APPLY',
                                                        ::DISPATCH(
                                                            $m2, 'to',
                                                        ),
                                                        ::DISPATCH(
                                                            $::Int, 'new',
                                                            0
                                                        )
                                                    )
                                                );
                                                ::DISPATCH( $::Int, 'new', 1 );
                                              }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH( $::Int, 'new', 0 );
                                              }
                                        }
                                      }
                                  }
                              }
                        );
                        do {
                            if (
                                ::DISPATCH(
                                    ::DISPATCH(
                                        ::DISPATCH(
                                            $GLOBAL::Hash_ENV,
                                            'LOOKUP',
                                            ::DISPATCH(
                                                $::Str, 'new',
                                                'KP6_TOKEN_DEBUGGER'
                                            )
                                        ),
                                        "true"
                                    ),
                                    "p5landish"
                                )
                              )
                            {
                                do {
                                    do {
                                        if (
                                            ::DISPATCH(
                                                ::DISPATCH(
                                                    ::DISPATCH( $MATCH, 'bool',
                                                    ),
                                                    "true"
                                                ),
                                                "p5landish"
                                            )
                                          )
                                        {
                                            do {
                                                ::DISPATCH(
                                                    $GLOBAL::Code_say,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $GLOBAL::Code_infix_58__60__126__62_,
                                                        'APPLY',
                                                        ::DISPATCH(
                                                            $::Str,
                                                            'new',
'<<< token not_newline returned true to ('
                                                        ),
                                                        ::DISPATCH(
                                                            $GLOBAL::Code_infix_58__60__126__62_,
                                                            'APPLY',
                                                            ::DISPATCH(
                                                                $MATCH, 'to',
                                                            ),
                                                            ::DISPATCH(
                                                                $::Str, 'new',
                                                                ')'
                                                            )
                                                        )
                                                    )
                                                );
                                              }
                                        }
                                        else {
                                            do {
                                                ::DISPATCH(
                                                    $GLOBAL::Code_say,
                                                    'APPLY',
                                                    ::DISPATCH(
                                                        $::Str,
                                                        'new',
'<<< token not_newline returned false '
                                                    )
                                                );
                                              }
                                        }
                                      }
                                  }
                            }
                            else { ::DISPATCH( $::Bit, "new", 0 ) }
                        };
                        return ($MATCH);
                    },
                    signature => ::DISPATCH(
                        $::Signature,
                        "new",
                        {
                            invocant => $::Undef,
                            array    => ::DISPATCH(
                                $::Array, "new",
                                {
                                    _array => [
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {
                                                sigil       => '$',
                                                twigil      => '',
                                                name        => 'str',
                                                value       => $::Undef,
                                                has_default => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_named_only => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_optional => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_slurpy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_multidimensional =>
                                                  ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                  ),
                                                is_rw => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_copy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                            }
                                        ),
                                        ::DISPATCH(
                                            $::Signature::Item,
                                            'new',
                                            {
                                                sigil       => '$',
                                                twigil      => '',
                                                name        => 'pos',
                                                value       => $::Undef,
                                                has_default => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_named_only => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_optional => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_slurpy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_multidimensional =>
                                                  ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                  ),
                                                is_rw => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                                is_copy => ::DISPATCH(
                                                    $::Bit, 'new', 0
                                                ),
                                            }
                                        ),
                                    ]
                                }
                            ),
                            return => $::Undef,
                        }
                    ),
                }
            )
        );
    };
    1
}
