#!/usr/bin/perl
use warnings;
use strict;

sub mangle {
    my $id = shift;
    return 'SMOP__ID__'.$id;
}

my @properties = qw(RI RI.id prefix include);
my %properties;

my %methods;
my $method;

# FIX convoluted
LINE: while (my $line = <>) {
    if ($method) {
        if ($line =~ /^%/) {
            undef $method;
        } else {
            $methods{$method} .= $line;
            next;
        }
    }
    if ($line =~ /^%method\s*(.*)$/) {
        $method = $1;
        next;
    }
    for my $property (@properties) {
        if ($line =~ /^% \s* \Q$property\E \s+ (.*)$/x) {
            $properties{$property} = $1;
            next LINE;
        }
    }
}


print qq[/* generated by tools/ri - do not edit*/
#include <smop.h>
#include <smop_lowlevel.h>
#include <smop_s1p.h>
];
for (split (/,/,$properties{include} || '')) {
    print "#include $_\n";
}

my $id = defined $properties{"RI.id"} ? $properties{"RI.id"} : "unknown RI";

if ($properties{RI}) {
    print "SMOP__Object* $properties{RI};\n";
} else {
    print "static SMOP__Object* RI;\n";
}
my $RI = $properties{RI} || 'RI';
for (keys %methods) {
    print 'static SMOP__Object* ',mangle($_),";\n";
}
print q[
static SMOP__Object* message(SMOP__Object* interpreter,
                                     SMOP__ResponderInterface* self,
                                     SMOP__Object* identifier,
                                     SMOP__Object* capture) {
  ___NATIVE_CAPTURE_ONLY___;
  ___CONST_IDENTIFIER_ONLY___;
  ___INVOCANT_RI_SHOULD_MATCH___;
  SMOP__Object* ret = SMOP__NATIVE__bool_false;

];
print '  ';
while (my ($method,$body) = each %methods) {
    print "if (",mangle($method)," == identifier) {\n$body  } else ";
}
print qq[{
    ___UNKNOWN_METHOD___;
  }

  SMOP_RELEASE(interpreter,capture);
  return ret;
}
];

print qq[
void $properties{prefix}_init() {
  $RI = SMOP__RI__create(
      message,
      smop_lowlevel_generic_reference,
      smop_lowlevel_generic_release,
      "$id");
];
for (keys %methods) {
    print "  ",mangle($_)," = ","SMOP__NATIVE__idconst_create(\"$_\");\n";
}
print qq[ 
}

void $properties{prefix}_destr() {
  SMOP_RELEASE(SMOP__GlobalInterpreter,$RI);
}
]
