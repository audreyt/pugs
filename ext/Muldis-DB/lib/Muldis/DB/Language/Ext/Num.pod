=pod

=encoding utf8

=head1 NAME

Muldis::DB::Language::Ext::Num -
Muldis D extension for numeric data types and operators

=head1 PREFACE

This document is part of the Muldis D language specification, whose root
document is L<Muldis::DB::Language>; you should read that root document
before you read this one, which provides subservient details.

=head1 DESCRIPTION

Muldis D has a mandatory core set of system-defined (eternally available)
entities, which is referred to as the I<Muldis D core> or the I<core>; they
are the minimal entities that all Muldis D implementations need to provide;
they are mutually self-describing and are used to bootstrap the language;
any entities outside the core, called I<Muldis D extensions>, are
non-mandatory and are defined in terms of the core or each other, but the
reverse isn't true.

This current C<Num> document describes the system-defined I<Muldis D Num
Extension>, which consists of non-integer numeric data types and operators,
particularly rational and floating-point numbers.

This current document does not describe the polymorphic operators that all
types, or some types including core types, have defined over them; said
operators are defined once for all types in L<Muldis::DB::Language::Core>.

I<This documentation is pending.>

=head1 TYPE SUMMARY

Following are all the data types described in this document, arranged in a
type graph according to their proper sub|supertype relationships (but that
the first 4 just reappear from the core set to provide a similar context,
and aren't re-described here):

    sys.type.Universal

        sys.type.Empty

        sys.type.Scalar
            sys.type.Ordinal

                # The following are all regular ordinal scalar types.

                sys.type.Num.Rat
                    sys.type.Num.RatI
                    sys.type.Num.RatB
                    sys.type.Num.RatD
                sys.type.Num.FloatB32
                sys.type.Num.FloatB64

I<This documentation is pending.>

=head1 SYSTEM-DEFINED DATA TYPES AND ROUTINES

=head2 Numeric Data Types

These non-fundamental scalar data types describe common kinds of numbers
that are not specifically limited to having integer values.  While integers
are part of the Muldis D core, other kinds of numbers are not, for various
reasons, and are represented under this "Numeric" type group instead.  As
is usual with the Muldis::DB type system, the types mentioned below are all
mutually exclusive aside from explicit subtype relationships.  I<Of course,
dealing with these types in general isn't a perfect science; they stand to
be revised or rewritten.>

=over

=item C<sys.type.Num.Rat>

A C<Num.Rat> is a single rational exact real number of any magnitude.  It
is conceptually an C<Int> (numerator) divided by a C<PInt> (denominator).
Its default value is zero.  The cardinality of this type is infinity; to
define a most-generalized finite C<Num.Rat> subtype, you must specify the
greatest magnitude positive integer denominator that its values have, plus
the the 2 integer end-points of the inclusive range of the numerator that
all its values have.  Common subtypes specify maximum denominators that are
powers of either 2 or 10.

=item C<sys.type.Num.RatI>

A C<Num.RatI> (rational: integer) is a proper subtype of C<Num.Rat> where
the denominator is 1; every value of this type maps to exactly 1 C<Int>
value and vice-versa, so it is conceptually like an integer, without being
disjoint to C<Num.Rat>.

=item C<sys.type.Num.RatB>

A C<Num.RatB> (rational: binary) is a proper subtype of C<Num.Rat> where
the denominator is a power of 2; it is the best option to exactly represent
non-integers that are conceptually binary or octal or hexadecimal.

=item C<sys.type.Num.RatD>

A C<Num.RatD> (rational: decimal) is a proper subtype of C<Num.Rat> where
the denominator is a power of 10; it is the best option to exactly
represent non-integers that are conceptually the decimal numbers that
lay-people work with.

=item C<sys.type.Num.FloatB32>

A C<Num.FloatB32> implements a 32-bit binary floating-point numeric as
specified in IEEE 754, having 1 bit for sign, 8 bits for exponent, and 23
bits for mantissa.  As per the standard, most of its values are ordinary
real numbers, but it has distinct representations for +/- zero, +/-
infinity, and various kinds of NaNs.  The cardinality of this type is
approximately 2**32.

=item C<sys.type.Num.FloatB64>

A C<Num.FloatB64> is the same as C<Num.FloatB32> but for its precision; it
has 1 bit for sign, 11 bits for exponent, and 52 bits for mantissa.  The
cardinality of this type is approximately 2**64.

=back

I<TODO: Maybe add types like FloatB128, fuzzy or interval numbers, complex
numbers, and so on.>

=head1 SEE ALSO

Go to L<Muldis::DB> for the majority of distribution-internal references,
and L<Muldis::DB::SeeAlso> for the majority of distribution-external
references.

=head1 AUTHOR

Darren Duncan (C<perl@DarrenDuncan.net>)

=head1 LICENSE AND COPYRIGHT

This file is part of the Muldis::DB framework.

Muldis::DB is Copyright Â© 2002-2007, Darren Duncan.

See the LICENSE AND COPYRIGHT of L<Muldis::DB> for details.

=head1 ACKNOWLEDGEMENTS

The ACKNOWLEDGEMENTS in L<Muldis::DB> apply to this file too.

=cut
