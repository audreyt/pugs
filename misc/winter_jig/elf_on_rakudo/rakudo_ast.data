0___noun__top__type | pass0
0___noun__type | pass0
1___match | Apply
1___noun__type | pass0
block___statement_block | pass
circumfix___statementlist | unprocessed # Handled by noun___circumfix__op
declarator___empty | pass
expr___expr  | pass
EXPR___expr | pass
expr___match | Apply
expr___noun__top__type | pass0
expr___noun__type | pass0
ident___empty | pass
integer___empty  | Val_Int
method_def___block__ident__multisig | unprocessed # Handled by routine_declarator
multisig___signature | pass
name___ident | pass
noun___circumfix__op | Apply
noun___package_declarator | pass
noun___routine_declarator | pass
noun___scope_declarator | pass
noun___subcall | pass
noun___value | pass
noun___variable | pass
number___integer | pass
package_declarator___block__name__sym | PackageDeclarator
parse___statement_block | CompUnit
routine_declarator___method_def__sym | VirtualRoutineDeclarator
routine_declarator___routine_def__sym | VirtualRoutineDeclarator
routine_def___block__ident__multisig | unprocessed # Handled by routine_declarator___routine_def__sym
scope_declarator___declarator__scoped | Decl
scoped___variable_decl | pass
semilist___EXPR | pass
sigil___empty | pass
signature___empty | []
statement_block___statementlist | Block
statement___expr | pass
statementlist___empty | []
statementlist___statement | pass # It's an array.
subcall___ident__semilist | Apply
sym___empty | pass
top___arity__assoc__expect__lvalue__match__name__pasttype__precclose__syncat | unprocessed
top___arity__assoc__expect__match__name__precclose__syncat | unprocessed
top___assoc__expect__match__name__precclose__syncat | unprocessed
twigil___empty | pass
value___number | pass
variable_decl___variable | pass
variable___name__sigil__twigil | Var
variable___name__sigil | Var


0___0__parameter | pass1
0___empty | pass #XXX what is this?  inside 0___0__parameter.  "sub f($x){}"
named___empty | pass
param_var___ident__sigil | Var
parameter___named__param_var__quant | VirtualParameter
quant___empty | pass
signature___0 | pass # an array of parameters

quote___quote_expression | pass
quote_concat___quote_term | pass
quote_expression___quote_concat | Quote
quote_literal___empty | pass
quote_term___quote_literal | pass
quote_term___variable | pass
value___quote | pass

expr___noun__postfix__top__type | Call
expr___noun__postfix__type | Call
methodop___ident__semilist | unprocessed # Handled by expr___noun__postfix__top__type
postfix___methodop | pass
semilist___empty | []

noun___methodop | Call
noun___empty | pass